--
-- Create Database Script
--   Database Version            : 12.2.0.1.0
--   Database Compatible Level   : 12.2.0
--   Toad Version                : 12.8.0.49
--   DB Connect String           : 51.38.131.211:1521/ORCL
--   Script Created by           : EROB
--   Script Created at           : 05/08/2020 16:21:34
--   Notes                       : 
--

/* InitORCL.ora file begins here.

#####################################################
# Created by Toad
# 05/08/2020 16:21:34
# Note: Only non-default parameters are listed here.
#####################################################

audit_file_dest = "C:\_WORK_\ORACLE\ADMIN\ORCL\ADUMP" 
audit_trail = "DB" 
compatible = "12.2.0" 
control_files = (C:\_WORK_\ORACLE\ORADATA\ORCL\CONTROL01.CTL, C:\_WORK_\ORACLE\ORADATA\ORCL\CONTROL02.CTL) 
db_block_size = 8192 
db_name = "orcl" 
diagnostic_dest = "C:\_WORK_\ORACLE" 
dispatchers = "(PROTOCOL=TCP) (SERVICE=orclXDB)" 
enable_pluggable_database = TRUE 
local_listener = "LISTENER_ORCL" 
memory_target = 1677721600 
nls_language = "AMERICAN" 
nls_territory = "AMERICA" 
open_cursors = 300 
processes = 300 
remote_login_passwordfile = "EXCLUSIVE" 
undo_tablespace = "UNDOTBS1" 

InitORCL.ora file ends here. */


CREATE TABLESPACE SYSAUX DATAFILE 
  'C:\_WORK_\ORACLE\ORADATA\ORCL\SYSAUX01.DBF' SIZE 1620M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED
LOGGING
FORCE LOGGING
DEFAULT 
  NO INMEMORY
ONLINE
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
BLOCKSIZE 8K
SEGMENT SPACE MANAGEMENT AUTO
FLASHBACK ON;


CREATE TABLESPACE SYSTEM DATAFILE 
  'C:\_WORK_\ORACLE\ORADATA\ORCL\SYSTEM01.DBF' SIZE 840M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED
LOGGING
FORCE LOGGING
DEFAULT 
  NO INMEMORY
ONLINE
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
BLOCKSIZE 8K
FLASHBACK ON;


CREATE TEMPORARY TABLESPACE TEMP TEMPFILE 
  'C:\_WORK_\ORACLE\ORADATA\ORCL\TEMP01.DBF' SIZE 129M AUTOEXTEND ON NEXT 640K MAXSIZE UNLIMITED
TABLESPACE GROUP ''
EXTENT MANAGEMENT LOCAL UNIFORM SIZE 1M;


CREATE UNDO TABLESPACE UNDOTBS1 DATAFILE 
  'C:\_WORK_\ORACLE\ORADATA\ORCL\UNDOTBS01.DBF' SIZE 535M AUTOEXTEND ON NEXT 5M MAXSIZE UNLIMITED
ONLINE
RETENTION NOGUARANTEE
BLOCKSIZE 8K
FLASHBACK ON;


CREATE TABLESPACE USERS DATAFILE 
  'C:\_WORK_\ORACLE\ORADATA\ORCL\USERS01.DBF' SIZE 8960K AUTOEXTEND ON NEXT 1280K MAXSIZE UNLIMITED
LOGGING
DEFAULT 
  NO INMEMORY
ONLINE
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
BLOCKSIZE 8K
SEGMENT SPACE MANAGEMENT AUTO
FLASHBACK ON;


ALTER DATABASE ADD LOGFILE GROUP 1(
  'C:\_WORK_\ORACLE\ORADATA\ORCL\REDO01.LOG')
    SIZE 200M;


ALTER DATABASE ADD LOGFILE GROUP 2(
  'C:\_WORK_\ORACLE\ORADATA\ORCL\REDO02.LOG')
    SIZE 200M;


ALTER DATABASE ADD LOGFILE GROUP 3(
  'C:\_WORK_\ORACLE\ORADATA\ORCL\REDO03.LOG')
    SIZE 200M;


CREATE PROFILE "DEFAULT" LIMIT
  SESSIONS_PER_USER UNLIMITED
  CPU_PER_SESSION UNLIMITED
  CPU_PER_CALL UNLIMITED
  CONNECT_TIME UNLIMITED
  IDLE_TIME UNLIMITED
  LOGICAL_READS_PER_SESSION UNLIMITED
  LOGICAL_READS_PER_CALL UNLIMITED
  COMPOSITE_LIMIT UNLIMITED
  PRIVATE_SGA UNLIMITED
  FAILED_LOGIN_ATTEMPTS 10
  PASSWORD_LIFE_TIME 180
  PASSWORD_REUSE_TIME UNLIMITED
  PASSWORD_REUSE_MAX UNLIMITED
  PASSWORD_LOCK_TIME 1
  PASSWORD_GRACE_TIME 7
  PASSWORD_VERIFY_FUNCTION NULL;


CREATE PROFILE ORA_STIG_PROFILE LIMIT
  SESSIONS_PER_USER DEFAULT
  CPU_PER_SESSION DEFAULT
  CPU_PER_CALL DEFAULT
  CONNECT_TIME DEFAULT
  IDLE_TIME 15
  LOGICAL_READS_PER_SESSION DEFAULT
  LOGICAL_READS_PER_CALL DEFAULT
  COMPOSITE_LIMIT DEFAULT
  PRIVATE_SGA DEFAULT
  FAILED_LOGIN_ATTEMPTS 3
  PASSWORD_LIFE_TIME 60
  PASSWORD_REUSE_TIME 365
  PASSWORD_REUSE_MAX 10
  PASSWORD_LOCK_TIME UNLIMITED
  PASSWORD_GRACE_TIME 5
  PASSWORD_VERIFY_FUNCTION ORA12C_STIG_VERIFY_FUNCTION;


CREATE ROLE ADM_PARALLEL_EXECUTE_TASK NOT IDENTIFIED;



CREATE ROLE APPLICATION_TRACE_VIEWER NOT IDENTIFIED;



CREATE ROLE AQ_ADMINISTRATOR_ROLE NOT IDENTIFIED;

-- System privileges granted to AQ_ADMINISTRATOR_ROLE
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_EVALUATION_CONTEXT_OBJ,
  GRANTEE      => 'AQ_ADMINISTRATOR_ROLE',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_OBJ,
  GRANTEE      => 'AQ_ADMINISTRATOR_ROLE',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_SET_OBJ,
  GRANTEE      => 'AQ_ADMINISTRATOR_ROLE',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'DEQUEUE_ANY',
  GRANTEE      => 'AQ_ADMINISTRATOR_ROLE',
  ADMIN_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'ENQUEUE_ANY',
  GRANTEE      => 'AQ_ADMINISTRATOR_ROLE',
  ADMIN_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'AQ_ADMINISTRATOR_ROLE',
  ADMIN_OPTION => TRUE);
END;
/



CREATE ROLE AQ_USER_ROLE NOT IDENTIFIED;



CREATE ROLE AUDIT_ADMIN NOT IDENTIFIED;

-- System privileges granted to AUDIT_ADMIN
GRANT AUDIT ANY TO AUDIT_ADMIN;
GRANT AUDIT SYSTEM TO AUDIT_ADMIN;



CREATE ROLE AUDIT_VIEWER NOT IDENTIFIED;



CREATE ROLE AUTHENTICATEDUSER NOT IDENTIFIED;



CREATE ROLE CAPTURE_ADMIN NOT IDENTIFIED;



CREATE ROLE CDB_DBA NOT IDENTIFIED;

-- System privileges granted to CDB_DBA
GRANT SET CONTAINER TO CDB_DBA;



CREATE ROLE CONNECT NOT IDENTIFIED;

-- System privileges granted to CONNECT
GRANT CREATE SESSION TO CONNECT;
GRANT SET CONTAINER TO CONNECT;



CREATE ROLE CSW_USR_ROLE NOT IDENTIFIED;



CREATE ROLE CTXAPP NOT IDENTIFIED;

-- System privileges granted to CTXAPP
GRANT CREATE SEQUENCE TO CTXAPP;



CREATE ROLE DATAPATCH_ROLE NOT IDENTIFIED;



CREATE ROLE DBFS_ROLE NOT IDENTIFIED;



CREATE ROLE DBJAVASCRIPT NOT IDENTIFIED;



CREATE ROLE DBMS_MDX_INTERNAL NOT IDENTIFIED;



CREATE ROLE DV_ACCTMGR NOT IDENTIFIED;

-- System privileges granted to DV_ACCTMGR
GRANT ALTER PROFILE TO DV_ACCTMGR;
GRANT ALTER USER TO DV_ACCTMGR;
GRANT CREATE PROFILE TO DV_ACCTMGR;
GRANT CREATE SESSION TO DV_ACCTMGR WITH ADMIN OPTION;
GRANT CREATE USER TO DV_ACCTMGR;
GRANT DROP PROFILE TO DV_ACCTMGR;
GRANT DROP USER TO DV_ACCTMGR;

-- Roles granted to DV_ACCTMGR
GRANT CONNECT TO DV_ACCTMGR WITH ADMIN OPTION;



CREATE ROLE DV_AUDIT_CLEANUP NOT IDENTIFIED;



CREATE ROLE DV_DATAPUMP_NETWORK_LINK NOT IDENTIFIED;



CREATE ROLE DV_GOLDENGATE_ADMIN NOT IDENTIFIED;



CREATE ROLE DV_GOLDENGATE_REDO_ACCESS NOT IDENTIFIED;



CREATE ROLE DV_MONITOR NOT IDENTIFIED;



CREATE ROLE DV_PATCH_ADMIN NOT IDENTIFIED;



CREATE ROLE DV_POLICY_OWNER NOT IDENTIFIED;



CREATE ROLE DV_PUBLIC NOT IDENTIFIED;



CREATE ROLE DV_REALM_OWNER NOT IDENTIFIED;

-- System privileges granted to DV_REALM_OWNER
GRANT ALTER ANY CLUSTER TO DV_REALM_OWNER;
GRANT ALTER ANY DIMENSION TO DV_REALM_OWNER;
GRANT ALTER ANY INDEX TO DV_REALM_OWNER;
GRANT ALTER ANY INDEXTYPE TO DV_REALM_OWNER;
GRANT ALTER ANY MATERIALIZED VIEW TO DV_REALM_OWNER;
GRANT ALTER ANY OPERATOR TO DV_REALM_OWNER;
GRANT ALTER ANY OUTLINE TO DV_REALM_OWNER;
GRANT ALTER ANY PROCEDURE TO DV_REALM_OWNER;
GRANT ALTER ANY ROLE TO DV_REALM_OWNER;
GRANT ALTER ANY SEQUENCE TO DV_REALM_OWNER;
GRANT ALTER ANY TABLE TO DV_REALM_OWNER;
GRANT ALTER ANY TRIGGER TO DV_REALM_OWNER;
GRANT ALTER ANY TYPE TO DV_REALM_OWNER;
GRANT COMMENT ANY TABLE TO DV_REALM_OWNER;
GRANT CREATE ANY CLUSTER TO DV_REALM_OWNER;
GRANT CREATE ANY CONTEXT TO DV_REALM_OWNER;
GRANT CREATE ANY DIMENSION TO DV_REALM_OWNER;
GRANT CREATE ANY INDEX TO DV_REALM_OWNER;
GRANT CREATE ANY INDEXTYPE TO DV_REALM_OWNER;
GRANT CREATE ANY MATERIALIZED VIEW TO DV_REALM_OWNER;
GRANT CREATE ANY OPERATOR TO DV_REALM_OWNER;
GRANT CREATE ANY OUTLINE TO DV_REALM_OWNER;
GRANT CREATE ANY PROCEDURE TO DV_REALM_OWNER;
GRANT CREATE ANY SEQUENCE TO DV_REALM_OWNER;
GRANT CREATE ANY SYNONYM TO DV_REALM_OWNER;
GRANT CREATE ANY TABLE TO DV_REALM_OWNER;
GRANT CREATE ANY TRIGGER TO DV_REALM_OWNER;
GRANT CREATE ANY TYPE TO DV_REALM_OWNER;
GRANT CREATE ANY VIEW TO DV_REALM_OWNER;
GRANT CREATE ROLE TO DV_REALM_OWNER;
GRANT DELETE ANY TABLE TO DV_REALM_OWNER;
GRANT DROP ANY CLUSTER TO DV_REALM_OWNER;
GRANT DROP ANY DIMENSION TO DV_REALM_OWNER;
GRANT DROP ANY INDEX TO DV_REALM_OWNER;
GRANT DROP ANY INDEXTYPE TO DV_REALM_OWNER;
GRANT DROP ANY MATERIALIZED VIEW TO DV_REALM_OWNER;
GRANT DROP ANY OPERATOR TO DV_REALM_OWNER;
GRANT DROP ANY OUTLINE TO DV_REALM_OWNER;
GRANT DROP ANY PROCEDURE TO DV_REALM_OWNER;
GRANT DROP ANY ROLE TO DV_REALM_OWNER;
GRANT DROP ANY SEQUENCE TO DV_REALM_OWNER;
GRANT DROP ANY SYNONYM TO DV_REALM_OWNER;
GRANT DROP ANY TABLE TO DV_REALM_OWNER;
GRANT DROP ANY TRIGGER TO DV_REALM_OWNER;
GRANT DROP ANY TYPE TO DV_REALM_OWNER;
GRANT DROP ANY VIEW TO DV_REALM_OWNER;
GRANT EXECUTE ANY INDEXTYPE TO DV_REALM_OWNER;
GRANT EXECUTE ANY OPERATOR TO DV_REALM_OWNER;
GRANT EXECUTE ANY PROCEDURE TO DV_REALM_OWNER;
GRANT EXECUTE ANY TYPE TO DV_REALM_OWNER;
GRANT GRANT ANY OBJECT PRIVILEGE TO DV_REALM_OWNER;
GRANT GRANT ANY PRIVILEGE TO DV_REALM_OWNER;
GRANT GRANT ANY ROLE TO DV_REALM_OWNER;
GRANT INSERT ANY TABLE TO DV_REALM_OWNER;
GRANT SELECT ANY SEQUENCE TO DV_REALM_OWNER;
GRANT SELECT ANY TABLE TO DV_REALM_OWNER;
GRANT UPDATE ANY TABLE TO DV_REALM_OWNER;



CREATE ROLE DV_REALM_RESOURCE NOT IDENTIFIED;

-- System privileges granted to DV_REALM_RESOURCE
GRANT CREATE CLUSTER TO DV_REALM_RESOURCE;
GRANT CREATE INDEXTYPE TO DV_REALM_RESOURCE;
GRANT CREATE OPERATOR TO DV_REALM_RESOURCE;
GRANT CREATE PROCEDURE TO DV_REALM_RESOURCE;
GRANT CREATE SEQUENCE TO DV_REALM_RESOURCE;
GRANT CREATE SYNONYM TO DV_REALM_RESOURCE;
GRANT CREATE TABLE TO DV_REALM_RESOURCE;
GRANT CREATE TRIGGER TO DV_REALM_RESOURCE;
GRANT CREATE TYPE TO DV_REALM_RESOURCE;
GRANT CREATE VIEW TO DV_REALM_RESOURCE;



CREATE ROLE DV_SECANALYST NOT IDENTIFIED;



CREATE ROLE DV_STREAMS_ADMIN NOT IDENTIFIED;



CREATE ROLE DV_XSTREAM_ADMIN NOT IDENTIFIED;



CREATE ROLE EJBCLIENT NOT IDENTIFIED;



CREATE ROLE GATHER_SYSTEM_STATISTICS NOT IDENTIFIED;



CREATE ROLE GDS_CATALOG_SELECT NOT IDENTIFIED;



CREATE ROLE GGSYS_ROLE NOT IDENTIFIED;



CREATE ROLE GLOBAL_AQ_USER_ROLE IDENTIFIED GLOBALLY;



CREATE ROLE GSMUSER_ROLE NOT IDENTIFIED;

-- Roles granted to GSMUSER_ROLE
GRANT CONNECT TO GSMUSER_ROLE;



CREATE ROLE GSM_POOLADMIN_ROLE NOT IDENTIFIED;

-- Roles granted to GSM_POOLADMIN_ROLE
GRANT CONNECT TO GSM_POOLADMIN_ROLE;



CREATE ROLE HS_ADMIN_EXECUTE_ROLE NOT IDENTIFIED;



CREATE ROLE HS_ADMIN_SELECT_ROLE NOT IDENTIFIED;



CREATE ROLE JAVADEBUGPRIV NOT IDENTIFIED;

-- System privileges granted to JAVADEBUGPRIV
GRANT DEBUG ANY PROCEDURE TO JAVADEBUGPRIV;
GRANT DEBUG CONNECT SESSION TO JAVADEBUGPRIV;



CREATE ROLE JAVAIDPRIV NOT IDENTIFIED;



CREATE ROLE JAVAUSERPRIV NOT IDENTIFIED;



CREATE ROLE JAVA_ADMIN NOT IDENTIFIED;



CREATE ROLE JAVA_DEPLOY NOT IDENTIFIED;



CREATE ROLE JMXSERVER NOT IDENTIFIED;



CREATE ROLE LBAC_DBA NOT IDENTIFIED;



CREATE ROLE OEM_ADVISOR NOT IDENTIFIED;

-- System privileges granted to OEM_ADVISOR
GRANT ADMINISTER SQL TUNING SET TO OEM_ADVISOR;
GRANT ADVISOR TO OEM_ADVISOR;
GRANT CREATE JOB TO OEM_ADVISOR;



CREATE ROLE OLAP_DBA NOT IDENTIFIED;

-- System privileges granted to OLAP_DBA
GRANT CREATE ANY CUBE TO OLAP_DBA;
GRANT CREATE ANY CUBE BUILD PROCESS TO OLAP_DBA;
GRANT CREATE ANY CUBE DIMENSION TO OLAP_DBA;
GRANT CREATE ANY MEASURE FOLDER TO OLAP_DBA;
GRANT CREATE ANY TABLE TO OLAP_DBA;
GRANT CREATE ANY VIEW TO OLAP_DBA;
GRANT CREATE JOB TO OLAP_DBA;
GRANT CREATE SEQUENCE TO OLAP_DBA;
GRANT DELETE ANY CUBE DIMENSION TO OLAP_DBA;
GRANT DELETE ANY MEASURE FOLDER TO OLAP_DBA;
GRANT DELETE ANY TABLE TO OLAP_DBA;
GRANT DROP ANY CUBE TO OLAP_DBA;
GRANT DROP ANY CUBE BUILD PROCESS TO OLAP_DBA;
GRANT DROP ANY CUBE DIMENSION TO OLAP_DBA;
GRANT DROP ANY MEASURE FOLDER TO OLAP_DBA;
GRANT DROP ANY TABLE TO OLAP_DBA;
GRANT DROP ANY VIEW TO OLAP_DBA;
GRANT INSERT ANY CUBE DIMENSION TO OLAP_DBA;
GRANT INSERT ANY MEASURE FOLDER TO OLAP_DBA;
GRANT INSERT ANY TABLE TO OLAP_DBA;
GRANT SELECT ANY CUBE TO OLAP_DBA;
GRANT SELECT ANY CUBE DIMENSION TO OLAP_DBA;
GRANT SELECT ANY TABLE TO OLAP_DBA;
GRANT UPDATE ANY CUBE TO OLAP_DBA;
GRANT UPDATE ANY CUBE BUILD PROCESS TO OLAP_DBA;
GRANT UPDATE ANY CUBE DIMENSION TO OLAP_DBA;
GRANT UPDATE ANY TABLE TO OLAP_DBA;



CREATE ROLE OLAP_USER NOT IDENTIFIED;

-- System privileges granted to OLAP_USER
GRANT CREATE CUBE TO OLAP_USER;
GRANT CREATE CUBE BUILD PROCESS TO OLAP_USER;
GRANT CREATE CUBE DIMENSION TO OLAP_USER;
GRANT CREATE JOB TO OLAP_USER;
GRANT CREATE MEASURE FOLDER TO OLAP_USER;
GRANT CREATE SEQUENCE TO OLAP_USER;
GRANT CREATE TABLE TO OLAP_USER;
GRANT CREATE VIEW TO OLAP_USER;



CREATE ROLE OLAP_XS_ADMIN NOT IDENTIFIED;



CREATE ROLE OPTIMIZER_PROCESSING_RATE NOT IDENTIFIED;



CREATE ROLE ORDADMIN NOT IDENTIFIED;



CREATE ROLE PDB_DBA NOT IDENTIFIED;



CREATE ROLE PROVISIONER NOT IDENTIFIED;



CREATE ROLE RDFCTX_ADMIN NOT IDENTIFIED;



CREATE ROLE RECOVERY_CATALOG_OWNER NOT IDENTIFIED;

-- System privileges granted to RECOVERY_CATALOG_OWNER
GRANT ALTER SESSION TO RECOVERY_CATALOG_OWNER;
GRANT CREATE CLUSTER TO RECOVERY_CATALOG_OWNER;
GRANT CREATE DATABASE LINK TO RECOVERY_CATALOG_OWNER;
GRANT CREATE PROCEDURE TO RECOVERY_CATALOG_OWNER;
GRANT CREATE SEQUENCE TO RECOVERY_CATALOG_OWNER;
GRANT CREATE SESSION TO RECOVERY_CATALOG_OWNER;
GRANT CREATE SYNONYM TO RECOVERY_CATALOG_OWNER;
GRANT CREATE TABLE TO RECOVERY_CATALOG_OWNER;
GRANT CREATE TRIGGER TO RECOVERY_CATALOG_OWNER;
GRANT CREATE TYPE TO RECOVERY_CATALOG_OWNER;
GRANT CREATE VIEW TO RECOVERY_CATALOG_OWNER;



CREATE ROLE RECOVERY_CATALOG_USER NOT IDENTIFIED;



CREATE ROLE SCHEDULER_ADMIN NOT IDENTIFIED;

-- System privileges granted to SCHEDULER_ADMIN
GRANT CREATE ANY CREDENTIAL TO SCHEDULER_ADMIN WITH ADMIN OPTION;
GRANT CREATE ANY JOB TO SCHEDULER_ADMIN WITH ADMIN OPTION;
GRANT CREATE CREDENTIAL TO SCHEDULER_ADMIN WITH ADMIN OPTION;
GRANT CREATE EXTERNAL JOB TO SCHEDULER_ADMIN WITH ADMIN OPTION;
GRANT CREATE JOB TO SCHEDULER_ADMIN WITH ADMIN OPTION;
GRANT EXECUTE ANY CLASS TO SCHEDULER_ADMIN WITH ADMIN OPTION;
GRANT EXECUTE ANY PROGRAM TO SCHEDULER_ADMIN WITH ADMIN OPTION;
GRANT MANAGE SCHEDULER TO SCHEDULER_ADMIN WITH ADMIN OPTION;



CREATE ROLE SELECT_CATALOG_ROLE NOT IDENTIFIED;

-- Roles granted to SELECT_CATALOG_ROLE
GRANT HS_ADMIN_SELECT_ROLE TO SELECT_CATALOG_ROLE;



CREATE ROLE SODA_APP NOT IDENTIFIED;



CREATE ROLE SPATIAL_CSW_ADMIN NOT IDENTIFIED;



CREATE ROLE SYSUMF_ROLE NOT IDENTIFIED;

-- Roles granted to SYSUMF_ROLE
GRANT SELECT_CATALOG_ROLE TO SYSUMF_ROLE;



CREATE ROLE WM_ADMIN_ROLE NOT IDENTIFIED;



CREATE ROLE XDBADMIN NOT IDENTIFIED;



CREATE ROLE XDB_SET_INVOKER NOT IDENTIFIED;



CREATE ROLE XDB_WEBSERVICES NOT IDENTIFIED;



CREATE ROLE XDB_WEBSERVICES_OVER_HTTP NOT IDENTIFIED;



CREATE ROLE XDB_WEBSERVICES_WITH_PUBLIC NOT IDENTIFIED;



CREATE ROLE XS_CACHE_ADMIN NOT IDENTIFIED;



CREATE ROLE XS_CONNECT NOT IDENTIFIED;

-- System privileges granted to XS_CONNECT
GRANT CREATE SESSION TO XS_CONNECT;



CREATE ROLE XS_NAMESPACE_ADMIN NOT IDENTIFIED;



CREATE ROLE XS_SESSION_ADMIN NOT IDENTIFIED;



CREATE ROLLBACK SEGMENT SYSTEM
  TABLESPACE SYSTEM
  STORAGE    (
              INITIAL          112K
              NEXT             56K
              MINEXTENTS       1
              MAXEXTENTS       32765
             );
ALTER ROLLBACK SEGMENT SYSTEM ONLINE;


CREATE OR REPLACE DIRECTORY 
DATA_PUMP_DIR AS 
'C:\_WORK_\Oracle\admin\orcl\dpdump\';


CREATE OR REPLACE DIRECTORY 
OPATCH_INST_DIR AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\OPatch';


CREATE OR REPLACE DIRECTORY 
OPATCH_LOG_DIR AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\rdbms\log';


CREATE OR REPLACE DIRECTORY 
OPATCH_SCRIPT_DIR AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\QOpatch';


CREATE OR REPLACE DIRECTORY 
ORACLECLRDIR AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\bin\clr';


CREATE OR REPLACE DIRECTORY 
ORACLE_BASE AS 
'C:\_WORK_\Oracle';


CREATE OR REPLACE DIRECTORY 
ORACLE_HOME AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1';


CREATE OR REPLACE DIRECTORY 
ORACLE_OCM_CONFIG_DIR AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\ccr\state';


CREATE OR REPLACE DIRECTORY 
ORACLE_OCM_CONFIG_DIR2 AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\ccr\state';


CREATE OR REPLACE DIRECTORY 
ORA_DBMS_FCP_ADMINDIR AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\rdbms\admin';


CREATE OR REPLACE DIRECTORY 
ORA_DBMS_FCP_LOGDIR AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\cfgtoollogs';


CREATE OR REPLACE DIRECTORY 
XMLDIR AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\rdbms\xml';


CREATE OR REPLACE DIRECTORY 
XSDDIR AS 
'C:\_WORK_\Oracle\product\12.2.0\dbhome_1\rdbms\xml\schema';


begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'BATCH_GROUP'
     ,comment                      => 'Consumer group for batch operations'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'BATCH');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'DEFAULT_CONSUMER_GROUP'
     ,comment                      => 'Consumer group for users not assigned to any consumer group'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'OTHER');
  sys.dbms_resource_manager.submit_pending_area();
end;
/

begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager_privs.grant_switch_consumer_group (
      grantee_name                 => 'PUBLIC'
     ,consumer_group               => 'DEFAULT_CONSUMER_GROUP'
     ,grant_option                 => TRUE);
  sys.dbms_resource_manager.submit_pending_area();
end;
/




begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'DSS_CRITICAL_GROUP'
     ,comment                      => 'Consumer group for critical DSS queries'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'DSS_GROUP'
     ,comment                      => 'Consumer group for DSS queries'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'BATCH');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ETL_GROUP'
     ,comment                      => 'Consumer group for ETL'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'BATCH');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'INTERACTIVE_GROUP'
     ,comment                      => 'Consumer group for interactive, OLTP operations'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'LOW_GROUP'
     ,comment                      => 'Consumer group for low-priority sessions'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'OTHER');
  sys.dbms_resource_manager.submit_pending_area();
end;
/

begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager_privs.grant_switch_consumer_group (
      grantee_name                 => 'PUBLIC'
     ,consumer_group               => 'LOW_GROUP'
     ,grant_option                 => FALSE);
  sys.dbms_resource_manager.submit_pending_area();
end;
/




begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ORA$APPQOS_0'
     ,comment                      => 'Consumer group for Application QOS'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ORA$APPQOS_1'
     ,comment                      => 'Consumer group for Application QOS'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ORA$APPQOS_2'
     ,comment                      => 'Consumer group for Application QOS'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ORA$APPQOS_3'
     ,comment                      => 'Consumer group for Application QOS'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ORA$APPQOS_4'
     ,comment                      => 'Consumer group for Application QOS'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ORA$APPQOS_5'
     ,comment                      => 'Consumer group for Application QOS'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ORA$APPQOS_6'
     ,comment                      => 'Consumer group for Application QOS'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ORA$APPQOS_7'
     ,comment                      => 'Consumer group for Application QOS'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'INTERACTIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'ORA$AUTOTASK'
     ,comment                      => 'Consumer group for autotask operations'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'MAINTENANCE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'OTHER_GROUPS'
     ,comment                      => 'Consumer group for users not included in any consumer group with a directive in the currently active plan'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'OTHER');
  sys.dbms_resource_manager.submit_pending_area();
end;
/



begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager.create_consumer_group (
      consumer_group               => 'SYS_GROUP'
     ,comment                      => 'Consumer group for system administrators'
     ,mgmt_mth                     => 'ROUND-ROBIN'
     ,category                     => 'ADMINISTRATIVE');
  sys.dbms_resource_manager.submit_pending_area();
end;
/

begin
  sys.dbms_resource_manager.clear_pending_area();
  sys.dbms_resource_manager.create_pending_area();
  sys.dbms_resource_manager_privs.grant_switch_consumer_group (
      grantee_name                 => 'SYSTEM'
     ,consumer_group               => 'SYS_GROUP'
     ,grant_option                 => FALSE);
  sys.dbms_resource_manager.set_initial_consumer_group (
      user                         => 'SYSTEM'
     ,consumer_group               => 'SYS_GROUP');
  sys.dbms_resource_manager.submit_pending_area();
end;
/




CREATE USER ANONYMOUS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 System Privilege for ANONYMOUS 
  GRANT CREATE SESSION TO ANONYMOUS;


CREATE USER APPQOSSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 3 System Privileges for APPQOSSYS 
  BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'APPQOSSYS', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => FALSE);
END;
/
  GRANT ALTER SESSION TO APPQOSSYS;
  GRANT CREATE SESSION TO APPQOSSYS;
  -- 1 Tablespace Quota for APPQOSSYS 
  ALTER USER APPQOSSYS QUOTA UNLIMITED ON SYSAUX;
  -- 16 Object Privileges for APPQOSSYS 
    GRANT SELECT ON SYS.ALL_SERVICES TO APPQOSSYS;
    GRANT SELECT ON SYS.DBA_CDB_RSRC_PLAN_DIRECTIVES TO APPQOSSYS;
    GRANT SELECT ON SYS.DBA_PDBS TO APPQOSSYS;
    GRANT SELECT ON SYS.DBA_RSRC_CONSUMER_GROUPS TO APPQOSSYS;
    GRANT SELECT ON SYS.DBA_RSRC_GROUP_MAPPINGS TO APPQOSSYS;
    GRANT EXECUTE ON SYS.DBMS_WLM TO APPQOSSYS;
    GRANT SELECT ON SYS.GV_$WLM_DB_MODE TO APPQOSSYS;
    GRANT SELECT ON SYS.V_$CONTAINERS TO APPQOSSYS;
    GRANT SELECT ON SYS.V_$LICENSE TO APPQOSSYS;
    GRANT SELECT ON SYS.V_$OSSTAT TO APPQOSSYS;
    GRANT SELECT ON SYS.V_$PROCESS TO APPQOSSYS;
    GRANT SELECT ON SYS.V_$SESSION TO APPQOSSYS;
    GRANT SELECT ON SYS.V_$WLM_DB_MODE TO APPQOSSYS;
    GRANT SELECT ON SYS.V_$WLM_PCMETRIC TO APPQOSSYS;
    GRANT EXECUTE ON SYS.WLM_CAPABILITY_ARRAY TO APPQOSSYS;
    GRANT EXECUTE ON SYS.WLM_CAPABILITY_OBJECT TO APPQOSSYS;


CREATE USER AUDSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 System Privilege for AUDSYS 
  GRANT CREATE TABLE TO AUDSYS;
  -- 1 Tablespace Quota for AUDSYS 
  ALTER USER AUDSYS QUOTA UNLIMITED ON SYSAUX;


CREATE USER DBSFWUSER
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 2 System Privileges for DBSFWUSER 
  GRANT CREATE SESSION TO DBSFWUSER;
  GRANT UNLIMITED TABLESPACE TO DBSFWUSER;
  -- 1 Tablespace Quota for DBSFWUSER 
  ALTER USER DBSFWUSER QUOTA UNLIMITED ON SYSAUX;
  -- 18 Object Privileges for DBSFWUSER 
    GRANT SELECT ON SYS.CDB_SERVICE$ TO DBSFWUSER;
    GRANT SELECT ON SYS.DBA_XS_ACES TO DBSFWUSER;
    GRANT SELECT ON SYS.DBA_XS_ACLS TO DBSFWUSER;
    GRANT SELECT ON SYS.DBA_XS_OBJECTS TO DBSFWUSER;
    GRANT EXECUTE ON SYS.DBMS_ASSERT TO DBSFWUSER;
    GRANT EXECUTE ON SYS.DBMS_OUTPUT TO DBSFWUSER;
    GRANT EXECUTE ON SYS.DBMS_UTILITY TO DBSFWUSER;
    GRANT SELECT ON SYS.GV_$EXADIRECT_ACL TO DBSFWUSER;
    GRANT SELECT ON SYS.GV_$IP_ACL TO DBSFWUSER;
    GRANT SELECT ON SYS.SERVICE$ TO DBSFWUSER;
    GRANT SELECT ON SYS.V_$DATABASE TO DBSFWUSER;
    GRANT SELECT ON SYS.V_$EXADIRECT_ACL TO DBSFWUSER;
    GRANT SELECT ON SYS.V_$IP_ACL TO DBSFWUSER;
    GRANT SELECT ON SYS.V_$PARAMETER TO DBSFWUSER;
    GRANT SELECT ON SYS.V_$PDBS TO DBSFWUSER;
    GRANT SELECT ON SYS.V_X$KSWSASTAB TO DBSFWUSER;
    GRANT EXECUTE ON SYS.XS_ACL TO DBSFWUSER;
    GRANT EXECUTE ON SYS.XS_SECURITY_CLASS TO DBSFWUSER;


CREATE USER DIP
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 System Privilege for DIP 
  GRANT CREATE SESSION TO DIP;
  -- 1 Object Privilege for DIP 
    GRANT EXECUTE ON LBACSYS.OLS_DIP_NTFY TO DIP;


CREATE USER DVF
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 System Privilege for DVF 
  GRANT CREATE PROCEDURE TO DVF;


CREATE USER DVSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 4 System Privileges for DVSYS 
  GRANT CREATE ANY CONTEXT TO DVSYS;
  GRANT CREATE ROLE TO DVSYS;
  GRANT DROP ANY CONTEXT TO DVSYS;
  GRANT UNLIMITED TABLESPACE TO DVSYS;
  -- 72 Object Privileges for DVSYS 
    GRANT EXECUTE ON DVF.DBMS_MACSEC_FUNCTION TO DVSYS;
    GRANT EXECUTE ON LBACSYS.CONFIGURE_OLS TO DVSYS;
    GRANT EXECUTE ON LBACSYS.NUMERIC_DOMINATES TO DVSYS;
    GRANT EXECUTE ON LBACSYS.NUMERIC_LABEL_TO_CHAR TO DVSYS;
    GRANT EXECUTE ON LBACSYS.NUMERIC_STRICTLY_DOMINATES TO DVSYS;
    GRANT SELECT ON LBACSYS.OLS$LAB TO DVSYS WITH GRANT OPTION;
    GRANT SELECT ON LBACSYS.OLS$LEVELS TO DVSYS;
    GRANT SELECT ON LBACSYS.OLS$POL TO DVSYS WITH GRANT OPTION;
    GRANT SELECT ON LBACSYS.OLS$POLT TO DVSYS;
    GRANT SELECT ON LBACSYS.OLS$PROPS TO DVSYS;
    GRANT EXECUTE ON LBACSYS.SA_SESSION TO DVSYS;
    GRANT EXECUTE ON LBACSYS.SA_UTL TO DVSYS;
    GRANT EXECUTE ON LBACSYS.TO_NUMERIC_LABEL TO DVSYS;
    GRANT READ ON SYS.ALL_OBJECTS TO DVSYS;
    GRANT READ ON SYS.ALL_REGISTRY_BANNERS TO DVSYS;
    GRANT READ ON SYS.ALL_USERS TO DVSYS;
    GRANT EXECUTE ON SYS.DATABASE_NAME TO DVSYS;
    GRANT READ ON SYS.DBA_APPLICATION_ROLES TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.DBA_CONTEXT TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.DBA_DEPENDENCIES TO DVSYS;
    GRANT READ ON SYS.DBA_NESTED_TABLES TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.DBA_OBJECTS TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.DBA_RECYCLEBIN TO DVSYS;
    GRANT READ ON SYS.DBA_ROLES TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.DBA_ROLE_PRIVS TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.DBA_SYNONYMS TO DVSYS;
    GRANT READ ON SYS.DBA_SYS_PRIVS TO DVSYS;
    GRANT READ ON SYS.DBA_TAB_PRIVS TO DVSYS;
    GRANT READ ON SYS.DBA_USERS TO DVSYS WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.DBMS_ASSERT TO DVSYS;
    GRANT EXECUTE ON SYS.DBMS_SESSION TO DVSYS;
    GRANT EXECUTE ON SYS.DBMS_SQL TO DVSYS;
    GRANT EXECUTE ON SYS.DBMS_STATS TO DVSYS;
    GRANT EXECUTE ON SYS.DBMS_SYSTEM TO DVSYS;
    GRANT EXECUTE ON SYS.DBMS_UTILITY TO DVSYS;
    GRANT EXECUTE ON SYS.DBMS_XMLSTORE TO DVSYS;
    GRANT EXECUTE ON SYS.DICTIONARY_OBJ_NAME TO DVSYS;
    GRANT EXECUTE ON SYS.DICTIONARY_OBJ_OWNER TO DVSYS;
    GRANT EXECUTE ON SYS.DICTIONARY_OBJ_TYPE TO DVSYS;
    GRANT READ ON SYS.DUAL TO DVSYS;
    GRANT READ ON SYS.GV_$CODE_CLAUSE TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.GV_$INSTANCE TO DVSYS;
    GRANT READ ON SYS.GV_$SESSION TO DVSYS;
    GRANT EXECUTE ON SYS.INSTANCE_NUM TO DVSYS;
    GRANT EXECUTE ON SYS.LOGIN_USER TO DVSYS;
    GRANT READ ON SYS.OBJ$ TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.OBJAUTH$ TO DVSYS WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.OLS_ENFORCEMENT TO DVSYS;
    GRANT EXECUTE ON SYS.PLITBLM TO DVSYS;
    GRANT READ ON SYS.PROXY_ROLES TO DVSYS WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.ROLENAME_ARRAY TO DVSYS;
    GRANT EXECUTE ON SYS.ROLE_ARRAY TO DVSYS;
    GRANT READ ON SYS.SESSION_CONTEXT TO DVSYS;
    GRANT READ ON SYS.SESSION_ROLES TO DVSYS;
    GRANT EXECUTE ON SYS.SQL_TXT TO DVSYS;
    GRANT READ ON SYS.SYSAUTH$ TO DVSYS WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.SYSEVENT TO DVSYS;
    GRANT READ ON SYS.SYSTEM_PRIVILEGE_MAP TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.TAB$ TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.TABLE_PRIVILEGE_MAP TO DVSYS WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.UTL_INADDR TO DVSYS;
    GRANT EXECUTE ON SYS.UTL_LMS TO DVSYS;
    GRANT READ ON SYS.V_$CODE_CLAUSE TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS.V_$DATABASE TO DVSYS;
    GRANT READ ON SYS.V_$INSTANCE TO DVSYS;
    GRANT READ ON SYS.V_$OPTION TO DVSYS;
    GRANT READ ON SYS.V_$PARAMETER TO DVSYS;
    GRANT READ ON SYS.V_$SESSION TO DVSYS;
    GRANT READ ON SYS.V_$VERSION TO DVSYS;
    GRANT EXECUTE ON SYS.XMLTYPE TO DVSYS;
    GRANT READ ON SYS.XS$OBJ TO DVSYS WITH GRANT OPTION;
    GRANT READ ON SYS."_BASE_USER" TO DVSYS WITH GRANT OPTION;


CREATE USER GSMUSER
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Role for GSMUSER 
  GRANT GSMUSER_ROLE TO GSMUSER;
  ALTER USER GSMUSER DEFAULT ROLE ALL;
  -- 21 System Privileges for GSMUSER 
  GRANT ALTER ANY INDEX TO GSMUSER;
  GRANT ALTER ANY MATERIALIZED VIEW TO GSMUSER;
  GRANT ALTER ANY PROCEDURE TO GSMUSER;
  GRANT ALTER ANY SEQUENCE TO GSMUSER;
  GRANT ALTER ANY TABLE TO GSMUSER;
  GRANT CREATE ANY INDEX TO GSMUSER;
  GRANT CREATE ANY MATERIALIZED VIEW TO GSMUSER;
  GRANT CREATE ANY PROCEDURE TO GSMUSER;
  GRANT CREATE ANY SEQUENCE TO GSMUSER;
  GRANT CREATE ANY SYNONYM TO GSMUSER;
  GRANT CREATE ANY TABLE TO GSMUSER;
  GRANT CREATE ANY VIEW TO GSMUSER;
  GRANT CREATE TABLESPACE TO GSMUSER;
  GRANT DROP ANY INDEX TO GSMUSER;
  GRANT DROP ANY MATERIALIZED VIEW TO GSMUSER;
  GRANT DROP ANY PROCEDURE TO GSMUSER;
  GRANT DROP ANY SEQUENCE TO GSMUSER;
  GRANT DROP ANY SYNONYM TO GSMUSER;
  GRANT DROP ANY TABLE TO GSMUSER;
  GRANT DROP ANY VIEW TO GSMUSER;
  GRANT UNLIMITED TABLESPACE TO GSMUSER;
  -- 3 Object Privileges for GSMUSER 
    GRANT EXECUTE ON GSMADMIN_INTERNAL.EXECUTEDDL TO GSMUSER;
    GRANT EXECUTE ON SYS.DBMS_GSM_FIXED TO GSMUSER;
    GRANT EXECUTE ON SYS.EXECASUSER TO GSMUSER;


CREATE USER OLAPSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Role for OLAPSYS 
  GRANT OLAP_DBA TO OLAPSYS;
  ALTER USER OLAPSYS DEFAULT ROLE ALL;
  -- 1 Tablespace Quota for OLAPSYS 
  ALTER USER OLAPSYS QUOTA UNLIMITED ON SYSAUX;


CREATE USER ORACLE_OCM
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 3 System Privileges for ORACLE_OCM 
  GRANT CREATE JOB TO ORACLE_OCM;
  GRANT INHERIT ANY PRIVILEGES TO ORACLE_OCM;
  GRANT SET CONTAINER TO ORACLE_OCM;
  -- 70 Object Privileges for ORACLE_OCM 
    GRANT SELECT ON DVSYS.DBA_DV_REALM TO ORACLE_OCM;
    GRANT SELECT ON SYS.ALL_CHANGE_TABLES TO ORACLE_OCM;
    GRANT SELECT ON SYS.CDB_DATA_FILES TO ORACLE_OCM;
    GRANT SELECT ON SYS.CDB_PROPERTIES TO ORACLE_OCM;
    GRANT SELECT ON SYS.CDB_ROLLBACK_SEGS TO ORACLE_OCM;
    GRANT SELECT ON SYS.CDB_SERVICES TO ORACLE_OCM;
    GRANT SELECT ON SYS.CDB_TABLESPACES TO ORACLE_OCM;
    GRANT SELECT ON SYS.CDB_TEMP_FILES TO ORACLE_OCM;
    GRANT SELECT ON SYS.CDB_USERS TO ORACLE_OCM;
    GRANT SELECT ON SYS.CDC_CHANGE_TABLES$ TO ORACLE_OCM;
    GRANT SELECT ON SYS.DATABASE_PROPERTIES TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_AUDIT_TRAIL TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_CPU_USAGE_STATISTICS TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_DATA_FILES TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_DB_LINKS TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_FEATURE_USAGE_STATISTICS TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_FREE_SPACE TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_HIGH_WATER_MARK_STATISTICS TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_INDEXES TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_JOBS TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_OBJECTS TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_PDBS TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_REGISTRY TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_REGISTRY_HISTORY TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_ROLLBACK_SEGS TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_SCHEDULER_JOBS TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_TABLES TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_TABLESPACES TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_TEMP_FILES TO ORACLE_OCM;
    GRANT SELECT ON SYS.DBA_USERS TO ORACLE_OCM;
    GRANT EXECUTE ON SYS.DBMS_SCHEDULER TO ORACLE_OCM;
    GRANT EXECUTE ON SYS.DBMS_SQL TO ORACLE_OCM;
    GRANT SELECT ON SYS.GLOBAL_NAME TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$ASM_DISK TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$CONTAINERS TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$DATABASE TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$INSTANCE TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$NLS_PARAMETERS TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$PARAMETER TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$PDBS TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$PROCESS TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$SGA TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$SGASTAT TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$SORT_SEGMENT TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$SYSTEM_PARAMETER TO ORACLE_OCM;
    GRANT SELECT ON SYS.GV_$VERSION TO ORACLE_OCM;
    GRANT SELECT ON SYS.OBJ$ TO ORACLE_OCM;
    GRANT READ, WRITE ON DIRECTORY ORACLE_OCM_CONFIG_DIR TO ORACLE_OCM;
    GRANT READ, WRITE ON DIRECTORY ORACLE_OCM_CONFIG_DIR2 TO ORACLE_OCM;
    GRANT SELECT ON SYS.SMON_SCN_TIME TO ORACLE_OCM;
    GRANT SELECT ON SYS.TS$ TO ORACLE_OCM;
    GRANT SELECT ON SYS.USER$ TO ORACLE_OCM;
    GRANT EXECUTE ON SYS.UTL_FILE TO ORACLE_OCM;
    GRANT EXECUTE ON SYS.UTL_INADDR TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$CELL_CONFIG TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$CONTROLFILE TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$DATABASE TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$DATAFILE TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$INSTANCE TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$LICENSE TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$LOG TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$LOGFILE TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$OPTION TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$PARAMETER TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$PROCESS TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$RMAN_CONFIGURATION TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$ROLLSTAT TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$SESSION TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$SYSSTAT TO ORACLE_OCM;
    GRANT SELECT ON SYS.V_$TEMPFILE TO ORACLE_OCM;


CREATE USER ORDDATA
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 System Privilege for ORDDATA 
  GRANT UNLIMITED TABLESPACE TO ORDDATA;


CREATE USER ORDPLUGINS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 System Privilege for ORDPLUGINS 
  GRANT INHERIT ANY PRIVILEGES TO ORDPLUGINS;
  -- 5 Object Privileges for ORDPLUGINS 
    GRANT EXECUTE ON ORDSYS.ORDIMERRORCODES TO ORDPLUGINS;
    GRANT EXECUTE ON ORDSYS.ORDUTIL_PRV TO ORDPLUGINS;
    GRANT EXECUTE ON SYS.DBMS_LOB TO ORDPLUGINS;
    GRANT EXECUTE ON SYS.UTL_FILE TO ORDPLUGINS;
    GRANT EXECUTE ON SYS.UTL_HTTP TO ORDPLUGINS;


CREATE USER ORDSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Role for ORDSYS 
  GRANT JAVAUSERPRIV TO ORDSYS;
  ALTER USER ORDSYS DEFAULT ROLE ALL;
  -- 2 System Privileges for ORDSYS 
  GRANT INHERIT ANY PRIVILEGES TO ORDSYS;
  GRANT UNLIMITED TABLESPACE TO ORDSYS;
  -- 138 Object Privileges for ORDSYS 
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_ANON_ACTION_TYPES TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_ANON_ATTRS TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_ANON_ATTRS_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_ANON_ATTRS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_ANON_ATTRS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_ANON_ATTRS_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_ANON_RULES TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_ANON_RULES_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_ANON_RULES_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_ANON_RULES_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_ANON_RULE_TYPES TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_ACTION TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_ACTION_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_CT_ACTION_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_ACTION_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_DAREFS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_DAREFS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_CT_DAREFS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_DAREFS_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_LOCATORPATHS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_LOCATORPATHS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_CT_LOCATORPATHS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON ORDDATA.ORDDCM_CT_LOCATORPATHS_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_MACRO_DEP TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_MACRO_DEP_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_MACRO_PAR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_MACRO_PAR_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED_OPRD TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED_OPRD_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_CT_PRED_OPRD_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED_OPRD_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED_PAR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED_PAR_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_CT_PRED_PAR_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED_PAR_WRK TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_CT_PRED_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED_SET TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_CT_PRED_SET_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED_SET_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_CT_PRED_SET_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON ORDDATA.ORDDCM_CT_PRED_SET_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_PRED_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_CT_PRED_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON ORDDATA.ORDDCM_CT_PRED_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_CT_VLD_MSG TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DATA_MODEL TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_DATA_MODEL_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON ORDDATA.ORDDCM_DATA_MODEL_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DICT_ATTRS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DICT_ATTRS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_DICT_ATTRS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DICT_ATTRS_WRK TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_DICT_A_DA_ID_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DOCS TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_DOCS_ID_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DOCS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_DOCS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DOCS_WRK TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_DOCUMENT_REFS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DOC_REFS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DOC_REFS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_DOC_REFS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DOC_REFS_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_DOC_TYPES TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_INSTALL_DOCS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_INTERNAL_TAGS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_MAPPED_PATHS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_MAPPED_PATHS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_MAPPED_PATHS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_MAPPED_PATHS_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_MAPPING_DOCS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_MAPPING_DOCS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_MAPPING_DOCS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON ORDDATA.ORDDCM_MAPPING_DOCS_WRK TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_MPD_P_MPID_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PREFS_DEF_VALUES_TAB TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PREFS_LOOKUP TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PREFS_VALID_VALUES_TAB TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PROTOCOL_ADMIN_DOCS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PROTOCOL_ATTR_CONFIG TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PROTOCOL_DICOM_CONFIG TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PROTOCOL_PRVW_CONFIG TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PROTOCOL_SPECIAL_TAG TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PROTOCOL_VERSION_CONFIG TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_PROTOCOL_VERSION_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PROTOCOL_WADO_CONFIG TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PROTOCOL_XML_CONFIG TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PRV_ATTRS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PRV_ATTRS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_PRV_ATTRS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON ORDDATA.ORDDCM_PRV_ATTRS_WRK TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_PRV_A_PA_ID_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PR_ADMIN_DOCS_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PR_ATTR_CONFIG_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PR_DICOM_CONFIG_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PR_PRVW_CONFIG_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PR_SPECIAL_TAG_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PR_VERSION_CONFIG_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PR_WADO_CONFIG_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_PR_XML_CONFIG_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_RT_PREF_PARAMS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_RT_PREF_PARAMS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_RT_PREF_PARAMS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON ORDDATA.ORDDCM_RT_PREF_PARAMS_WRK TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_RT_PREF_P_PPID_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_STD_ATTRS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_STD_ATTRS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_STD_ATTRS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON ORDDATA.ORDDCM_STD_ATTRS_WRK TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_STD_A_SA_ID_SEQ TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_STOREDTAGS_STID_SEQ TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_STORED_TAGS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_STORED_TAGS_TMP TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_STORED_TAGS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_STORED_TAGS_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_UID_DEFS TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_UID_DEFS_TMP TO ORDSYS;
    GRANT ALTER, SELECT ON ORDDATA.ORDDCM_UID_DEFS_UDID_SEQ TO ORDSYS;
    GRANT READ ON ORDDATA.ORDDCM_UID_DEFS_USR TO ORDSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON ORDDATA.ORDDCM_UID_DEFS_WRK TO ORDSYS;
    GRANT DELETE, INSERT, SELECT ON ORDDATA.ORDDCM_VR_DT_MAP TO ORDSYS;
    GRANT SELECT ON SYS.DBA_INDEXES TO ORDSYS;
    GRANT SELECT ON SYS.DBA_OBJECT_TABLES TO ORDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_TABLES TO ORDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_TAB_COLS TO ORDSYS;
    GRANT SELECT ON SYS.DBA_VIEWS TO ORDSYS WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.DBMS_LOB TO ORDSYS;
    GRANT EXECUTE ON SYS.DBMS_LOCK TO ORDSYS;
    GRANT EXECUTE ON SYS.DBMS_RANDOM TO ORDSYS;
    GRANT EXECUTE ON SYS.DBMS_SQL TO ORDSYS;
    GRANT EXECUTE ON SYS.DBMS_UTILITY TO ORDSYS;
    GRANT DELETE, INSERT ON SYS.EXPDEPACT$ TO ORDSYS;
    GRANT DELETE, INSERT ON SYS.EXPDEPOBJ$ TO ORDSYS;
    GRANT DELETE, INSERT ON SYS.EXPPKGACT$ TO ORDSYS;
    GRANT DELETE, INSERT ON SYS.EXPPKGOBJ$ TO ORDSYS;
    GRANT EXECUTE ON SYS.UTL_FILE TO ORDSYS;
    GRANT SELECT ON SYS.V_$INSTANCE TO ORDSYS;
  -- 9 Java Privileges for ORDSYS 
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'ORDSYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'getClassLoader'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'ORDSYS'
    ,permission_type   => 'SYS:java.util.logging.LoggingPermission'
    ,permission_name   => 'control'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'ORDSYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'loadLibrary.ordim12'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'ORDSYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'loadLibrary.oraordim12'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'ORDSYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'loadLibrary.clib_jiio'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'ORDSYS'
    ,permission_type   => 'SYS:java.io.FilePermission'
    ,permission_name   => 'C:\Users\aime4\AppData\Local\Temp\\*'
    ,permission_action => 'read,write,delete'
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'ORDSYS'
    ,permission_type   => 'SYS:java.io.FilePermission'
    ,permission_name   => '<<ALL FILES>>'
    ,permission_action => 'read,write,delete'
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'ORDSYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'accessClassInPackage.com.sun.imageio.plugins.jpeg'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'ORDSYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'accessClassInPackage.com.sun.media.jai.codec'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/


CREATE USER REMOTE_SCHEDULER_AGENT
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Object Privilege for REMOTE_SCHEDULER_AGENT 
    GRANT EXECUTE ON SYS.DBMS_ISCHED_REMOTE_ACCESS TO REMOTE_SCHEDULER_AGENT;


CREATE USER SI_INFORMTN_SCHEMA
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 System Privilege for SI_INFORMTN_SCHEMA 
  GRANT UNLIMITED TABLESPACE TO SI_INFORMTN_SCHEMA;


CREATE USER SYS$UMF
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSTEM
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Role for SYS$UMF 
  GRANT SYSUMF_ROLE TO SYS$UMF;
  ALTER USER SYS$UMF DEFAULT ROLE ALL;
  -- 1 System Privilege for SYS$UMF 
  GRANT CREATE SESSION TO SYS$UMF;
  -- 5 Object Privileges for SYS$UMF 
    GRANT DELETE, INSERT, SELECT, UPDATE ON SYS.UMF$_LINK_XML TO SYS$UMF;
    GRANT DELETE, INSERT, SELECT, UPDATE ON SYS.UMF$_REGISTRATION_XML TO SYS$UMF;
    GRANT DELETE, INSERT, SELECT, UPDATE ON SYS.UMF$_SERVICE_XML TO SYS$UMF;
    GRANT DELETE, INSERT, SELECT, UPDATE ON SYS.UMF$_TOPOLOGY_XML TO SYS$UMF;
    GRANT DELETE, INSERT, SELECT, UPDATE ON SYS.UMF_SCHEMA_XMLTYPE TO SYS$UMF;


CREATE USER SYSBACKUP
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Role for SYSBACKUP 
  GRANT SELECT_CATALOG_ROLE TO SYSBACKUP;
  ALTER USER SYSBACKUP DEFAULT ROLE ALL;
  -- 13 System Privileges for SYSBACKUP 
  GRANT ALTER DATABASE TO SYSBACKUP;
  GRANT ALTER SESSION TO SYSBACKUP;
  GRANT ALTER SYSTEM TO SYSBACKUP;
  GRANT ALTER TABLESPACE TO SYSBACKUP;
  GRANT AUDIT ANY TO SYSBACKUP;
  GRANT CREATE ANY CLUSTER TO SYSBACKUP;
  GRANT CREATE ANY DIRECTORY TO SYSBACKUP;
  GRANT CREATE ANY TABLE TO SYSBACKUP;
  GRANT DROP TABLESPACE TO SYSBACKUP;
  GRANT RESUMABLE TO SYSBACKUP;
  GRANT SELECT ANY DICTIONARY TO SYSBACKUP;
  GRANT SELECT ANY TRANSACTION TO SYSBACKUP;
  GRANT UNLIMITED TABLESPACE TO SYSBACKUP;
  -- 14 Object Privileges for SYSBACKUP 
    GRANT SELECT ON APPQOSSYS.WLM_CLASSIFIER_PLAN TO SYSBACKUP;
    GRANT DELETE, INSERT ON SYS.APPLY$_SOURCE_SCHEMA TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_BACKUP_RESTORE TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_DBCOMP TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_IR TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_PIPE TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_PLUGTS TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_PLUGTSP TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_PREPLUGIN_BACKUP TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_RCVMAN TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_SYS_ERROR TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_TDB TO SYSBACKUP;
    GRANT EXECUTE ON SYS.DBMS_TTS TO SYSBACKUP;
    GRANT DELETE, INSERT, SELECT ON SYSTEM.LOGSTDBY$PARAMETERS TO SYSBACKUP;


CREATE USER SYSDG
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 4 System Privileges for SYSDG 
  GRANT ALTER DATABASE TO SYSDG;
  GRANT ALTER SESSION TO SYSDG;
  GRANT ALTER SYSTEM TO SYSDG;
  GRANT SELECT ANY DICTIONARY TO SYSDG;
  -- 9 Object Privileges for SYSDG 
    GRANT DELETE, SELECT ON APPQOSSYS.WLM_CLASSIFIER_PLAN TO SYSDG;
    GRANT SELECT ON SYS.DBA_CAPTURE TO SYSDG;
    GRANT SELECT ON SYS.DBA_LOGSTDBY_EVENTS TO SYSDG;
    GRANT SELECT ON SYS.DBA_LOGSTDBY_HISTORY TO SYSDG;
    GRANT SELECT ON SYS.DBA_LOGSTDBY_LOG TO SYSDG;
    GRANT EXECUTE ON SYS.DBMS_DBCOMP TO SYSDG;
    GRANT EXECUTE ON SYS.DBMS_DRS TO SYSDG;
    GRANT EXECUTE ON SYS.DBMS_GSM_FIX TO SYSDG;
    GRANT EXECUTE ON SYS.DBMS_GSM_FIXED TO SYSDG;


CREATE USER SYSKM
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 System Privilege for SYSKM 
  GRANT ADMINISTER KEY MANAGEMENT TO SYSKM WITH ADMIN OPTION;
  -- 13 Object Privileges for SYSKM 
    GRANT SELECT ON SYS.DBA_ENCRYPTED_COLUMNS TO SYSKM;
    GRANT SELECT ON SYS.GV_$CLIENT_SECRETS TO SYSKM;
    GRANT SELECT ON SYS.GV_$DATABASE_KEY_INFO TO SYSKM;
    GRANT SELECT ON SYS.GV_$ENCRYPTED_TABLESPACES TO SYSKM;
    GRANT SELECT ON SYS.GV_$ENCRYPTION_KEYS TO SYSKM;
    GRANT SELECT ON SYS.GV_$ENCRYPTION_WALLET TO SYSKM;
    GRANT SELECT ON SYS.GV_$WALLET TO SYSKM;
    GRANT SELECT ON SYS.V_$CLIENT_SECRETS TO SYSKM;
    GRANT SELECT ON SYS.V_$DATABASE_KEY_INFO TO SYSKM;
    GRANT SELECT ON SYS.V_$ENCRYPTED_TABLESPACES TO SYSKM;
    GRANT SELECT ON SYS.V_$ENCRYPTION_KEYS TO SYSKM;
    GRANT SELECT ON SYS.V_$ENCRYPTION_WALLET TO SYSKM;
    GRANT SELECT ON SYS.V_$WALLET TO SYSKM;


CREATE USER SYSRAC
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Role for SYSRAC 
  GRANT AQ_ADMINISTRATOR_ROLE TO SYSRAC;
  ALTER USER SYSRAC DEFAULT ROLE ALL;
  -- 3 System Privileges for SYSRAC 
  GRANT ALTER DATABASE TO SYSRAC;
  GRANT ALTER SESSION TO SYSRAC;
  GRANT ALTER SYSTEM TO SYSRAC;
  -- 11 Object Privileges for SYSRAC 
    GRANT SELECT ON SYS.CDB_SERVICE$ TO SYSRAC;
    GRANT SELECT ON SYS.DBA_PROCEDURES TO SYSRAC;
    GRANT SELECT ON SYS.DBA_SERVICES TO SYSRAC;
    GRANT EXECUTE ON SYS.DBMS_DRS TO SYSRAC;
    GRANT EXECUTE ON SYS.DBMS_HA_ALERTS_PRVT TO SYSRAC;
    GRANT EXECUTE ON SYS.DBMS_SERVER_ALERT TO SYSRAC;
    GRANT EXECUTE ON SYS.DBMS_SERVICE TO SYSRAC;
    GRANT EXECUTE ON SYS.DBMS_SERVICE_PRVT TO SYSRAC;
    GRANT EXECUTE ON SYS.DBMS_SESSION TO SYSRAC;
    GRANT READ ON SYS.RECENT_RESOURCE_INCARNATIONS$ TO SYSRAC;
    GRANT EXECUTE ON SYS.SYS$RLBTYP TO SYSRAC;


CREATE USER WMSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Role for WMSYS 
  GRANT WM_ADMIN_ROLE TO WMSYS WITH ADMIN OPTION;
  ALTER USER WMSYS DEFAULT ROLE ALL;
  -- 33 System Privileges for WMSYS 
  GRANT ADMINISTER DATABASE TRIGGER TO WMSYS;
  GRANT ALTER ANY INDEX TO WMSYS;
  GRANT ALTER ANY PROCEDURE TO WMSYS;
  GRANT ALTER ANY SEQUENCE TO WMSYS;
  GRANT ALTER ANY TABLE TO WMSYS;
  GRANT ALTER ANY TRIGGER TO WMSYS;
  GRANT ALTER SESSION TO WMSYS;
  GRANT ALTER USER TO WMSYS;
  GRANT CREATE ANY INDEX TO WMSYS;
  GRANT CREATE ANY PROCEDURE TO WMSYS;
  GRANT CREATE ANY SEQUENCE TO WMSYS;
  GRANT CREATE ANY TABLE TO WMSYS;
  GRANT CREATE ANY TRIGGER TO WMSYS;
  GRANT CREATE ANY VIEW TO WMSYS;
  GRANT CREATE USER TO WMSYS;
  GRANT DELETE ANY TABLE TO WMSYS;
  GRANT DROP ANY INDEX TO WMSYS;
  GRANT DROP ANY PROCEDURE TO WMSYS;
  GRANT DROP ANY SEQUENCE TO WMSYS;
  GRANT DROP ANY TABLE TO WMSYS;
  GRANT DROP ANY TRIGGER TO WMSYS;
  GRANT DROP ANY VIEW TO WMSYS;
  GRANT DROP USER TO WMSYS;
  GRANT EXECUTE ANY PROCEDURE TO WMSYS;
  GRANT EXECUTE ANY TYPE TO WMSYS;
  GRANT INHERIT ANY PRIVILEGES TO WMSYS;
  GRANT INSERT ANY TABLE TO WMSYS;
  GRANT LOCK ANY TABLE TO WMSYS;
  GRANT SELECT ANY DICTIONARY TO WMSYS;
  GRANT SELECT ANY SEQUENCE TO WMSYS;
  GRANT SELECT ANY TABLE TO WMSYS;
  GRANT UNLIMITED TABLESPACE TO WMSYS;
  GRANT UPDATE ANY TABLE TO WMSYS;
  -- 12 Object Privileges for WMSYS 
    GRANT SELECT ON SYS.AQ$_UNFLUSHED_DEQUEUES TO WMSYS;
    GRANT EXECUTE ON SYS.DBMS_AQ TO WMSYS;
    GRANT EXECUTE ON SYS.DBMS_AQADM TO WMSYS;
    GRANT EXECUTE ON SYS.DBMS_AQ_BQVIEW TO WMSYS;
    GRANT EXECUTE ON SYS.DBMS_LOB TO WMSYS;
    GRANT EXECUTE ON SYS.DBMS_LOCK TO WMSYS;
    GRANT EXECUTE ON SYS.DBMS_REGISTRY TO WMSYS;
    GRANT EXECUTE ON SYS.DBMS_RLS TO WMSYS;
    GRANT EXECUTE ON SYS.DBMS_UTILITY TO WMSYS;
    GRANT DELETE, INSERT ON SYS.NOEXP$ TO WMSYS;
    GRANT SELECT ON SYS.QT21904_BUFFER TO WMSYS;
    GRANT EXECUTE ON SYS.UTL_FILE TO WMSYS;


CREATE USER XS$NULL
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSTEM
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;



BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'DEFAULT_JOB_CLASS'
     ,resource_consumer_group => NULL
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_RUNS
     ,log_history             => NULL
     ,comments                => 'This is the default job class.'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'SCHED$_LOG_ON_ERRORS_CLASS'
     ,resource_consumer_group => NULL
     ,service                 => NULL
     ,log_history             => NULL
     ,comments                => 'This is the default job class if you want minimal logging.'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'DEFAULT_IN_MEMORY_JOB_CLASS'
     ,resource_consumer_group => NULL
     ,service                 => NULL
     ,log_history             => NULL
     ,comments                => 'This is the default job class for in-memory jobs.'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'DBMS_JOB$'
     ,resource_consumer_group => NULL
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_OFF
     ,log_history             => NULL
     ,comments                => 'This is the job class for jobs created through DBMS_JOB.'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'ORA$AT_JCURG_OS'
     ,resource_consumer_group => 'ORA$AUTOTASK'
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_FULL
     ,log_history             => 1000000
     ,comments                => 'auto optimizer stats collection'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'ORA$AT_JCNRM_OS'
     ,resource_consumer_group => 'ORA$AUTOTASK'
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_FULL
     ,log_history             => 1000000
     ,comments                => 'auto optimizer stats collection'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'ORA$AT_JCMED_OS'
     ,resource_consumer_group => 'ORA$AUTOTASK'
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_FULL
     ,log_history             => 1000000
     ,comments                => 'auto optimizer stats collection'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'ORA$AT_JCURG_SA'
     ,resource_consumer_group => 'ORA$AUTOTASK'
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_FULL
     ,log_history             => 1000000
     ,comments                => 'auto space advisor'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'ORA$AT_JCNRM_SA'
     ,resource_consumer_group => 'ORA$AUTOTASK'
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_FULL
     ,log_history             => 1000000
     ,comments                => 'auto space advisor'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'ORA$AT_JCMED_SA'
     ,resource_consumer_group => 'ORA$AUTOTASK'
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_FULL
     ,log_history             => 1000000
     ,comments                => 'auto space advisor'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'ORA$AT_JCURG_SQ'
     ,resource_consumer_group => 'ORA$AUTOTASK'
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_FULL
     ,log_history             => 1000000
     ,comments                => 'sql tuning advisor'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'ORA$AT_JCNRM_SQ'
     ,resource_consumer_group => 'ORA$AUTOTASK'
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_FULL
     ,log_history             => 1000000
     ,comments                => 'sql tuning advisor'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'ORA$AT_JCMED_SQ'
     ,resource_consumer_group => 'ORA$AUTOTASK'
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_FULL
     ,log_history             => 1000000
     ,comments                => 'sql tuning advisor'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'AQ$_PROPAGATION_JOB_CLASS'
     ,resource_consumer_group => NULL
     ,service                 => NULL
     ,logging_level           => SYS.DBMS_SCHEDULER.LOGGING_RUNS
     ,log_history             => NULL
     ,comments                => 'Default job class for AQ propagation jobs'
    );
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB_CLASS
    (
      job_class_name          => 'XMLDB_NFS_JOBCLASS'
     ,resource_consumer_group => NULL
     ,service                 => NULL
     ,log_history             => NULL
     ,comments                => NULL
    );
END;
/

BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW
    (
       window_name     => 'MONDAY_WINDOW'
      ,start_date      => NULL
      ,repeat_interval => 'freq=daily;byday=MON;byhour=22;byminute=0; bysecond=0'
      ,end_date        => NULL
      ,resource_plan   => 'DEFAULT_MAINTENANCE_PLAN'
      ,duration        => to_dsInterval('+000 04:00:00')
      ,window_priority => 'LOW'
      ,comments        => 'Monday window for maintenance tasks'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.MONDAY_WINDOW');

END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW
    (
       window_name     => 'TUESDAY_WINDOW'
      ,start_date      => NULL
      ,repeat_interval => 'freq=daily;byday=TUE;byhour=22;byminute=0; bysecond=0'
      ,end_date        => NULL
      ,resource_plan   => 'DEFAULT_MAINTENANCE_PLAN'
      ,duration        => to_dsInterval('+000 04:00:00')
      ,window_priority => 'LOW'
      ,comments        => 'Tuesday window for maintenance tasks'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.TUESDAY_WINDOW');

END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW
    (
       window_name     => 'WEDNESDAY_WINDOW'
      ,start_date      => NULL
      ,repeat_interval => 'freq=daily;byday=WED;byhour=22;byminute=0; bysecond=0'
      ,end_date        => NULL
      ,resource_plan   => 'DEFAULT_MAINTENANCE_PLAN'
      ,duration        => to_dsInterval('+000 04:00:00')
      ,window_priority => 'LOW'
      ,comments        => 'Wednesday window for maintenance tasks'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.WEDNESDAY_WINDOW');

END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW
    (
       window_name     => 'THURSDAY_WINDOW'
      ,start_date      => NULL
      ,repeat_interval => 'freq=daily;byday=THU;byhour=22;byminute=0; bysecond=0'
      ,end_date        => NULL
      ,resource_plan   => 'DEFAULT_MAINTENANCE_PLAN'
      ,duration        => to_dsInterval('+000 04:00:00')
      ,window_priority => 'LOW'
      ,comments        => 'Thursday window for maintenance tasks'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.THURSDAY_WINDOW');

END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW
    (
       window_name     => 'FRIDAY_WINDOW'
      ,start_date      => NULL
      ,repeat_interval => 'freq=daily;byday=FRI;byhour=22;byminute=0; bysecond=0'
      ,end_date        => NULL
      ,resource_plan   => 'DEFAULT_MAINTENANCE_PLAN'
      ,duration        => to_dsInterval('+000 04:00:00')
      ,window_priority => 'LOW'
      ,comments        => 'Friday window for maintenance tasks'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.FRIDAY_WINDOW');

END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW
    (
       window_name     => 'SATURDAY_WINDOW'
      ,start_date      => NULL
      ,repeat_interval => 'freq=daily;byday=SAT;byhour=6;byminute=0; bysecond=0'
      ,end_date        => NULL
      ,resource_plan   => 'DEFAULT_MAINTENANCE_PLAN'
      ,duration        => to_dsInterval('+000 20:00:00')
      ,window_priority => 'LOW'
      ,comments        => 'Saturday window for maintenance tasks'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.SATURDAY_WINDOW');

END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW
    (
       window_name     => 'SUNDAY_WINDOW'
      ,start_date      => NULL
      ,repeat_interval => 'freq=daily;byday=SUN;byhour=6;byminute=0; bysecond=0'
      ,end_date        => NULL
      ,resource_plan   => 'DEFAULT_MAINTENANCE_PLAN'
      ,duration        => to_dsInterval('+000 20:00:00')
      ,window_priority => 'LOW'
      ,comments        => 'Sunday window for maintenance tasks'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.SUNDAY_WINDOW');

END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW
    (
       window_name     => 'WEEKNIGHT_WINDOW'
      ,start_date      => NULL
      ,repeat_interval => 'freq=daily;byday=MON,TUE,WED,THU,FRI;byhour=22;byminute=0; bysecond=0'
      ,end_date        => NULL
      ,resource_plan   => NULL
      ,duration        => to_dsInterval('+000 08:00:00')
      ,window_priority => 'LOW'
      ,comments        => 'Weeknight window - for compatibility only'
    );
  SYS.DBMS_SCHEDULER.DISABLE
    (name => 'SYS.WEEKNIGHT_WINDOW');

END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW
    (
       window_name     => 'WEEKEND_WINDOW'
      ,start_date      => NULL
      ,repeat_interval => 'freq=daily;byday=SAT;byhour=0;byminute=0;bysecond=0'
      ,end_date        => NULL
      ,resource_plan   => NULL
      ,duration        => to_dsInterval('+002 00:00:00')
      ,window_priority => 'LOW'
      ,comments        => 'Weekend window - for compatibility only'
    );
  SYS.DBMS_SCHEDULER.DISABLE
    (name => 'SYS.WEEKEND_WINDOW');

END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW_GROUP
    (
       group_name     => 'MAINTENANCE_WINDOW_GROUP'
      ,window_list    => NULL
      ,comments       => 'Window group for Automated Maintenance'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.MAINTENANCE_WINDOW_GROUP');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.MAINTENANCE_WINDOW_GROUP',
     window_list => 'MONDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.MAINTENANCE_WINDOW_GROUP',
     window_list => 'TUESDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.MAINTENANCE_WINDOW_GROUP',
     window_list => 'WEDNESDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.MAINTENANCE_WINDOW_GROUP',
     window_list => 'THURSDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.MAINTENANCE_WINDOW_GROUP',
     window_list => 'FRIDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.MAINTENANCE_WINDOW_GROUP',
     window_list => 'SATURDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.MAINTENANCE_WINDOW_GROUP',
     window_list => 'SUNDAY_WINDOW');
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW_GROUP
    (
       group_name     => 'ORA$AT_WGRP_OS'
      ,window_list    => NULL
      ,comments       => 'auto optimizer stats collection'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.ORA$AT_WGRP_OS');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_OS',
     window_list => 'MONDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_OS',
     window_list => 'TUESDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_OS',
     window_list => 'WEDNESDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_OS',
     window_list => 'THURSDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_OS',
     window_list => 'FRIDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_OS',
     window_list => 'SATURDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_OS',
     window_list => 'SUNDAY_WINDOW');
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW_GROUP
    (
       group_name     => 'ORA$AT_WGRP_SA'
      ,window_list    => NULL
      ,comments       => 'auto space advisor'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.ORA$AT_WGRP_SA');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SA',
     window_list => 'MONDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SA',
     window_list => 'TUESDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SA',
     window_list => 'WEDNESDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SA',
     window_list => 'THURSDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SA',
     window_list => 'FRIDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SA',
     window_list => 'SATURDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SA',
     window_list => 'SUNDAY_WINDOW');
END;
/


BEGIN
  SYS.DBMS_SCHEDULER.CREATE_WINDOW_GROUP
    (
       group_name     => 'ORA$AT_WGRP_SQ'
      ,window_list    => NULL
      ,comments       => 'sql tuning advisor'
    );
  SYS.DBMS_SCHEDULER.ENABLE
    (name => 'SYS.ORA$AT_WGRP_SQ');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SQ',
     window_list => 'MONDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SQ',
     window_list => 'TUESDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SQ',
     window_list => 'WEDNESDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SQ',
     window_list => 'THURSDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SQ',
     window_list => 'FRIDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SQ',
     window_list => 'SATURDAY_WINDOW');
END;
/
BEGIN
  DBMS_SCHEDULER.ADD_WINDOW_GROUP_MEMBER
    (group_name  => 'SYS.ORA$AT_WGRP_SQ',
     window_list => 'SUNDAY_WINDOW');
END;
/


CREATE OR REPLACE TRIGGER GSMADMIN_INTERNAL.GSMlogoff
                   BEFORE LOGOFF  ON gsmcatuser.schema
CALL dbms_gsm_cloudadmin.checkGSMDown
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER LBACSYS.lbac$after_create
  AFTER CREATE ON DATABASE
DISABLE
BEGIN
  LBACSYS.lbac_events.after_create(dbms_standard.dictionary_obj_type,
                            dbms_standard.dictionary_obj_name,
                            dbms_standard.dictionary_obj_owner);
  END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER LBACSYS.lbac$after_drop
  AFTER DROP ON DATABASE
DISABLE
BEGIN
   LBACSYS.lbac_events.after_drop(dbms_standard.dictionary_obj_type,
                          dbms_standard.dictionary_obj_name,
                          dbms_standard.dictionary_obj_owner);
  END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER LBACSYS.lbac$before_alter
  BEFORE ALTER ON DATABASE
DISABLE
BEGIN
    LBACSYS.lbac_events.before_alter(dbms_standard.dictionary_obj_type,
                             dbms_standard.dictionary_obj_name,
                             dbms_standard.dictionary_obj_owner);
  END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER MDSYS.sdo_drop_user
after drop on DATABASE
declare
   stmt varchar2(200);
   cnt number;
BEGIN
     if sys.dbms_standard.dictionary_obj_type = 'USER' THEN
       stmt := 'DELETE FROM SDO_GEOM_METADATA_TABLE ' ||
     ' WHERE SDO_OWNER = :owner ';
       EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;

       stmt := 'DELETE FROM SDO_MAPS_TABLE ' ||
    ' WHERE SDO_OWNER = :owner ';
       EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;

       stmt := 'DELETE FROM SDO_CACHED_MAPS_TABLE ' ||
    ' WHERE SDO_OWNER = :owner ';
       EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;

       stmt := 'DELETE FROM SDO_STYLES_TABLE ' ||
    ' WHERE SDO_OWNER = :owner ';
       EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;

       stmt := 'DELETE FROM SDO_THEMES_TABLE ' ||
   ' WHERE SDO_OWNER = :owner ';
       EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;

       stmt := 'DELETE FROM SDO_LRS_METADATA_TABLE ' ||
   ' WHERE SDO_OWNER = :owner ';
       EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;

       stmt := 'DELETE FROM SDO_TOPO_METADATA_TABLE ' ||
   ' WHERE SDO_OWNER = :owner ';
       EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;

       stmt := 'DELETE FROM SDO_ANNOTATION_TEXT_METADATA ' ||
   ' WHERE F_TABLE_SCHEMA = :owner ';
       EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;

       stmt := 'DELETE FROM CSW_SERVICE_INFO ' ||
   ' WHERE SDO_OWNER = :owner ';
       begin
         EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;
         EXCEPTION when others then NULL;
       end;
    end if;
end;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER MDSYS.sdo_geor_addl_trigger
after ddl on database
declare
 m_event   varchar2(512);
 m_owner   varchar2(512);
 m_type    varchar2(512);
 m_name    varchar2(5120);
 m_adt     NUMBER;
 m_cnt     NUMBER;
 m_stmt    varchar2(4000);
 m_ret     varchar2(3000);
 m_ret1     varchar2(512);
begin



 m_stmt := 'select mdsys.GetMdsysEvent() from dual';
 execute immediate m_stmt into m_cnt;
 if ( m_cnt != 0 ) then
   return;
 end if;

 m_stmt:='select sys.dbms_standard.dictionary_obj_type from dual';
 execute immediate m_stmt into m_type;
 if(not (m_type='TABLE' or m_type='TRIGGER' or m_type='USER' or m_type='TABLESPACE'))
 then
   return;
 end if;

 m_stmt:='select sys.dbms_standard.dictionary_obj_owner from dual';
 execute immediate m_stmt into m_owner;

 m_stmt:='select sys.dbms_standard.dictionary_obj_name from dual';
 execute immediate m_stmt into m_name;

 m_stmt:='select sys.dbms_standard.sysevent from dual';
 execute immediate m_stmt into m_event;





 if ( m_type = 'TABLE' and m_event != 'DROP' and m_event != 'RENAME' ) then
   m_stmt := 'select mdsys.TblContainsAdt(:own, :tab) from dual';
   begin
     execute immediate m_stmt into m_adt using m_owner, m_name;
     exception when others then
       m_adt := 1;
   end;
   if ( m_adt = 0 ) then
     return;
   end if;
 end if;

 if((instr(nls_upper(m_name),'MDRT_')>0) and m_event='DROP')
 then
   return;
 end if;








 if (m_owner!='MDSYS' and m_owner!='SYS' and m_type='TABLE' and m_event='CREATE')
 then
   m_stmt:='select sdo_geor_def.listAllGeoRasterFieldsStr(:1,:2) from dual';
   execute immediate m_stmt  into m_ret  using m_owner,m_name;
   m_ret:=trim(m_ret);
   while (length(m_ret)!=0) loop
     if (instr(m_ret,' $$__## ')!=0)
     then
       m_ret1:=trim(substr(m_ret,1,instr(m_ret,' $$__## ')-1));
       m_ret:=trim(substr(m_ret,instr(m_ret,' $$__## ')+8));
     else
       m_ret1:=trim(m_ret);
       m_ret:='';
     end if;
     m_stmt:='begin SDO_GEOR_UTL.createDMLTrigger(:1,:2); end;';
    execute immediate m_stmt using m_owner||'.'||m_name,m_ret1;
   end loop;
   return;
 end if;






















  if (m_name!='MDSYS' and m_type='USER' and m_event='DROP')
  then
     m_stmt:='call sdo_geor_def.doDropUserAndTable()';
     execute immediate m_stmt;
  end if;

  if (m_owner!='MDSYS' and m_owner!='SYS' and m_type='TABLE' and m_event='DROP')
  then
     m_stmt:='call sdo_geor_def.doDropUserAndTable()';
     execute immediate m_stmt;
  end if;

  if (m_owner!='MDSYS' and m_owner!='SYS' and m_type='TABLE' and m_event='TRUNCATE')
  then
     m_stmt:='call sdo_geor_def.doTruncateTable()';
     execute immediate m_stmt;
  end if;

  if (m_owner!='MDSYS' and m_owner!='SYS' and m_type='TABLE' and m_event='ALTER')
  then
     m_stmt:='call sdo_geor_def.doAlterRenameTable()';
     execute immediate m_stmt;
  end if;

  if (m_owner!='MDSYS' and m_owner!='SYS' and m_type='TABLE' and m_event='RENAME')
  then
     m_stmt:='call sdo_geor_def.doRenameTable()';
     execute immediate m_stmt;
  end if;






 if (m_event='DROP' and m_type='TABLE')
 then
   m_stmt:='delete from sdo_geor_ddl__table$$ where id=2';
   EXECUTE IMMEDIATE m_stmt;
 end if;

 if ((m_type='USER' and m_event='DROP') or (m_type='TABLESPACE' and m_event='DROP'))
 then
   m_stmt:='delete from sdo_geor_ddl__table$$';
   EXECUTE IMMEDIATE m_stmt;
 end if;

 Exception
   when others then
     if(sqlcode=-13391)
     then
       m_stmt:=sqlerrm;
       m_stmt:=substr(m_stmt,11);
       m_stmt:='call mderr.raise_md_error(''MD'', ''SDO'', -13391,'''||m_stmt||''')';
       execute immediate m_stmt;
     end if;
end;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER MDSYS.sdo_geor_bddl_trigger
before ddl on database
declare
 TYPE attrs_cur IS REF CURSOR;
 m_cur       attrs_cur;
 m_event varchar2(512);
 m_user  varchar2(512);
 m_owner varchar2(512);
 m_type  varchar2(512);
 m_name  varchar2(5120);
 m_column varchar2(5120);
 m_cnt   NUMBER;
 m_adt   NUMBER;
 m_stmt  varchar2(4000);
 m_stmt1 varchar2(4000);
 m_var   varchar2(512);
 m_o_stmt VARCHAR2(5120);
PRAGMA AUTONOMOUS_TRANSACTION;
begin



 m_stmt := 'select mdsys.GetMdsysEvent() from dual';
 execute immediate m_stmt into m_cnt;
 if ( m_cnt != 0 ) then
   return;
 end if;

 m_stmt:='select sys.dbms_standard.dictionary_obj_type from dual';
 execute immediate m_stmt into m_type;
 if(not (m_type='TABLE' or m_type='TRIGGER' or m_type='USER' or m_type='TABLESPACE'))
 then
   return;
 end if;

 m_stmt:='select sys.dbms_standard.dictionary_obj_owner from dual';
 execute immediate m_stmt into m_owner;

 m_stmt:='select sys.dbms_standard.dictionary_obj_name from dual';
 execute immediate m_stmt into m_name;

 m_stmt:='select sys.dbms_standard.sysevent from dual';
 execute immediate m_stmt into m_event;





 if ( m_type = 'TABLE' and m_event != 'DROP' and m_event != 'RENAME' ) then
   m_stmt := 'select mdsys.TblContainsAdt(:own, :tab) from dual';
   begin
     execute immediate m_stmt into m_adt using m_owner, m_name;
     exception when others then
       m_adt := 1;
   end;
   if ( m_adt = 0 ) then
     return;
   end if;
 end if;

 m_stmt:='select SYS_CONTEXT(''USERENV'',''SESSION_USER'') from dual';
 execute immediate m_stmt into m_user;







  if (m_owner!='MDSYS' and m_owner!='SYS' and m_type='TABLE' and m_event='ALTER')
  then
    m_stmt:='select column_name from dba_tab_columns where owner=:1 and table_name=:2';
    begin
      open m_cur for m_stmt using m_owner,m_name;
      loop
        fetch m_cur into m_column;
        exit when m_cur%NOTFOUND;
        m_stmt:='select sdo_geor_def.isDropColumn(:1) from dual';
        execute immediate m_stmt into m_stmt1 using m_column;
        if (trim(m_stmt1)='TRUE')
        then
          m_stmt:='begin sdo_geor_def.doAlterDropColumn(:1,:2,:3); end;';
          execute immediate m_stmt using m_owner,m_name,m_column;
        end if;
      end loop;
      close m_cur;

      EXCEPTION WHEN OTHERS THEN
        IF m_cur%ISOPEN THEN
          close m_cur;
        END IF;
      RAISE;
    end;
  end if;







 if ((m_event='DROP' and m_type='USER') or (m_event='DROP' and m_type='TABLESPACE'))
 then
   m_stmt:='insert into sdo_geor_ddl__table$$ values (1)';
   EXECUTE IMMEDIATE m_stmt;
   commit;
 end if;

 if (m_event='DROP' and m_type='TABLE')
 then
   if((m_user!='SYS' and m_user!='SYSTEM' and m_user!='MDSYS'and m_owner!='MDSYS' and m_owner!='SYS'))
   then


     m_stmt:='select /*+ FIRST_ROWS(1) */ count(*) from sdo_geor_sysdata_table where sdo_owner=:1 and RDT_TABLE_NAME=:2 and ROWNUM < 2';
     EXECUTE IMMEDIATE m_stmt into m_cnt using m_owner,m_name;
     if(m_cnt!=0)
     then


       m_stmt:='select /*+ FIRST_ROWS(1) */ count(*) from sdo_geor_ddl__table$$ where ROWNUM < 2';
       EXECUTE IMMEDIATE m_stmt into m_cnt;
       if(m_cnt=0)
       then
          m_stmt:='call mderr.raise_md_error(''MD'', ''SDO'', -13391, ''The referenced raster data table(RDT) cannot be dropped.'')';
          execute immediate m_stmt;
       end if;
     end if;
   end if;

   m_stmt:='insert into sdo_geor_ddl__table$$ values (2)';
   EXECUTE IMMEDIATE m_stmt;
   commit;
 end if;

 if(m_user='SYS' or m_user='SYSTEM' or m_user='MDSYS'
   or m_owner='MDSYS' or m_owner='SYS')
 then
   return;
 end if;


 if (m_event='RENAME' and m_type='TABLE')
 then


   m_stmt:='select /*+ FIRST_ROWS(1) */ count(*) from sdo_geor_sysdata_table where sdo_owner=:1 and RDT_TABLE_NAME=:2 and ROWNUM < 2';
   EXECUTE IMMEDIATE m_stmt into m_cnt using m_owner,m_name;
   if(m_cnt!=0)
   then


     m_stmt:='select /*+ FIRST_ROWS(1) */ count(*) from sdo_geor_ddl__table$$ where ROWNUM < 2';
     EXECUTE IMMEDIATE m_stmt into m_cnt;
     if(m_cnt=0)
     then
        m_stmt:='call mderr.raise_md_error(''MD'', ''SDO'', -13391, ''The referenced raster data table(RDT) cannot be renamed directly.'')';
        execute immediate m_stmt;
     end if;
   end if;

 end if;

 if (m_type='TRIGGER' and m_event='DROP')
 then
   m_stmt:='select REGEXP_SUBSTR(:1,''GRDMLTR_.+'',1,1,''i'') from dual';
   EXECUTE IMMEDIATE m_stmt into m_var using m_name;
   if(m_var is null)
   then
     return;
   end if;



   m_stmt:='select /*+ FIRST_ROWS(1) */ count(*) from sdo_geor_ddl__table$$ where ROWNUM < 2';
   EXECUTE IMMEDIATE m_stmt into m_cnt;
   if(m_cnt=0)
   then
     m_stmt:='call mderr.raise_md_error(''MD'', ''SDO'', -13391, ''GeoRaster DML triggers cannot be dropped.'')';
     execute immediate m_stmt;
   end if;
 end if;

 if (m_type='TRIGGER' and m_event='ALTER')
 then
   m_stmt:='select sdo_geor_def.getSqlText from dual';
   execute immediate m_stmt into m_o_stmt;
   m_o_stmt:=nls_upper(trim(m_o_stmt));
   if(instr(m_o_stmt,' COMPILE ')>0 or instr(m_o_stmt,' ENABLE ')>0
     or substr(m_o_stmt,length(m_o_stmt)-8,8)=' COMPILE' or substr(m_o_stmt,length(m_o_stmt)-7,7)=' ENABLE' )
   then
     return;
   end if;
   m_stmt:='select REGEXP_SUBSTR(:1,''GRDMLTR_.+'',1,1,''i'') from dual';
   EXECUTE IMMEDIATE m_stmt into m_var using m_name;
   if(m_var is null)
   then
     return;
   end if;



   m_stmt:='select /*+ FIRST_ROWS(1) */ count(*) from sdo_geor_ddl__table$$ where ROWNUM < 2';
   EXECUTE IMMEDIATE m_stmt into m_cnt;
   if(m_cnt=0)
   then
     m_stmt:='call mderr.raise_md_error(''MD'', ''SDO'', -13391, ''GeoRaster DML triggers cannot be altered.'')';
     execute immediate m_stmt;
   end if;
 end if;

 if (m_type='TRIGGER' and m_event='CREATE')
 then
   m_stmt:='select REGEXP_SUBSTR(:1,''GRDMLTR_.+'',1,1,''i'') from dual';
   EXECUTE IMMEDIATE m_stmt into m_var using m_name;
   if(m_var is null)
   then
     return;
   end if;


   m_stmt:='select /*+ FIRST_ROWS(1) */ count(*) from sdo_geor_ddl__table$$ where ROWNUM < 2';
   EXECUTE IMMEDIATE m_stmt into m_cnt;
   if(m_cnt=0)
   then
     m_stmt:='call mderr.raise_md_error(''MD'', ''SDO'', -13391, ''GeoRaster reserved names cannot be used to create regular triggers.'')';
     execute immediate m_stmt;
   end if;
 end if;

 Exception
   when others then
     if(sqlcode=-13391)
     then
       m_stmt:=sqlerrm;
       m_stmt:=substr(m_stmt,11);
       m_stmt:='call mderr.raise_md_error(''MD'', ''SDO'', -13391,'''||m_stmt||''')';
       execute immediate m_stmt;
     end if;
end;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER MDSYS.SDO_NETWORK_DROP_USER
AFTER DROP ON DATABASE
DECLARE
  stmt    VARCHAR2(256);
BEGIN

  IF  sys.dbms_standard.dictionary_obj_type = 'USER'  THEN
    stmt := 'DELETE FROM SDO_NETWORK_METADATA_TABLE WHERE SDO_OWNER = :name';
    EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

    stmt := 'DELETE FROM SDO_NETWORK_CONSTRAINTS WHERE SDO_OWNER = :name';
    EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

    stmt := 'DELETE FROM SDO_NETWORK_LOCKS_WM WHERE SDO_OWNER = :name';
    EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

    stmt := 'DELETE FROM SDO_NETWORK_USER_DATA WHERE SDO_OWNER = :name';
    EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

    --lrg-3417773
    stmt := 'DELETE FROM SDO_NETWORK_HISTORIES WHERE OWNER = :name';
    EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

    stmt := 'DELETE FROM SDO_NETWORK_TIMESTAMPS WHERE OWNER = :name';
    EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

    stmt := 'DELETE FROM SDO_NETWORK_FEATURE WHERE SDO_OWNER = :name';
    EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

    -- nfe
    stmt := 'DELETE FROM SDO_NFE_MODEL_METADATA_TABLE WHERE SDO_OWNER = :name';
    EXECUTE IMMEDIATE stmt USING NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

    stmt := 'DELETE FROM SDO_NFE_MODEL_FTLAYER_REL WHERE SDO_OWNER = :name';
    EXECUTE IMMEDIATE stmt USING NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

    stmt := 'DELETE FROM SDO_NFE_MODEL_WORKSPACE WHERE SDO_OWNER = :name';
    EXECUTE IMMEDIATE stmt USING NLS_UPPER(sys.dbms_standard.dictionary_obj_name);

  END IF;
END ;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER MDSYS.sdo_st_syn_create
  BEFORE CREATE ON DATABASE
declare
 error boolean;
  st_syn_detected EXCEPTION;
   PRAGMA EXCEPTION_INIT(st_syn_detected, -995);
 BEGIN
   if((sys.dbms_standard.dictionary_obj_type!='SYNONYM')or(sys.dbms_standard.dictionary_obj_owner!='PUBLIC'))
   then
     return;
   end if;
   error :=
      CASE sys.dbms_standard.dictionary_obj_name
         WHEN 'ST_GEOMETRY' THEN TRUE
         WHEN 'ST_SURFACE' THEN TRUE
         WHEN 'ST_POLYGON' THEN TRUE
         WHEN 'ST_POINT' THEN TRUE
         WHEN 'ST_MULTISURFACE' THEN TRUE
         WHEN 'ST_MULTIPOINT' THEN TRUE
         WHEN 'ST_MULTILINESTRING' THEN TRUE
         WHEN 'ST_MULTICURVE' THEN TRUE
         WHEN 'ST_LINESTRING' THEN TRUE
         WHEN 'ST_GEOMCOLLECTION' THEN TRUE
         WHEN 'ST_CURVE' THEN TRUE
         WHEN 'ST_CURVEPOLYGON' THEN TRUE
         WHEN 'ST_COMPOUNDCURVE' THEN TRUE
         WHEN 'ST_CIRCULARSTRING' THEN TRUE
         WHEN 'ST_INTERSECTS' THEN TRUE
         WHEN 'ST_RELATE' THEN TRUE
         WHEN 'ST_TOUCH' THEN TRUE
         WHEN 'ST_CONTAINS' THEN TRUE
         WHEN 'ST_COVERS' THEN TRUE
         WHEN 'ST_COVEREDBY' THEN TRUE
         WHEN 'ST_INSIDE' THEN TRUE
         WHEN 'ST_OVERLAP' THEN TRUE
         WHEN 'ST_OVERLAPS' THEN TRUE
         WHEN 'ST_EQUAL' THEN TRUE
         WHEN 'ST_OVERLAPBDYDISJOINT' THEN TRUE
         WHEN 'ST_OVERLAPBDYINTERSECT' THEN TRUE
         WHEN 'ST_GEOMETRY_ARRAY' THEN TRUE
         WHEN 'ST_POINT_ARRAY' THEN TRUE
         WHEN 'ST_CURVE_ARRAY' THEN TRUE
         WHEN 'ST_SURFACE_ARRAY' THEN TRUE
         WHEN 'ST_LINESTRING_ARRAY' THEN TRUE
         WHEN 'ST_POLYGON_ARRAY' THEN TRUE
         ELSE FALSE
      END;

   if(error) then
     raise st_syn_detected;

   end if;
 END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER MDSYS.sdo_topo_drop_ftbl
  BEFORE DROP ON DATABASE
DISABLE
DECLARE
    cnt        NUMBER;
    stmt       VARCHAR(500);
    topology   VARCHAR(100);
    REG_TBL    EXCEPTION;

  BEGIN
    if(sys.dbms_standard.dictionary_obj_type != 'TABLE')
    then
      return;
    end if;
    stmt := 'SELECT topology ' ||
     'FROM MDSYS.SDO_TOPO_METADATA_TABLE a, TABLE(a.Topo_Geometry_Layers) b ' ||
     'WHERE b.owner = :owner AND b.table_name = :tab ';
    EXECUTE IMMEDIATE stmt into topology
      USING sys.dbms_standard.DICTIONARY_OBJ_OWNER,
            sys.dbms_standard.DICTIONARY_OBJ_NAME;
    RAISE REG_TBL;

    EXCEPTION
      WHEN REG_TBL THEN
        MDSYS.MDERR.raise_md_error(
         'MD', 'SDO', -13199,
         'Need to use delete_topo_geometry_layer() to deregister table '
       || sys.dbms_standard.DICTIONARY_OBJ_NAME ||
             ' from topology ' || topology ||
         ' before dropping it');
      WHEN OTHERS THEN
        RETURN;
  END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER WMSYS.NO_VM_DDL before alter or create or drop or rename or truncate on database
DISABLE
WHEN (
(ora_sysevent in ('ALTER', 'RENAME', 'TRUNCATE') and ora_dict_obj_type in ('INDEX','TABLE')) or
        (ora_sysevent = 'CREATE' and ora_dict_obj_type in ('INDEX', 'PROCEDURE', 'TRIGGER', 'VIEW')) or
        (ora_sysevent = 'DROP' and ora_dict_obj_type in ('INDEX', 'PROCEDURE', 'ROLE', 'TABLE', 'TRIGGER', 'TYPE', 'USER', 'VIEW'))
      )
declare
  validStack  integer ;
begin
  if (sys_context('lt_ctx', 'allowDDLOperation')='true') then
    return ;
  end if ;

  if (sys_context('lt_ctx', 'validStack') is null or sys_context('lt_ctx', 'validStack') != 'YES') then
    validStack := 0 ;
  else
    validStack := 1 ;
  end if ;

  if (ora_sysevent='CREATE') then
    wmsys.ltadm.no_vm_create_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner, validStack) ;
  elsif (ora_sysevent='DROP') then
    wmsys.ltadm.no_vm_drop_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner, validStack) ;
  elsif (ora_sysevent in ('ALTER', 'RENAME', 'TRUNCATE')) then
    wmsys.ltadm.no_vm_alter_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner, validStack) ;
  end if ;
end;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER WMSYS.NO_VM_DROP_A after drop on database
DISABLE
WHEN (
ora_dict_obj_type in ('USER')
      )
begin
  wmsys.lt_ctx_pkg.allowDDLOperation('false') ;



end;
/
SHOW ERRORS;


CREATE ROLE DV_ADMIN NOT IDENTIFIED;

-- Roles granted to DV_ADMIN
GRANT DV_SECANALYST TO DV_ADMIN;



CREATE ROLE DV_OWNER NOT IDENTIFIED;

-- Roles granted to DV_OWNER
GRANT DV_ADMIN TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_AUDIT_CLEANUP TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_DATAPUMP_NETWORK_LINK TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_GOLDENGATE_ADMIN TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_GOLDENGATE_REDO_ACCESS TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_MONITOR TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_PATCH_ADMIN TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_POLICY_OWNER TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_PUBLIC TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_SECANALYST TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_STREAMS_ADMIN TO DV_OWNER WITH ADMIN OPTION;
GRANT DV_XSTREAM_ADMIN TO DV_OWNER WITH ADMIN OPTION;



CREATE ROLE EM_EXPRESS_BASIC NOT IDENTIFIED;

-- System privileges granted to EM_EXPRESS_BASIC
GRANT CREATE SESSION TO EM_EXPRESS_BASIC;
GRANT EM EXPRESS CONNECT TO EM_EXPRESS_BASIC;

-- Roles granted to EM_EXPRESS_BASIC
GRANT SELECT_CATALOG_ROLE TO EM_EXPRESS_BASIC;



CREATE ROLE EXECUTE_CATALOG_ROLE NOT IDENTIFIED;

-- Roles granted to EXECUTE_CATALOG_ROLE
GRANT HS_ADMIN_EXECUTE_ROLE TO EXECUTE_CATALOG_ROLE;



CREATE ROLE EXP_FULL_DATABASE NOT IDENTIFIED;

-- System privileges granted to EXP_FULL_DATABASE
BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'EXP_FULL_DATABASE', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => FALSE);
END;
/
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO EXP_FULL_DATABASE;
GRANT ANALYZE ANY TO EXP_FULL_DATABASE;
GRANT BACKUP ANY TABLE TO EXP_FULL_DATABASE;
GRANT CREATE SESSION TO EXP_FULL_DATABASE;
GRANT CREATE TABLE TO EXP_FULL_DATABASE;
GRANT EXECUTE ANY PROCEDURE TO EXP_FULL_DATABASE;
GRANT EXECUTE ANY TYPE TO EXP_FULL_DATABASE;
GRANT EXEMPT REDACTION POLICY TO EXP_FULL_DATABASE;
GRANT FLASHBACK ANY TABLE TO EXP_FULL_DATABASE;
GRANT READ ANY FILE GROUP TO EXP_FULL_DATABASE;
GRANT RESUMABLE TO EXP_FULL_DATABASE;
GRANT SELECT ANY SEQUENCE TO EXP_FULL_DATABASE;
GRANT SELECT ANY TABLE TO EXP_FULL_DATABASE;

-- Roles granted to EXP_FULL_DATABASE
GRANT EXECUTE_CATALOG_ROLE TO EXP_FULL_DATABASE;
GRANT SELECT_CATALOG_ROLE TO EXP_FULL_DATABASE;



CREATE ROLE GSMADMIN_ROLE NOT IDENTIFIED;

-- System privileges granted to GSMADMIN_ROLE
GRANT ALTER SESSION TO GSMADMIN_ROLE;
GRANT ALTER SYSTEM TO GSMADMIN_ROLE;

-- Roles granted to GSMADMIN_ROLE
GRANT AQ_ADMINISTRATOR_ROLE TO GSMADMIN_ROLE;
GRANT CONNECT TO GSMADMIN_ROLE;
GRANT XDBADMIN TO GSMADMIN_ROLE;



CREATE ROLE HS_ADMIN_ROLE NOT IDENTIFIED;

-- Roles granted to HS_ADMIN_ROLE
GRANT HS_ADMIN_EXECUTE_ROLE TO HS_ADMIN_ROLE;
GRANT HS_ADMIN_SELECT_ROLE TO HS_ADMIN_ROLE;



CREATE ROLE IMP_FULL_DATABASE NOT IDENTIFIED;

-- System privileges granted to IMP_FULL_DATABASE
GRANT ADMINISTER DATABASE TRIGGER TO IMP_FULL_DATABASE;
BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'IMP_FULL_DATABASE', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => FALSE);
END;
/
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO IMP_FULL_DATABASE;
GRANT ALTER ANY PROCEDURE TO IMP_FULL_DATABASE;
GRANT ALTER ANY TABLE TO IMP_FULL_DATABASE;
GRANT ALTER ANY TRIGGER TO IMP_FULL_DATABASE;
GRANT ALTER ANY TYPE TO IMP_FULL_DATABASE;
GRANT ALTER DATABASE TO IMP_FULL_DATABASE;
GRANT ALTER PROFILE TO IMP_FULL_DATABASE;
GRANT ALTER RESOURCE COST TO IMP_FULL_DATABASE;
GRANT ALTER TABLESPACE TO IMP_FULL_DATABASE;
GRANT ALTER USER TO IMP_FULL_DATABASE;
GRANT ANALYZE ANY TO IMP_FULL_DATABASE;
GRANT AUDIT ANY TO IMP_FULL_DATABASE;
GRANT AUDIT SYSTEM TO IMP_FULL_DATABASE;
GRANT BECOME USER TO IMP_FULL_DATABASE;
GRANT COMMENT ANY TABLE TO IMP_FULL_DATABASE;
GRANT CREATE ANY CLUSTER TO IMP_FULL_DATABASE;
GRANT CREATE ANY CONTEXT TO IMP_FULL_DATABASE;
GRANT CREATE ANY DIMENSION TO IMP_FULL_DATABASE;
GRANT CREATE ANY DIRECTORY TO IMP_FULL_DATABASE;
GRANT CREATE ANY INDEX TO IMP_FULL_DATABASE;
GRANT CREATE ANY INDEXTYPE TO IMP_FULL_DATABASE;
GRANT CREATE ANY LIBRARY TO IMP_FULL_DATABASE;
GRANT CREATE ANY MATERIALIZED VIEW TO IMP_FULL_DATABASE;
GRANT CREATE ANY OPERATOR TO IMP_FULL_DATABASE;
GRANT CREATE ANY PROCEDURE TO IMP_FULL_DATABASE;
GRANT CREATE ANY SEQUENCE TO IMP_FULL_DATABASE;
GRANT CREATE ANY SQL PROFILE TO IMP_FULL_DATABASE;
GRANT CREATE ANY SYNONYM TO IMP_FULL_DATABASE;
GRANT CREATE ANY TABLE TO IMP_FULL_DATABASE;
GRANT CREATE ANY TRIGGER TO IMP_FULL_DATABASE;
GRANT CREATE ANY TYPE TO IMP_FULL_DATABASE;
GRANT CREATE ANY VIEW TO IMP_FULL_DATABASE;
GRANT CREATE DATABASE LINK TO IMP_FULL_DATABASE;
GRANT CREATE PROFILE TO IMP_FULL_DATABASE;
GRANT CREATE PUBLIC DATABASE LINK TO IMP_FULL_DATABASE;
GRANT CREATE PUBLIC SYNONYM TO IMP_FULL_DATABASE;
GRANT CREATE ROLE TO IMP_FULL_DATABASE;
GRANT CREATE ROLLBACK SEGMENT TO IMP_FULL_DATABASE;
GRANT CREATE SESSION TO IMP_FULL_DATABASE;
GRANT CREATE TABLESPACE TO IMP_FULL_DATABASE;
GRANT CREATE USER TO IMP_FULL_DATABASE;
GRANT DELETE ANY TABLE TO IMP_FULL_DATABASE;
GRANT DROP ANY CLUSTER TO IMP_FULL_DATABASE;
GRANT DROP ANY CONTEXT TO IMP_FULL_DATABASE;
GRANT DROP ANY DIMENSION TO IMP_FULL_DATABASE;
GRANT DROP ANY DIRECTORY TO IMP_FULL_DATABASE;
GRANT DROP ANY INDEX TO IMP_FULL_DATABASE;
GRANT DROP ANY INDEXTYPE TO IMP_FULL_DATABASE;
GRANT DROP ANY LIBRARY TO IMP_FULL_DATABASE;
GRANT DROP ANY MATERIALIZED VIEW TO IMP_FULL_DATABASE;
GRANT DROP ANY OPERATOR TO IMP_FULL_DATABASE;
GRANT DROP ANY OUTLINE TO IMP_FULL_DATABASE;
GRANT DROP ANY PROCEDURE TO IMP_FULL_DATABASE;
GRANT DROP ANY ROLE TO IMP_FULL_DATABASE;
GRANT DROP ANY SEQUENCE TO IMP_FULL_DATABASE;
GRANT DROP ANY SQL PROFILE TO IMP_FULL_DATABASE;
GRANT DROP ANY SYNONYM TO IMP_FULL_DATABASE;
GRANT DROP ANY TABLE TO IMP_FULL_DATABASE;
GRANT DROP ANY TRIGGER TO IMP_FULL_DATABASE;
GRANT DROP ANY TYPE TO IMP_FULL_DATABASE;
GRANT DROP ANY VIEW TO IMP_FULL_DATABASE;
GRANT DROP PROFILE TO IMP_FULL_DATABASE;
GRANT DROP PUBLIC DATABASE LINK TO IMP_FULL_DATABASE;
GRANT DROP PUBLIC SYNONYM TO IMP_FULL_DATABASE;
GRANT DROP ROLLBACK SEGMENT TO IMP_FULL_DATABASE;
GRANT DROP TABLESPACE TO IMP_FULL_DATABASE;
GRANT DROP USER TO IMP_FULL_DATABASE;
GRANT EXECUTE ANY OPERATOR TO IMP_FULL_DATABASE;
GRANT EXECUTE ANY PROCEDURE TO IMP_FULL_DATABASE;
GRANT EXECUTE ANY TYPE TO IMP_FULL_DATABASE;
GRANT GLOBAL QUERY REWRITE TO IMP_FULL_DATABASE;
GRANT GRANT ANY OBJECT PRIVILEGE TO IMP_FULL_DATABASE;
GRANT GRANT ANY PRIVILEGE TO IMP_FULL_DATABASE;
GRANT GRANT ANY ROLE TO IMP_FULL_DATABASE;
GRANT INSERT ANY TABLE TO IMP_FULL_DATABASE;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'IMP_FULL_DATABASE',
  ADMIN_OPTION => FALSE);
END;
/
GRANT RESUMABLE TO IMP_FULL_DATABASE;
GRANT SELECT ANY TABLE TO IMP_FULL_DATABASE;
GRANT UPDATE ANY TABLE TO IMP_FULL_DATABASE;

-- Roles granted to IMP_FULL_DATABASE
GRANT EXECUTE_CATALOG_ROLE TO IMP_FULL_DATABASE;
GRANT SELECT_CATALOG_ROLE TO IMP_FULL_DATABASE;



CREATE ROLE JAVASYSPRIV NOT IDENTIFIED;

-- Roles granted to JAVASYSPRIV
GRANT JAVAUSERPRIV TO JAVASYSPRIV;



CREATE ROLE OEM_MONITOR NOT IDENTIFIED;

-- System privileges granted to OEM_MONITOR
GRANT ADVISOR TO OEM_MONITOR;
GRANT ANALYZE ANY TO OEM_MONITOR;
GRANT ANALYZE ANY DICTIONARY TO OEM_MONITOR;
GRANT CREATE JOB TO OEM_MONITOR;
GRANT CREATE SESSION TO OEM_MONITOR;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'OEM_MONITOR',
  ADMIN_OPTION => FALSE);
END;
/
GRANT SELECT ANY DICTIONARY TO OEM_MONITOR;

-- Roles granted to OEM_MONITOR
GRANT SELECT_CATALOG_ROLE TO OEM_MONITOR;



CREATE ROLE RECOVERY_CATALOG_OWNER_VPD NOT IDENTIFIED;

-- System privileges granted to RECOVERY_CATALOG_OWNER_VPD
GRANT ADMINISTER DATABASE TRIGGER TO RECOVERY_CATALOG_OWNER_VPD;
GRANT CREATE ANY SYNONYM TO RECOVERY_CATALOG_OWNER_VPD;
GRANT DROP ANY SYNONYM TO RECOVERY_CATALOG_OWNER_VPD;

-- Roles granted to RECOVERY_CATALOG_OWNER_VPD
GRANT RECOVERY_CATALOG_OWNER TO RECOVERY_CATALOG_OWNER_VPD;
GRANT RECOVERY_CATALOG_USER TO RECOVERY_CATALOG_OWNER_VPD WITH ADMIN OPTION;



CREATE ROLE RESOURCE NOT IDENTIFIED;

-- System privileges granted to RESOURCE
GRANT CREATE CLUSTER TO RESOURCE;
GRANT CREATE INDEXTYPE TO RESOURCE;
GRANT CREATE OPERATOR TO RESOURCE;
GRANT CREATE PROCEDURE TO RESOURCE;
GRANT CREATE SEQUENCE TO RESOURCE;
GRANT CREATE TABLE TO RESOURCE;
GRANT CREATE TRIGGER TO RESOURCE;
GRANT CREATE TYPE TO RESOURCE;

-- Roles granted to RESOURCE
GRANT SODA_APP TO RESOURCE;



CREATE USER CTXSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 2 Roles for CTXSYS 
  GRANT CTXAPP TO CTXSYS WITH ADMIN OPTION;
  GRANT RESOURCE TO CTXSYS;
  ALTER USER CTXSYS DEFAULT ROLE ALL;
  -- 11 System Privileges for CTXSYS 
  GRANT ALTER SESSION TO CTXSYS;
  GRANT CREATE JOB TO CTXSYS;
  GRANT CREATE PUBLIC SYNONYM TO CTXSYS;
  GRANT CREATE SESSION TO CTXSYS;
  GRANT CREATE SYNONYM TO CTXSYS;
  GRANT CREATE VIEW TO CTXSYS;
  GRANT DROP PUBLIC SYNONYM TO CTXSYS;
  GRANT INHERIT ANY PRIVILEGES TO CTXSYS;
  GRANT MANAGE SCHEDULER TO CTXSYS;
  GRANT SET CONTAINER TO CTXSYS;
  GRANT UNLIMITED TABLESPACE TO CTXSYS;
  -- 61 Object Privileges for CTXSYS 
    GRANT SELECT ON SYS.ARGUMENT$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.CCOL$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.CDEF$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.COL$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.COLTYPE$ TO CTXSYS;
    GRANT SELECT ON SYS.CON$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_COLL_TYPES TO CTXSYS;
    GRANT SELECT ON SYS.DBA_CONSTRAINTS TO CTXSYS;
    GRANT SELECT ON SYS.DBA_CONS_COLUMNS TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_DB_LINKS TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_INDEXES TO CTXSYS;
    GRANT SELECT ON SYS.DBA_INDEXTYPES TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_JOBS TO CTXSYS;
    GRANT SELECT ON SYS.DBA_JOBS_RUNNING TO CTXSYS;
    GRANT SELECT ON SYS.DBA_OBJECTS TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_PART_KEY_COLUMNS TO CTXSYS;
    GRANT SELECT ON SYS.DBA_PROCEDURES TO CTXSYS;
    GRANT SELECT ON SYS.DBA_ROLES TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_ROLE_PRIVS TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_SEGMENTS TO CTXSYS;
    GRANT SELECT ON SYS.DBA_SYNONYMS TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_SYS_PRIVS TO CTXSYS;
    GRANT SELECT ON SYS.DBA_TABLES TO CTXSYS;
    GRANT SELECT ON SYS.DBA_TAB_COLS TO CTXSYS;
    GRANT SELECT ON SYS.DBA_TAB_COLUMNS TO CTXSYS;
    GRANT SELECT ON SYS.DBA_TAB_PARTITIONS TO CTXSYS;
    GRANT SELECT ON SYS.DBA_TAB_PRIVS TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_TRIGGERS TO CTXSYS;
    GRANT SELECT ON SYS.DBA_TYPES TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_TYPE_ATTRS TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_USERS TO CTXSYS;
    GRANT EXECUTE ON SYS.DBMS_LOCK TO CTXSYS;
    GRANT EXECUTE ON SYS.DBMS_PIPE TO CTXSYS;
    GRANT EXECUTE ON SYS.DBMS_PRIV_CAPTURE TO CTXSYS;
    GRANT EXECUTE ON SYS.DBMS_REGISTRY TO CTXSYS;
    GRANT SELECT ON SYS.GV_$DB_OBJECT_CACHE TO CTXSYS;
    GRANT SELECT ON SYS.GV_$PARAMETER TO CTXSYS;
    GRANT SELECT ON SYS.ICOL$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.IND$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.INDPART$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.LOB$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.LOBFRAG$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.OBJ$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.OPQTYPE$ TO CTXSYS;
    GRANT SELECT ON SYS.PARTOBJ$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.SNAP$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.SYN$ TO CTXSYS WITH GRANT OPTION;
    GRANT INHERIT PRIVILEGES ON USER SYS TO CTXSYS;
    GRANT SELECT ON SYS.SYSAUTH$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.TAB$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.TABPART$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.TS$ TO CTXSYS WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.VALIDATE_CONTEXT TO CTXSYS;
    GRANT SELECT ON SYS.VIEW$ TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.V_$DB_PIPES TO CTXSYS;
    GRANT SELECT ON SYS.V_$PARAMETER TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.V_$RESOURCE TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.V_$SESSION TO CTXSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.V_$THREAD TO CTXSYS WITH GRANT OPTION;
    GRANT INHERIT PRIVILEGES ON USER XDB TO CTXSYS;
    GRANT SELECT ON SYS."_BASE_USER" TO CTXSYS WITH GRANT OPTION;


CREATE USER DBSNMP
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 3 Roles for DBSNMP 
  GRANT CDB_DBA TO DBSNMP;
  GRANT DV_MONITOR TO DBSNMP;
  GRANT OEM_MONITOR TO DBSNMP;
  ALTER USER DBSNMP DEFAULT ROLE ALL;
  -- 5 System Privileges for DBSNMP 
  GRANT CREATE PROCEDURE TO DBSNMP;
  GRANT CREATE TABLE TO DBSNMP;
  GRANT INHERIT ANY PRIVILEGES TO DBSNMP;
  GRANT SELECT ANY DICTIONARY TO DBSNMP;
  GRANT UNLIMITED TABLESPACE TO DBSNMP;
  -- 6 Object Privileges for DBSNMP 
    GRANT SELECT ON APPQOSSYS.WLM_CLASSIFIER_PLAN TO DBSNMP;
    GRANT SELECT ON APPQOSSYS.WLM_METRICS_STREAM TO DBSNMP;
    GRANT SELECT ON APPQOSSYS.WLM_MPA_STREAM TO DBSNMP;
    GRANT SELECT ON APPQOSSYS.WLM_VIOLATION_STREAM TO DBSNMP;
    GRANT EXECUTE ON SYS.DBMS_MANAGEMENT_PACKS TO DBSNMP;
    GRANT EXECUTE ON SYS.DBMS_SERVER_ALERT TO DBSNMP;


CREATE USER GGSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 2 Roles for GGSYS 
  GRANT CONNECT TO GGSYS;
  GRANT RESOURCE TO GGSYS;
  ALTER USER GGSYS DEFAULT ROLE ALL;
  -- 7 System Privileges for GGSYS 
  GRANT ALTER ANY INDEX TO GGSYS;
  GRANT ALTER ANY TABLE TO GGSYS;
  GRANT CREATE ANY TABLE TO GGSYS;
  GRANT CREATE DATABASE LINK TO GGSYS;
  GRANT SELECT ANY DICTIONARY TO GGSYS;
  GRANT SELECT ANY TABLE TO GGSYS;
  GRANT UNLIMITED TABLESPACE TO GGSYS;
  -- 1 Tablespace Quota for GGSYS 
  ALTER USER GGSYS QUOTA UNLIMITED ON SYSAUX;
  -- 57 Object Privileges for GGSYS 
    GRANT SELECT ON GSMADMIN_INTERNAL.BROKER_CONFIGS TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON GSMADMIN_INTERNAL.CATALOG_REQUESTS TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.CAT_SEQUENCE TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON GSMADMIN_INTERNAL.CHUNKS TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON GSMADMIN_INTERNAL.CHUNK_LOC TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.CLOUD TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.CREDENTIAL TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.CREDENTIAL_SEQUENCE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.CS_CHUNK_ID TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON GSMADMIN_INTERNAL.DATABASE TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON GSMADMIN_INTERNAL.DATABASE_POOL TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.DATABASE_POOL_ADMIN TO GGSYS;
    GRANT EXECUTE ON GSMADMIN_INTERNAL.DBMS_GSM_COMMON TO GGSYS;
    GRANT EXECUTE ON GSMADMIN_INTERNAL.DBMS_GSM_DBADMIN TO GGSYS;
    GRANT EXECUTE ON GSMADMIN_INTERNAL.DBMS_GSM_POOLADMIN TO GGSYS;
    GRANT EXECUTE ON GSMADMIN_INTERNAL.DBMS_GSM_UTILITY TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.DDLID$ TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.FAMILY_SEQUENCE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.FILES TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.FILES_SEQUENCE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.GLOBAL_TABLE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.GSM TO GGSYS;
    GRANT EXECUTE ON GSMADMIN_INTERNAL.GSM_CHANGE_MESSAGE TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON GSMADMIN_INTERNAL.GSM_REQUESTS TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.GSM_SEQUENCE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.INSTANCES_NT TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.INT_DBNUM_SEQUENCE TO GGSYS;
    GRANT EXECUTE ON GSMADMIN_INTERNAL.NAME_LIST TO GGSYS;
    GRANT EXECUTE ON GSMADMIN_INTERNAL.NUMBER_LIST TO GGSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON GSMADMIN_INTERNAL.OLD_INSTANCES_NT TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.PARTITION_SET TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON GSMADMIN_INTERNAL.REGION TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.REGION_SEQUENCE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.SERVICE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.SERVICE_PREFERRED_AVAILABLE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.SHARDGROUP_SEQUENCE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.SHARDKEY_COLUMNS TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.SHARDSPACE_SEQUENCE TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON GSMADMIN_INTERNAL.SHARD_GROUP TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON GSMADMIN_INTERNAL.SHARD_SPACE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.SHARD_TS TO GGSYS;
    GRANT DELETE, INSERT, SELECT, UPDATE ON GSMADMIN_INTERNAL.SHSPACE_NT TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.SID_SEQUENCE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.TABLESPACE_SET TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.TABLE_FAMILY TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.TS_SET_TABLE TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.VERIFY_HISTORY TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.VERIFY_RUN_NUMBER TO GGSYS;
    GRANT SELECT ON GSMADMIN_INTERNAL.VNCR TO GGSYS;
    GRANT EXECUTE ON SYS.DBMS_GOLDENGATE_ADM TO GGSYS;
    GRANT EXECUTE ON SYS.DBMS_GSM_FIXED TO GGSYS;
    GRANT EXECUTE ON SYS.DBMS_LOCK TO GGSYS;
    GRANT EXECUTE ON SYS.DBMS_LOGREP_UTIL TO GGSYS;
    GRANT EXECUTE ON SYS.DBMS_NETWORK_ACL_ADMIN TO GGSYS;
    GRANT EXECUTE ON SYS.DBMS_SYS_ERROR TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON SYS.DDL_REQUESTS TO GGSYS;
    GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON SYS.DDL_REQUESTS_PWD TO GGSYS;


CREATE USER GSMCATUSER
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 4 Roles for GSMCATUSER 
  GRANT AQ_ADMINISTRATOR_ROLE TO GSMCATUSER;
  GRANT CONNECT TO GSMCATUSER;
  GRANT GSMADMIN_ROLE TO GSMCATUSER;
  GRANT GSM_POOLADMIN_ROLE TO GSMCATUSER;
  ALTER USER GSMCATUSER DEFAULT ROLE ALL;
  -- 7 Object Privileges for GSMCATUSER 
    GRANT UPDATE ON GSMADMIN_INTERNAL.BROKER_CONFIGS TO GSMCATUSER;
    GRANT UPDATE ON GSMADMIN_INTERNAL.CREDENTIAL TO GSMCATUSER;
    GRANT UPDATE ON GSMADMIN_INTERNAL.DATABASE TO GSMCATUSER;
    GRANT UPDATE ON GSMADMIN_INTERNAL.FILES TO GSMCATUSER;
    GRANT DELETE, INSERT, UPDATE ON GSMADMIN_INTERNAL.INSTANCES_NT TO GSMCATUSER;
    GRANT UPDATE ON GSMADMIN_INTERNAL.SERVICE_PREFERRED_AVAILABLE TO GSMCATUSER;
    GRANT EXECUTE ON SYS.DBMS_AQ TO GSMCATUSER;


CREATE USER LBACSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSTEM
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 2 Roles for LBACSYS 
  GRANT LBAC_DBA TO LBACSYS WITH ADMIN OPTION;
  GRANT RESOURCE TO LBACSYS;
  ALTER USER LBACSYS DEFAULT ROLE ALL;
  -- 3 System Privileges for LBACSYS 
  GRANT ADMINISTER DATABASE TRIGGER TO LBACSYS;
  GRANT CREATE SESSION TO LBACSYS;
  GRANT UNLIMITED TABLESPACE TO LBACSYS;
  -- 14 Object Privileges for LBACSYS 
    GRANT SELECT ON SYS.COL$ TO LBACSYS;
    GRANT SELECT ON SYS.COLTYPE$ TO LBACSYS;
    GRANT SELECT ON SYS.DBA_ROLE_PRIVS TO LBACSYS WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.DBMS_PRIV_CAPTURE TO LBACSYS;
    GRANT EXECUTE ON SYS.DBMS_REGISTRY TO LBACSYS;
    GRANT EXECUTE ON SYS.DBMS_ZHELP TO LBACSYS;
    GRANT SELECT ON SYS.GV_$INSTANCE TO LBACSYS;
    GRANT SELECT ON SYS.GV_$SESSION TO LBACSYS;
    GRANT SELECT ON SYS.OBJ$ TO LBACSYS;
    GRANT EXECUTE ON SYS.OLS_ENFORCEMENT TO LBACSYS;
    GRANT EXECUTE ON SYS.OLS_UTIL_WRAPPER TO LBACSYS;
    GRANT SELECT ON SYS.V_$INSTANCE TO LBACSYS;
    GRANT SELECT ON SYS.V_$SESSION TO LBACSYS;
    GRANT SELECT ON SYS."_BASE_USER" TO LBACSYS;


CREATE USER MDDATA
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 2 Roles for MDDATA 
  GRANT CONNECT TO MDDATA;
  GRANT RESOURCE TO MDDATA;
  ALTER USER MDDATA DEFAULT ROLE ALL;


CREATE USER MDSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 4 Roles for MDSYS 
  GRANT AQ_ADMINISTRATOR_ROLE TO MDSYS;
  GRANT CONNECT TO MDSYS;
  GRANT CTXAPP TO MDSYS;
  GRANT RESOURCE TO MDSYS;
  ALTER USER MDSYS DEFAULT ROLE ALL;
  -- 25 System Privileges for MDSYS 
  GRANT ADMINISTER DATABASE TRIGGER TO MDSYS;
  GRANT ALTER ANY TABLE TO MDSYS;
  GRANT CREATE ANY SEQUENCE TO MDSYS;
  GRANT CREATE ANY TRIGGER TO MDSYS;
  GRANT CREATE INDEXTYPE TO MDSYS;
  GRANT CREATE JOB TO MDSYS;
  GRANT CREATE LIBRARY TO MDSYS;
  GRANT CREATE OPERATOR TO MDSYS;
  GRANT CREATE PROCEDURE TO MDSYS;
  GRANT CREATE PUBLIC SYNONYM TO MDSYS;
  GRANT CREATE SEQUENCE TO MDSYS;
  GRANT CREATE SESSION TO MDSYS;
  GRANT CREATE TABLE TO MDSYS;
  GRANT CREATE TYPE TO MDSYS;
  GRANT CREATE VIEW TO MDSYS;
  GRANT DELETE ANY TABLE TO MDSYS;
  GRANT DROP ANY TRIGGER TO MDSYS;
  GRANT DROP PUBLIC SYNONYM TO MDSYS;
  GRANT EXEMPT ACCESS POLICY TO MDSYS;
  GRANT FLASHBACK ANY TABLE TO MDSYS;
  GRANT INHERIT ANY PRIVILEGES TO MDSYS;
  GRANT MANAGE SCHEDULER TO MDSYS;
  GRANT SELECT ANY TABLE TO MDSYS;
  GRANT UNLIMITED TABLESPACE TO MDSYS;
  GRANT UPDATE ANY TABLE TO MDSYS;
  -- 51 Object Privileges for MDSYS 
    GRANT EXECUTE ON CTXSYS.CTX_CLS TO MDSYS;
    GRANT EXECUTE ON CTXSYS.CTX_DDL TO MDSYS;
    GRANT EXECUTE ON CTXSYS.CTX_DOC TO MDSYS;
    GRANT EXECUTE ON CTXSYS.CTX_OUTPUT TO MDSYS;
    GRANT EXECUTE ON CTXSYS.CTX_QUERY TO MDSYS;
    GRANT EXECUTE ON CTXSYS.CTX_REPORT TO MDSYS;
    GRANT EXECUTE ON CTXSYS.CTX_THES TO MDSYS;
    GRANT EXECUTE ON CTXSYS.CTX_ULEXER TO MDSYS;
    GRANT SELECT ON SYS.ALL_DIRECTORIES TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_INDEXES TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_IND_COLUMNS TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_IND_PARTITIONS TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_OBJECTS TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_POLICIES TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_PROCEDURES TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_TABLES TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_TAB_COLUMNS TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_TAB_PARTITIONS TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_TYPE_ATTRS TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.ALL_USERS TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_ALL_TABLES TO MDSYS;
    GRANT SELECT ON SYS.DBA_CONSTRAINTS TO MDSYS;
    GRANT SELECT ON SYS.DBA_CONS_COLUMNS TO MDSYS;
    GRANT SELECT ON SYS.DBA_INDEXES TO MDSYS;
    GRANT SELECT ON SYS.DBA_IND_COLUMNS TO MDSYS;
    GRANT SELECT ON SYS.DBA_JAVA_CLASSES TO MDSYS;
    GRANT SELECT ON SYS.DBA_OBJECTS TO MDSYS;
    GRANT SELECT ON SYS.DBA_OBJECT_TABLES TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_REGISTRY TO MDSYS;
    GRANT SELECT ON SYS.DBA_ROLE_PRIVS TO MDSYS;
    GRANT SELECT ON SYS.DBA_SEGMENTS TO MDSYS;
    GRANT SELECT ON SYS.DBA_SYNONYMS TO MDSYS;
    GRANT SELECT ON SYS.DBA_TABLES TO MDSYS;
    GRANT SELECT ON SYS.DBA_TABLESPACES TO MDSYS;
    GRANT SELECT ON SYS.DBA_TAB_COLUMNS TO MDSYS;
    GRANT SELECT ON SYS.DBA_TAB_PRIVS TO MDSYS;
    GRANT SELECT ON SYS.DBA_TRIGGERS TO MDSYS;
    GRANT SELECT ON SYS.DBA_TYPES TO MDSYS;
    GRANT SELECT ON SYS.DBA_TYPE_ATTRS TO MDSYS;
    GRANT SELECT ON SYS.DBA_VIEWS TO MDSYS WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_XML_SCHEMAS TO MDSYS;
    GRANT EXECUTE ON SYS.DBMS_AQ TO MDSYS;
    GRANT EXECUTE ON SYS.DBMS_AQADM TO MDSYS;
    GRANT EXECUTE ON SYS.DBMS_FLASHBACK TO MDSYS;
    GRANT EXECUTE ON SYS.DBMS_LOCK TO MDSYS;
    GRANT EXECUTE ON SYS.DBMS_NETWORK_ACL_ADMIN TO MDSYS;
    GRANT EXECUTE ON SYS.DBMS_REGISTRY TO MDSYS;
    GRANT EXECUTE ON SYS.DBMS_RLS TO MDSYS;
    GRANT EXECUTE ON SYS.DBMS_SCHEDULER TO MDSYS;
    GRANT EXECUTE ON SYS.DBMS_SYSTEM TO MDSYS;
    GRANT SELECT ON SYS.KOPM$ TO MDSYS;
  -- 6 Java Privileges for MDSYS 
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'MDSYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'accessClassInPackage.com.sun.media.jai.*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'MDSYS'
    ,permission_type   => 'SYS:java.io.FilePermission'
    ,permission_name   => 'md/jlib/*'
    ,permission_action => 'read'
    ,key               => KEYNUM
    );
  SYS.DBMS_JAVA.DISABLE_PERMISSION
    (key => KEYNUM);
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'MDSYS'
    ,permission_type   => 'SYS:java.io.FilePermission'
    ,permission_name   => 'sdo/demo/georaster/jlibs/*'
    ,permission_action => 'read'
    ,key               => KEYNUM
    );
  SYS.DBMS_JAVA.DISABLE_PERMISSION
    (key => KEYNUM);
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'MDSYS'
    ,permission_type   => 'SYS:java.io.FilePermission'
    ,permission_name   => 'md\jlib\*'
    ,permission_action => 'read'
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'MDSYS'
    ,permission_type   => 'SYS:java.io.FilePermission'
    ,permission_name   => 'sdo\demo\georaster\jlibs\*'
    ,permission_action => 'read'
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'MDSYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'getClassLoader'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/


CREATE USER OJVMSYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSTEM
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Role for OJVMSYS 
  GRANT RESOURCE TO OJVMSYS;
  ALTER USER OJVMSYS DEFAULT ROLE ALL;
  -- 1 System Privilege for OJVMSYS 
  GRANT UNLIMITED TABLESPACE TO OJVMSYS;


CREATE USER OUTLN
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSTEM
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 1 Role for OUTLN 
  GRANT RESOURCE TO OUTLN;
  ALTER USER OUTLN DEFAULT ROLE ALL;
  -- 4 System Privileges for OUTLN 
  GRANT CREATE SESSION TO OUTLN;
  GRANT EXECUTE ANY PROCEDURE TO OUTLN;
  GRANT SET CONTAINER TO OUTLN;
  GRANT UNLIMITED TABLESPACE TO OUTLN;
  -- 1 Object Privilege for OUTLN 
    GRANT EXECUTE ON SYS.OUTLN_PKG TO OUTLN;


CREATE USER SPATIAL_CSW_ADMIN_USR
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 3 Roles for SPATIAL_CSW_ADMIN_USR 
  GRANT CONNECT TO SPATIAL_CSW_ADMIN_USR;
  GRANT RESOURCE TO SPATIAL_CSW_ADMIN_USR;
  GRANT SPATIAL_CSW_ADMIN TO SPATIAL_CSW_ADMIN_USR WITH ADMIN OPTION;
  ALTER USER SPATIAL_CSW_ADMIN_USR DEFAULT ROLE ALL;
  -- 7 System Privileges for SPATIAL_CSW_ADMIN_USR 
  GRANT ALTER ANY ROLE TO SPATIAL_CSW_ADMIN_USR;
  GRANT CREATE ANY DIRECTORY TO SPATIAL_CSW_ADMIN_USR;
  GRANT CREATE LIBRARY TO SPATIAL_CSW_ADMIN_USR;
  GRANT CREATE PROCEDURE TO SPATIAL_CSW_ADMIN_USR;
  GRANT CREATE ROLE TO SPATIAL_CSW_ADMIN_USR;
  GRANT DROP ANY ROLE TO SPATIAL_CSW_ADMIN_USR;
  GRANT GRANT ANY ROLE TO SPATIAL_CSW_ADMIN_USR;
  -- 14 Object Privileges for SPATIAL_CSW_ADMIN_USR 
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_CAPABILITIESINFO$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_DOMAININFO$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_HARVESTMETADATA$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_PLUGIN_MAP$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_RECORDDOMAINUPDATED$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_RECORDTABLEMDUPDATED$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_RECORDTABLEUPDATED$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_RECORDVIEWMAP$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_RECORD_TYPES$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_RTXSDINFO$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.CSW_TRG_TABLE_TEMP$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.RO_TABLE TO SPATIAL_CSW_ADMIN_USR;
    GRANT SELECT ON MDSYS.RT_SQ$ TO SPATIAL_CSW_ADMIN_USR;
    GRANT DELETE, INSERT, SELECT, UPDATE ON MDSYS.USER_SDO_GEOM_METADATA TO SPATIAL_CSW_ADMIN_USR;


CREATE USER XDB
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 4 Roles for XDB 
  GRANT CTXAPP TO XDB;
  GRANT DBFS_ROLE TO XDB;
  GRANT RESOURCE TO XDB;
  GRANT SODA_APP TO XDB WITH ADMIN OPTION;
  ALTER USER XDB DEFAULT ROLE ALL;
  -- 13 System Privileges for XDB 
  GRANT ALTER SESSION TO XDB;
  GRANT CREATE INDEXTYPE TO XDB;
  GRANT CREATE JOB TO XDB;
  GRANT CREATE LIBRARY TO XDB;
  GRANT CREATE OPERATOR TO XDB;
  GRANT CREATE PUBLIC SYNONYM TO XDB;
  GRANT CREATE SESSION TO XDB;
  GRANT CREATE VIEW TO XDB;
  GRANT DROP PUBLIC SYNONYM TO XDB;
  GRANT INHERIT ANY PRIVILEGES TO XDB;
  GRANT QUERY REWRITE TO XDB;
  GRANT SET CONTAINER TO XDB;
  GRANT UNLIMITED TABLESPACE TO XDB;
  -- 469 Object Privileges for XDB 
    GRANT EXECUTE ON CTXSYS.CTX_DDL TO XDB;
    GRANT EXECUTE ON CTXSYS.CTX_OUTPUT TO XDB;
    GRANT EXECUTE ON ORDSYS.ACCESSION_NUMBER_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ACQUISITION_DATETIME_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ACQUISITION_DATE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ACQUISITION_NUMBER_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ACQUISITION_TIME_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ACTION_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.ACTION_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ADMITTING_DIAG_DESC_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.ADMITTING_DIAG_DESC_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.AE_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.AGE_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.ANONYMITY_RULE_DOC_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ANONYM_G_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ANONYM_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ANY_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.APPLICATION_ENTITY_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.AS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.AS_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ATTRIBUTE_TAG_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.ATTR_DEFINERS_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ATTR_DEFINER_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.ATTR_DEFINER_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ATTR_NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.ATTR_RANCE_T_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ATTR_VALUE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.AT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.BITSPERSAMPLE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.BIT_ALLOCATED_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.BIT_STORED_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.BODY_PART_EXAMINED_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.BOOLEAN_FUNC_PRED_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.BYLINE_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.BYLINE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CHARACTER_SET_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.CHARACTER_SET_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CHROMATICITY_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CODE_SEQUENCE_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.CODE_SEQUENCE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CODE_SQ_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CODE_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.COLORSPACE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.COMPRESSION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CONFORMANCE_DEF_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CONTENT_LOC_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.CONTRAST_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CT_OPERAND_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.CUSTOMRENDERED_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DATASET_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DATETIME_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DATE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DATE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DATE_TIME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DA_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DECIMAL_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DICOM_IMAGE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DICOM_PRIVATE_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DICOM_RUNTIME_PREF_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DICOM_STANDARD_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DICOM_UID_DEFINITION_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DOCUMENT_CHANGE_LOG_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DOCUMENT_HEADER_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DOCUMENT_HEADER_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_AE_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_AGE_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_APP_ENTITY_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_AS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_AS_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ATTRIBUTE_TAG_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ATTR_DEFINERS_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ATTR_DEFINER_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ATTR_DEFINER_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ATTR_NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ATTR_RANCE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ATTR_VALUE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_AT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_CODE_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_CS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DATASET_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DATE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DATE_TIME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DA_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DECIMAL_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DOCUMENT_HEADER_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DOCUMENT_HEADER_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DOC_CHANGE_LOG_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_DT_NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_EXCEPTION_TYPE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_EXP_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_EXTENDED_TYPE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_EXT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_EXT_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_FD_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_FLOAT_DOUBLE_STR_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_FLOAT_SINGLE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_FL_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_INTEGER_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_IS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ITEM_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_LONG_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_LONG_TEXT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_LO_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_LT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_MIXED_TEXT_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_NAME_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_OB_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_OF_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_OTHER_BYTE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_OTHER_FLOAT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_OTHER_WORD_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_OW_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_OW_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_PERSON_NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_PN_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_PN_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_SHORT_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_SHORT_TEXT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_SH_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_SIGNED_LONG_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_SIGNED_SHORT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_SL_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_SQ_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_SQ_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_SS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_ST_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_TIME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_TM_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UI_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UL_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UNIQUE_ID_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UNKNOWN_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UNLIMITED_TEXT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UNSIGNED_LONG_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UNSIGNED_SHORT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UN_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UN_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_US_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.DT_UT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.EXCEPTION_TYPE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.EXIFIFD_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.EXIF_METADATA_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.EXPOSUREMODE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.EXPOSUREPROGRAM_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.EXP_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.EXTENDED_TYPE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.EXT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.EXT_MACRO_INCLUDE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.EXT_MACRO_INCLUDE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.EXT_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.EXT_RULE_INCLUDE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.EXT_RULE_INCLUDE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.FD_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.FIELD_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.FILESOURCE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.FILE_META_HEADER_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.FLASH_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.FLOAT_DOUBLE_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.FLOAT_SINGLE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.FL_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.FRAME_LATERALITY_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.FUNCTION_ATTR_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.FUNCTION_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.FUNCTION_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GAINCONTROL_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GENERAL_EQUIPMENT_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GENERAL_IMAGE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GENERAL_SERIES_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GENERAL_STUDY_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GLOBAL_MACRO_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.GPSIFD_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_ALT_REF_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_BEARING_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_DIFFERENTIAL_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_DIRECTION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_DIST_REF_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_LAT_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_LAT_REF_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_LONG_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_LONG_REF_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_MEASUREMODE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_SPEED_REF_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.GPS_STATUS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.HIGH_BIT_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.IMAGEATTRIBUTES_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.IMAGE_COLUMNS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.IMAGE_PIXEL_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.IMAGE_ROWS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.IMPLEMENTATION_CLASS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.IMPLEMENTATION_VER_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.INDIVIDUAL_ATTRIBUTE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.INDIVIDUAL_ATTR_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.INSTANCE_NUMBER_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.INTEGER_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.INTEROPERABILITYIFD_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.INTEROPERABILITY_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.IPTC_METADATA_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.IS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ITEM_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.LIGHTSOURCE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.LOCATION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.LOGICAL_PREDICATE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.LONG_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.LONG_TEXT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.LO_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.LT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MACRO_NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MACRO_USE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MANUFACTURER_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MAPPED_PATH_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MAPPED_PATH_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_AE_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_AGE_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_APP_ENTITY_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_AS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_AS_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_ATTRIBUTE_TAG_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_ATTR_DEFINERS_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_ATTR_DEFINER_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_ATTR_DEFINER_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_ATTR_NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_ATTR_RANGE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_ATTR_VALUE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_AT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_CODE_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_CS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DATASET_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DATE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DATE_TIME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DA_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DECIMAL_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DOCUMENT_HEADER_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DOC_CHANGE_LOG_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DOC_HEADER_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_DT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_EXCEPTION_TYPE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_EXP_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_EXTENDED_TYPE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_EXT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_EXT_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_FD_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_FLOAT_DOUBLE_STR_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_FLOAT_SINGLE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_FL_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_INTEGER_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_IS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_ITEM_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_LONG_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_LONG_TEXT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_LO_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_LT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_MIXED_TEXT_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_NAME_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_OB_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_OF_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_OTHER_BYTE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_OTHER_FLOAT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_OTHER_WORD_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_OW_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_OW_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_PERSON_NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_PN_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_PN_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_SHORT_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_SHORT_TEXT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_SH_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_SIGNED_LONG_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_SIGNED_SHORT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_SL_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_SQ_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_SQ_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_SS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_ST_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_TIME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_TM_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UI_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UL_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UNIQUE_ID_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UNKNOWN_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UNLIMITED_TEXT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UNSIGNED_LONG_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UNSIGNED_SHORT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UN_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UN_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_US_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MD_UT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MEDIASTORAGE_CLASS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MEDIASTORAGE_INSTAN_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.METERINGMODE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MIXED_TEXT_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.MODALITY_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.NAME_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.NONNEGATIVEINTEGER_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.NONNEGATIVEREAL_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.OB_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.OF_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ORD_DICOM_HEADER_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ORIENTATION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.OTHER_BYTE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.OTHER_FLOAT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.OTHER_WORD_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.OW_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.OW_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PARAMETER_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.PARAMETER_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PATIENT_BIRTH_DATE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PATIENT_ID_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PATIENT_NAME_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PATIENT_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PATIENT_ORIENTATION_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.PATIENT_ORIENTATION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PATIENT_POSITION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PATIENT_SEX_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PATIENT_STUDY_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PERFORMED_PROC_ID_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PERFORMING_PHYSICIAN_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.PERFORMING_PHYSICIAN_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PERF_PROC_DESC_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PERF_PROC_STARTDATE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PERF_PROC_STARTTIME_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PERSON_NAME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.PHOTOMETRICINTERP_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PHOTOMETRIC_INTERP_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PIXEL_ASPECT_RATIO_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.PIXEL_ASPECT_RATIO_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PIXEL_REPRESENTATION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PLANARCONFIG_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PLANAR_CONFIGURATION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PN_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PN_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.POSITIVEINTEGER_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PREDICATES_DEF_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.PREDICATE_GROUP_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PREDICATE_MACRO_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PREDICATE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.PREDICATE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PREFERENCE_DEF_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.PREFERENCE_DEF_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PRIM_CHROMATICITIES_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.PRIVATE_ATTR_DEF_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.REAL_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.REFERING_PHYSICIANS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.RELATIONAL_PREDICATE_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.REPEATEDFIELD_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.RESOLUTION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.RIVATE_ATTR_DEF_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.SAMPLES_PER_PIXEL_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SATURATION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SCENECAPTURE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SENSINGMETHOD_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SERIES_DATE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SERIES_INSTANCE_UID_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SERIES_TIME_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SHARPNESS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SHORT_STRING_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.SHORT_TEXT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.SH_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SIGNED_LONG_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.SIGNED_SHORT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.SINGLEFIELDT_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SINGLEFIELD_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SL_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SOP_CLASS_UID_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SOP_COMMON_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SOP_INSTANCE_UID_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SQ_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SQ_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SRC_APP_ENTITY_TITLE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SS_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STANDARD_ATTR_DEF_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.STANDARD_ATTR_DEF_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STRING_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STRING_VALUE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.STRIPBYTECOUNTS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STRIPBYTECOUNT_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.STRIPBYTECOUNT_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STRIPOFFSETS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STRIPOFFSET_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.STRIPOFFSET_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STUDY_DATE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STUDY_DESCRIPTION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STUDY_ID_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STUDY_INSTANCE_UID_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.STUDY_TIME_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.ST_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SUBJECTAREA_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SUBJECTDISTANCERANGE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SUBJECTLOCATION_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.SUPP_CAT_ORD_IMG_C TO XDB;
    GRANT EXECUTE ON ORDSYS.TIFFIFD_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.TIME_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.TIME_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.TM_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.TRANSFER_SYNTAX_UID_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.UID_DEF_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.UID_DEF_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.UID_ENTRY_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.UI_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.UL_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.UNIQUE_ID_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.UNKNOWN_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.UNLIMITED_TEXT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.UNSIGNED_LONG_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.UNSIGNED_SHORT_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.UN_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.UN_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.US_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.UT_ATTR_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.UUID_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.WHITEBALANCE_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.WHITEPOINT_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.XML_MAPPING_DOCUMENT_ORD_DCM_T TO XDB;
    GRANT EXECUTE ON ORDSYS.XML_VALUE_ORD_DCM_C TO XDB;
    GRANT EXECUTE ON ORDSYS.XMP_METADATA_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.YCBCRCOEFFICIENTS_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.YCBCRPOSITIONING_ORD_IMG_T TO XDB;
    GRANT EXECUTE ON ORDSYS.YCBCRSUBSAMPLING_ORD_IMG_T TO XDB;
    GRANT SELECT ON SYS.ALL_USERS TO XDB;
    GRANT SELECT ON SYS.ATTRCOL$ TO XDB;
    GRANT EXECUTE ON SYS.CHECK_UPGRADE TO XDB;
    GRANT SELECT ON SYS.COL$ TO XDB;
    GRANT SELECT ON SYS.COLTYPE$ TO XDB;
    GRANT SELECT ON SYS.DBA_XML_SCHEMAS TO XDB;
    GRANT EXECUTE ON SYS.DBMS_DBFS_CONTENT TO XDB;
    GRANT EXECUTE ON SYS.DBMS_DBFS_CONTENT_LIST_ITEMS_T TO XDB;
    GRANT EXECUTE ON SYS.DBMS_DBFS_CONTENT_LIST_ITEM_T TO XDB;
    GRANT EXECUTE ON SYS.DBMS_DBFS_CONTENT_PROPERTIES_T TO XDB;
    GRANT EXECUTE ON SYS.DBMS_JSON0 TO XDB;
    GRANT EXECUTE ON SYS.DBMS_PDB_EXEC_SQL TO XDB;
    GRANT EXECUTE ON SYS.DBMS_PRIV_CAPTURE TO XDB;
    GRANT EXECUTE ON SYS.DBMS_REGISTRY TO XDB;
    GRANT EXECUTE ON SYS.DBMS_RLS TO XDB;
    GRANT EXECUTE ON SYS.DBMS_SODA_UTIL TO XDB;
    GRANT EXECUTE ON SYS.DBMS_STREAMS_CONTROL_ADM TO XDB;
    GRANT EXECUTE ON SYS.DBMS_XDB_UTIL TO XDB;
    GRANT EXECUTE ON SYS.DDL_LCR_T TO XDB;
    GRANT EXECUTE ON SYS.LCR_ANYDATA_T TO XDB;
    GRANT EXECUTE ON SYS.LCR_COLUMN_VALUE_T TO XDB;
    GRANT EXECUTE ON SYS.LCR_DATETIME_FORMAT_T TO XDB;
    GRANT EXECUTE ON SYS.LCR_EXTRA_ATTRIBUTE_T TO XDB;
    GRANT EXECUTE ON SYS.LCR_EXTRA_ATTRIBUTE_VALUES_T TO XDB;
    GRANT EXECUTE ON SYS.LCR_EXTRA_ATTRIBUTE_VALUE_T TO XDB;
    GRANT EXECUTE ON SYS.LCR_NEW_VALUES_T TO XDB;
    GRANT EXECUTE ON SYS.LCR_OLD_NEW_VALUE_T TO XDB;
    GRANT EXECUTE ON SYS.LCR_OLD_VALUES_T TO XDB;
    GRANT SELECT ON SYS.NTAB$ TO XDB;
    GRANT SELECT ON SYS.OBJ$ TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SCT_DDRM_T TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SCT_SENSITIVE_TYPE_T TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SCT_SENSITIVE_TYPE_V TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SD_APPLICATION_T TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SD_APPLICATION_V TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SD_DDRM_T TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SD_SENSITIVE_INFO_OTV TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SD_SENSITIVE_INFO_T TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SD_SENSITIVE_INFO_V TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SD_SENSITIVE_TYPE_T TO XDB;
    GRANT EXECUTE ON SYS.ORATSDP_SD_SENSITIVE_TYPE_V TO XDB;
    GRANT SELECT ON SYS.PDB_INV_TYPE$ TO XDB;
    GRANT EXECUTE ON SYS.ROW_LCR_T TO XDB;
    GRANT INHERIT PRIVILEGES ON USER SYS TO XDB;


CREATE ROLE DATAPUMP_EXP_FULL_DATABASE NOT IDENTIFIED;

-- System privileges granted to DATAPUMP_EXP_FULL_DATABASE
GRANT CREATE SESSION TO DATAPUMP_EXP_FULL_DATABASE;
GRANT CREATE TABLE TO DATAPUMP_EXP_FULL_DATABASE;

-- Roles granted to DATAPUMP_EXP_FULL_DATABASE
GRANT EXP_FULL_DATABASE TO DATAPUMP_EXP_FULL_DATABASE;



CREATE ROLE DATAPUMP_IMP_FULL_DATABASE NOT IDENTIFIED;

-- System privileges granted to DATAPUMP_IMP_FULL_DATABASE
GRANT ALTER DATABASE TO DATAPUMP_IMP_FULL_DATABASE;
GRANT ALTER PROFILE TO DATAPUMP_IMP_FULL_DATABASE;
GRANT ALTER RESOURCE COST TO DATAPUMP_IMP_FULL_DATABASE;
GRANT ALTER USER TO DATAPUMP_IMP_FULL_DATABASE;
GRANT AUDIT ANY TO DATAPUMP_IMP_FULL_DATABASE;
GRANT AUDIT SYSTEM TO DATAPUMP_IMP_FULL_DATABASE;
GRANT CREATE PROFILE TO DATAPUMP_IMP_FULL_DATABASE;
GRANT CREATE SESSION TO DATAPUMP_IMP_FULL_DATABASE;
GRANT DELETE ANY TABLE TO DATAPUMP_IMP_FULL_DATABASE;
GRANT EXECUTE ANY OPERATOR TO DATAPUMP_IMP_FULL_DATABASE;
GRANT GRANT ANY OBJECT PRIVILEGE TO DATAPUMP_IMP_FULL_DATABASE;
GRANT GRANT ANY PRIVILEGE TO DATAPUMP_IMP_FULL_DATABASE;
GRANT GRANT ANY ROLE TO DATAPUMP_IMP_FULL_DATABASE;
GRANT SELECT ANY TABLE TO DATAPUMP_IMP_FULL_DATABASE;

-- Roles granted to DATAPUMP_IMP_FULL_DATABASE
GRANT EXP_FULL_DATABASE TO DATAPUMP_IMP_FULL_DATABASE;
GRANT IMP_FULL_DATABASE TO DATAPUMP_IMP_FULL_DATABASE;



CREATE ROLE EM_EXPRESS_ALL NOT IDENTIFIED;

-- System privileges granted to EM_EXPRESS_ALL
GRANT ADMINISTER ANY SQL TUNING SET TO EM_EXPRESS_ALL;
BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'EM_EXPRESS_ALL', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => FALSE);
END;
/
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO EM_EXPRESS_ALL;
GRANT ADMINISTER SQL TUNING SET TO EM_EXPRESS_ALL;
GRANT ADVISOR TO EM_EXPRESS_ALL;
GRANT ALTER ANY ROLE TO EM_EXPRESS_ALL;
GRANT ALTER PROFILE TO EM_EXPRESS_ALL;
GRANT ALTER SYSTEM TO EM_EXPRESS_ALL;
GRANT ALTER TABLESPACE TO EM_EXPRESS_ALL;
GRANT ALTER USER TO EM_EXPRESS_ALL;
GRANT CREATE JOB TO EM_EXPRESS_ALL;
GRANT CREATE PROFILE TO EM_EXPRESS_ALL;
GRANT CREATE ROLE TO EM_EXPRESS_ALL;
GRANT CREATE TABLESPACE TO EM_EXPRESS_ALL;
GRANT CREATE USER TO EM_EXPRESS_ALL;
GRANT DROP ANY ROLE TO EM_EXPRESS_ALL;
GRANT DROP PROFILE TO EM_EXPRESS_ALL;
GRANT DROP TABLESPACE TO EM_EXPRESS_ALL;
GRANT DROP USER TO EM_EXPRESS_ALL;
GRANT GRANT ANY OBJECT PRIVILEGE TO EM_EXPRESS_ALL;
GRANT GRANT ANY PRIVILEGE TO EM_EXPRESS_ALL;
GRANT GRANT ANY ROLE TO EM_EXPRESS_ALL;
GRANT SET CONTAINER TO EM_EXPRESS_ALL;

-- Roles granted to EM_EXPRESS_ALL
GRANT EM_EXPRESS_BASIC TO EM_EXPRESS_ALL;



CREATE ROLE LOGSTDBY_ADMINISTRATOR NOT IDENTIFIED;

-- Roles granted to LOGSTDBY_ADMINISTRATOR
GRANT RESOURCE TO LOGSTDBY_ADMINISTRATOR;



CREATE USER GSMADMIN_INTERNAL
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSAUX
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  PASSWORD EXPIRE
  ACCOUNT LOCK;
  -- 2 Roles for GSMADMIN_INTERNAL 
  GRANT DATAPUMP_EXP_FULL_DATABASE TO GSMADMIN_INTERNAL;
  GRANT DATAPUMP_IMP_FULL_DATABASE TO GSMADMIN_INTERNAL;
  ALTER USER GSMADMIN_INTERNAL DEFAULT ROLE ALL;
  -- 25 System Privileges for GSMADMIN_INTERNAL 
  GRANT ALTER ANY INDEX TO GSMADMIN_INTERNAL;
  GRANT ALTER ANY TABLE TO GSMADMIN_INTERNAL;
  GRANT ALTER SESSION TO GSMADMIN_INTERNAL;
  GRANT ALTER SYSTEM TO GSMADMIN_INTERNAL;
  GRANT ALTER TABLESPACE TO GSMADMIN_INTERNAL;
  GRANT ALTER USER TO GSMADMIN_INTERNAL;
  GRANT CREATE ANY CREDENTIAL TO GSMADMIN_INTERNAL;
  GRANT CREATE ANY JOB TO GSMADMIN_INTERNAL;
  GRANT CREATE ANY TABLE TO GSMADMIN_INTERNAL;
  GRANT CREATE DATABASE LINK TO GSMADMIN_INTERNAL;
  GRANT CREATE EXTERNAL JOB TO GSMADMIN_INTERNAL;
  GRANT CREATE JOB TO GSMADMIN_INTERNAL;
  GRANT CREATE LIBRARY TO GSMADMIN_INTERNAL;
  GRANT CREATE SEQUENCE TO GSMADMIN_INTERNAL;
  GRANT CREATE TABLESPACE TO GSMADMIN_INTERNAL;
  GRANT DROP TABLESPACE TO GSMADMIN_INTERNAL;
  GRANT GRANT ANY PRIVILEGE TO GSMADMIN_INTERNAL;
  GRANT GRANT ANY ROLE TO GSMADMIN_INTERNAL;
  GRANT INHERIT ANY PRIVILEGES TO GSMADMIN_INTERNAL;
  GRANT LOCK ANY TABLE TO GSMADMIN_INTERNAL;
  GRANT MANAGE SCHEDULER TO GSMADMIN_INTERNAL;
  GRANT SELECT ANY DICTIONARY TO GSMADMIN_INTERNAL;
  GRANT SELECT ANY TABLE TO GSMADMIN_INTERNAL;
  GRANT SET CONTAINER TO GSMADMIN_INTERNAL;
  GRANT UNLIMITED TABLESPACE TO GSMADMIN_INTERNAL;
  -- 1 Tablespace Quota for GSMADMIN_INTERNAL 
  ALTER USER GSMADMIN_INTERNAL QUOTA UNLIMITED ON SYSAUX;
  -- 59 Object Privileges for GSMADMIN_INTERNAL 
    GRANT SELECT ON SYS.AQ$_UNFLUSHED_DEQUEUES TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.CDB_SERVICES TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.COL$ TO GSMADMIN_INTERNAL WITH GRANT OPTION;
    GRANT SELECT ON SYS.DBA_CONSTRAINTS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_CREDENTIALS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_INDEXES TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_IND_PARTITIONS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_IND_SUBPARTITIONS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_NETWORK_ACLS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_PART_INDEXES TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_PART_TABLES TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_ROLE_PRIVS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_SCHEDULER_EXTERNAL_DESTS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_SCHEDULER_JOB_RUN_DETAILS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_SERVICES TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_TABLESPACES TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_TAB_COLUMNS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_TAB_PARTITIONS TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBA_TAB_SUBPARTITIONS TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_AQ TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_AQADM TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_AQ_BQVIEW TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_GSM_FIXED TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_ISCHED TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_LOCK TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.DBMS_LOCK_ALLOCATED TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_NETWORK_ACL_ADMIN TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_RLS TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_SERVER_ALERT TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_SERVICE TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_SERVICE_PRVT TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_SHARED_POOL TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_SYSTEM TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_SYS_ERROR TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_SYS_SQL TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.DBMS_UTILITY TO GSMADMIN_INTERNAL;
    GRANT DELETE, INSERT, SELECT, UPDATE ON SYS.DDL_REQUESTS TO GSMADMIN_INTERNAL;
    GRANT DELETE, INSERT, SELECT, UPDATE ON SYS.DDL_REQUESTS_PWD TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.EXECASUSER TO GSMADMIN_INTERNAL;
    GRANT INHERIT PRIVILEGES ON USER GSMCATUSER TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.GV_$ACTIVE_SERVICES TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.GV_$DATABASE TO GSMADMIN_INTERNAL;
    GRANT READ ON SYS.GV_$GCSPFMASTER_INFO TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.GV_$INSTANCE TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.GV_$LOCK TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.GV_$SESSION TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.OBJ$ TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.PARTCOL$ TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.QT20270_BUFFER TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.TABPART$ TO GSMADMIN_INTERNAL;
    GRANT EXECUTE ON SYS.UTL_RAW TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.V_$DG_BROKER_CONFIG TO GSMADMIN_INTERNAL WITH GRANT OPTION;
    GRANT SELECT ON SYS.V_$DISPATCHER_CONFIG TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.V_$INSTANCE TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.V_$PARAMETER TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.V_$PARAMETER2 TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.V_$RESTORE_POINT TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.V_$SESSION TO GSMADMIN_INTERNAL;
    GRANT SELECT ON SYS.V_$VERSION TO GSMADMIN_INTERNAL;


CREATE ROLE DBA NOT IDENTIFIED;

-- System privileges granted to DBA
GRANT ADMINISTER ANY SQL TUNING SET TO DBA;
GRANT ADMINISTER DATABASE TRIGGER TO DBA;
BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'DBA', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => FALSE);
END;
/
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO DBA;
GRANT ADMINISTER SQL TUNING SET TO DBA;
GRANT ADVISOR TO DBA;
GRANT ALTER ANY ANALYTIC VIEW TO DBA;
GRANT ALTER ANY ASSEMBLY TO DBA;
GRANT ALTER ANY ATTRIBUTE DIMENSION TO DBA;
GRANT ALTER ANY CLUSTER TO DBA;
GRANT ALTER ANY CUBE TO DBA;
GRANT ALTER ANY CUBE BUILD PROCESS TO DBA;
GRANT ALTER ANY CUBE DIMENSION TO DBA;
GRANT ALTER ANY DIMENSION TO DBA;
GRANT ALTER ANY EDITION TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT ALTER ANY HIERARCHY TO DBA;
GRANT ALTER ANY INDEX TO DBA;
GRANT ALTER ANY INDEXTYPE TO DBA;
GRANT ALTER ANY LIBRARY TO DBA;
GRANT ALTER ANY MATERIALIZED VIEW TO DBA;
GRANT ALTER ANY MEASURE FOLDER TO DBA;
GRANT ALTER ANY MINING MODEL TO DBA;
GRANT ALTER ANY OPERATOR TO DBA;
GRANT ALTER ANY OUTLINE TO DBA;
GRANT ALTER ANY PROCEDURE TO DBA;
GRANT ALTER ANY ROLE TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT ALTER ANY SEQUENCE TO DBA;
GRANT ALTER ANY SQL PROFILE TO DBA;
GRANT ALTER ANY SQL TRANSLATION PROFILE TO DBA;
GRANT ALTER ANY TABLE TO DBA;
GRANT ALTER ANY TRIGGER TO DBA;
GRANT ALTER ANY TYPE TO DBA;
GRANT ALTER DATABASE TO DBA;
GRANT ALTER LOCKDOWN PROFILE TO DBA;
GRANT ALTER PROFILE TO DBA;
GRANT ALTER RESOURCE COST TO DBA;
GRANT ALTER ROLLBACK SEGMENT TO DBA;
GRANT ALTER SESSION TO DBA;
GRANT ALTER SYSTEM TO DBA;
GRANT ALTER TABLESPACE TO DBA;
GRANT ALTER USER TO DBA;
GRANT ANALYZE ANY TO DBA;
GRANT ANALYZE ANY DICTIONARY TO DBA;
GRANT AUDIT ANY TO DBA;
GRANT AUDIT SYSTEM TO DBA;
GRANT BACKUP ANY TABLE TO DBA;
GRANT BECOME USER TO DBA;
GRANT CHANGE NOTIFICATION TO DBA;
GRANT COMMENT ANY MINING MODEL TO DBA;
GRANT COMMENT ANY TABLE TO DBA;
GRANT CREATE ANALYTIC VIEW TO DBA;
GRANT CREATE ANY ANALYTIC VIEW TO DBA;
GRANT CREATE ANY ASSEMBLY TO DBA;
GRANT CREATE ANY ATTRIBUTE DIMENSION TO DBA;
GRANT CREATE ANY CLUSTER TO DBA;
GRANT CREATE ANY CONTEXT TO DBA;
GRANT CREATE ANY CREDENTIAL TO DBA;
GRANT CREATE ANY CUBE TO DBA;
GRANT CREATE ANY CUBE BUILD PROCESS TO DBA;
GRANT CREATE ANY CUBE DIMENSION TO DBA;
GRANT CREATE ANY DIMENSION TO DBA;
GRANT CREATE ANY DIRECTORY TO DBA;
GRANT CREATE ANY EDITION TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT CREATE ANY HIERARCHY TO DBA;
GRANT CREATE ANY INDEX TO DBA;
GRANT CREATE ANY INDEXTYPE TO DBA;
GRANT CREATE ANY JOB TO DBA;
GRANT CREATE ANY LIBRARY TO DBA;
GRANT CREATE ANY MATERIALIZED VIEW TO DBA;
GRANT CREATE ANY MEASURE FOLDER TO DBA;
GRANT CREATE ANY MINING MODEL TO DBA;
GRANT CREATE ANY OPERATOR TO DBA;
GRANT CREATE ANY OUTLINE TO DBA;
GRANT CREATE ANY PROCEDURE TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT CREATE ANY SEQUENCE TO DBA;
GRANT CREATE ANY SQL PROFILE TO DBA;
GRANT CREATE ANY SQL TRANSLATION PROFILE TO DBA;
GRANT CREATE ANY SYNONYM TO DBA;
GRANT CREATE ANY TABLE TO DBA;
GRANT CREATE ANY TRIGGER TO DBA;
GRANT CREATE ANY TYPE TO DBA;
GRANT CREATE ANY VIEW TO DBA;
GRANT CREATE ASSEMBLY TO DBA;
GRANT CREATE ATTRIBUTE DIMENSION TO DBA;
GRANT CREATE CLUSTER TO DBA;
GRANT CREATE CREDENTIAL TO DBA;
GRANT CREATE CUBE TO DBA;
GRANT CREATE CUBE BUILD PROCESS TO DBA;
GRANT CREATE CUBE DIMENSION TO DBA;
GRANT CREATE DATABASE LINK TO DBA;
GRANT CREATE DIMENSION TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_EVALUATION_CONTEXT_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT CREATE EXTERNAL JOB TO DBA;
GRANT CREATE HIERARCHY TO DBA;
GRANT CREATE INDEXTYPE TO DBA;
GRANT CREATE JOB TO DBA;
GRANT CREATE LIBRARY TO DBA;
GRANT CREATE LOCKDOWN PROFILE TO DBA;
GRANT CREATE MATERIALIZED VIEW TO DBA;
GRANT CREATE MEASURE FOLDER TO DBA;
GRANT CREATE MINING MODEL TO DBA;
GRANT CREATE OPERATOR TO DBA;
GRANT CREATE PLUGGABLE DATABASE TO DBA;
GRANT CREATE PROCEDURE TO DBA;
GRANT CREATE PROFILE TO DBA;
GRANT CREATE PUBLIC DATABASE LINK TO DBA;
GRANT CREATE PUBLIC SYNONYM TO DBA;
GRANT CREATE ROLE TO DBA;
GRANT CREATE ROLLBACK SEGMENT TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_SET_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT CREATE SEQUENCE TO DBA;
GRANT CREATE SESSION TO DBA;
GRANT CREATE SQL TRANSLATION PROFILE TO DBA;
GRANT CREATE SYNONYM TO DBA;
GRANT CREATE TABLE TO DBA;
GRANT CREATE TABLESPACE TO DBA;
GRANT CREATE TRIGGER TO DBA;
GRANT CREATE TYPE TO DBA;
GRANT CREATE USER TO DBA;
GRANT CREATE VIEW TO DBA;
GRANT DEBUG ANY PROCEDURE TO DBA;
GRANT DEBUG CONNECT SESSION TO DBA;
GRANT DELETE ANY CUBE DIMENSION TO DBA;
GRANT DELETE ANY MEASURE FOLDER TO DBA;
GRANT DELETE ANY TABLE TO DBA;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'DEQUEUE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => FALSE);
END;
/
GRANT DROP ANY ANALYTIC VIEW TO DBA;
GRANT DROP ANY ASSEMBLY TO DBA;
GRANT DROP ANY ATTRIBUTE DIMENSION TO DBA;
GRANT DROP ANY CLUSTER TO DBA;
GRANT DROP ANY CONTEXT TO DBA;
GRANT DROP ANY CUBE TO DBA;
GRANT DROP ANY CUBE BUILD PROCESS TO DBA;
GRANT DROP ANY CUBE DIMENSION TO DBA;
GRANT DROP ANY DIMENSION TO DBA;
GRANT DROP ANY DIRECTORY TO DBA;
GRANT DROP ANY EDITION TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT DROP ANY HIERARCHY TO DBA;
GRANT DROP ANY INDEX TO DBA;
GRANT DROP ANY INDEXTYPE TO DBA;
GRANT DROP ANY LIBRARY TO DBA;
GRANT DROP ANY MATERIALIZED VIEW TO DBA;
GRANT DROP ANY MEASURE FOLDER TO DBA;
GRANT DROP ANY MINING MODEL TO DBA;
GRANT DROP ANY OPERATOR TO DBA;
GRANT DROP ANY OUTLINE TO DBA;
GRANT DROP ANY PROCEDURE TO DBA;
GRANT DROP ANY ROLE TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT DROP ANY SEQUENCE TO DBA;
GRANT DROP ANY SQL PROFILE TO DBA;
GRANT DROP ANY SQL TRANSLATION PROFILE TO DBA;
GRANT DROP ANY SYNONYM TO DBA;
GRANT DROP ANY TABLE TO DBA;
GRANT DROP ANY TRIGGER TO DBA;
GRANT DROP ANY TYPE TO DBA;
GRANT DROP ANY VIEW TO DBA;
GRANT DROP LOCKDOWN PROFILE TO DBA;
GRANT DROP PROFILE TO DBA;
GRANT DROP PUBLIC DATABASE LINK TO DBA;
GRANT DROP PUBLIC SYNONYM TO DBA;
GRANT DROP ROLLBACK SEGMENT TO DBA;
GRANT DROP TABLESPACE TO DBA;
GRANT DROP USER TO DBA;
GRANT EM EXPRESS CONNECT TO DBA;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'ENQUEUE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => FALSE);
END;
/
GRANT EXECUTE ANY ASSEMBLY TO DBA;
GRANT EXECUTE ANY CLASS TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT EXECUTE ANY INDEXTYPE TO DBA;
GRANT EXECUTE ANY LIBRARY TO DBA;
GRANT EXECUTE ANY OPERATOR TO DBA;
GRANT EXECUTE ANY PROCEDURE TO DBA;
GRANT EXECUTE ANY PROGRAM TO DBA;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => FALSE);
END;
/
GRANT EXECUTE ANY TYPE TO DBA;
GRANT EXECUTE ASSEMBLY TO DBA;
GRANT EXEMPT DDL REDACTION POLICY TO DBA;
GRANT EXEMPT DML REDACTION POLICY TO DBA;
GRANT EXPORT FULL DATABASE TO DBA;
GRANT FLASHBACK ANY TABLE TO DBA;
GRANT FLASHBACK ARCHIVE ADMINISTER TO DBA;
GRANT FORCE ANY TRANSACTION TO DBA;
GRANT FORCE TRANSACTION TO DBA;
GRANT GLOBAL QUERY REWRITE TO DBA;
GRANT GRANT ANY OBJECT PRIVILEGE TO DBA;
GRANT GRANT ANY PRIVILEGE TO DBA;
GRANT GRANT ANY ROLE TO DBA;
GRANT IMPORT FULL DATABASE TO DBA;
GRANT INSERT ANY CUBE DIMENSION TO DBA;
GRANT INSERT ANY MEASURE FOLDER TO DBA;
GRANT INSERT ANY TABLE TO DBA;
GRANT LOCK ANY TABLE TO DBA;
GRANT LOGMINING TO DBA;
GRANT MANAGE ANY FILE GROUP TO DBA;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => FALSE);
END;
/
GRANT MANAGE FILE GROUP TO DBA;
GRANT MANAGE SCHEDULER TO DBA;
GRANT MANAGE TABLESPACE TO DBA;
GRANT MERGE ANY VIEW TO DBA;
GRANT ON COMMIT REFRESH TO DBA;
GRANT QUERY REWRITE TO DBA;
GRANT READ ANY FILE GROUP TO DBA;
GRANT READ ANY TABLE TO DBA;
GRANT REDEFINE ANY TABLE TO DBA;
GRANT RESTRICTED SESSION TO DBA;
GRANT RESUMABLE TO DBA;
GRANT SELECT ANY CUBE TO DBA;
GRANT SELECT ANY CUBE BUILD PROCESS TO DBA;
GRANT SELECT ANY CUBE DIMENSION TO DBA;
GRANT SELECT ANY DICTIONARY TO DBA;
GRANT SELECT ANY MEASURE FOLDER TO DBA;
GRANT SELECT ANY MINING MODEL TO DBA;
GRANT SELECT ANY SEQUENCE TO DBA;
GRANT SELECT ANY TABLE TO DBA;
GRANT SELECT ANY TRANSACTION TO DBA;
GRANT SET CONTAINER TO DBA;
GRANT UNDER ANY TABLE TO DBA;
GRANT UNDER ANY TYPE TO DBA;
GRANT UNDER ANY VIEW TO DBA;
GRANT UPDATE ANY CUBE TO DBA;
GRANT UPDATE ANY CUBE BUILD PROCESS TO DBA;
GRANT UPDATE ANY CUBE DIMENSION TO DBA;
GRANT UPDATE ANY TABLE TO DBA;
GRANT USE ANY JOB RESOURCE TO DBA;
GRANT USE ANY SQL TRANSLATION PROFILE TO DBA;

-- Roles granted to DBA
GRANT CAPTURE_ADMIN TO DBA;
GRANT DATAPUMP_EXP_FULL_DATABASE TO DBA;
GRANT DATAPUMP_IMP_FULL_DATABASE TO DBA;
GRANT EM_EXPRESS_ALL TO DBA;
GRANT EXECUTE_CATALOG_ROLE TO DBA;
GRANT EXP_FULL_DATABASE TO DBA;
GRANT GATHER_SYSTEM_STATISTICS TO DBA;
GRANT IMP_FULL_DATABASE TO DBA;
GRANT JAVA_ADMIN TO DBA;
GRANT JAVA_DEPLOY TO DBA;
GRANT OLAP_DBA TO DBA;
GRANT OLAP_XS_ADMIN TO DBA;
GRANT OPTIMIZER_PROCESSING_RATE TO DBA;
GRANT SCHEDULER_ADMIN TO DBA;
GRANT SELECT_CATALOG_ROLE TO DBA;
GRANT WM_ADMIN_ROLE TO DBA;
GRANT XDBADMIN TO DBA;
GRANT XDB_SET_INVOKER TO DBA;



CREATE USER EROB
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  ACCOUNT UNLOCK;
  -- 88 Roles for EROB 
  GRANT ADM_PARALLEL_EXECUTE_TASK TO EROB;
  GRANT APPLICATION_TRACE_VIEWER TO EROB;
  GRANT AQ_ADMINISTRATOR_ROLE TO EROB;
  GRANT AQ_USER_ROLE TO EROB;
  GRANT AUDIT_ADMIN TO EROB;
  GRANT AUDIT_VIEWER TO EROB;
  GRANT AUTHENTICATEDUSER TO EROB;
  GRANT CAPTURE_ADMIN TO EROB;
  GRANT CDB_DBA TO EROB;
  GRANT CONNECT TO EROB;
  GRANT CSW_USR_ROLE TO EROB;
  GRANT CTXAPP TO EROB;
  GRANT DATAPATCH_ROLE TO EROB;
  GRANT DATAPUMP_EXP_FULL_DATABASE TO EROB;
  GRANT DATAPUMP_IMP_FULL_DATABASE TO EROB;
  GRANT DBA TO EROB;
  GRANT DBFS_ROLE TO EROB;
  GRANT DBJAVASCRIPT TO EROB;
  GRANT DBMS_MDX_INTERNAL TO EROB;
  GRANT DV_ACCTMGR TO EROB;
  GRANT DV_ADMIN TO EROB;
  GRANT DV_AUDIT_CLEANUP TO EROB;
  GRANT DV_DATAPUMP_NETWORK_LINK TO EROB;
  GRANT DV_GOLDENGATE_ADMIN TO EROB;
  GRANT DV_GOLDENGATE_REDO_ACCESS TO EROB;
  GRANT DV_MONITOR TO EROB;
  GRANT DV_OWNER TO EROB;
  GRANT DV_PATCH_ADMIN TO EROB;
  GRANT DV_POLICY_OWNER TO EROB;
  GRANT DV_PUBLIC TO EROB;
  GRANT DV_REALM_OWNER TO EROB;
  GRANT DV_REALM_RESOURCE TO EROB;
  GRANT DV_SECANALYST TO EROB;
  GRANT DV_STREAMS_ADMIN TO EROB;
  GRANT DV_XSTREAM_ADMIN TO EROB;
  GRANT EJBCLIENT TO EROB;
  GRANT EM_EXPRESS_ALL TO EROB;
  GRANT EM_EXPRESS_BASIC TO EROB;
  GRANT EXECUTE_CATALOG_ROLE TO EROB;
  GRANT EXP_FULL_DATABASE TO EROB;
  GRANT GATHER_SYSTEM_STATISTICS TO EROB;
  GRANT GDS_CATALOG_SELECT TO EROB;
  GRANT GGSYS_ROLE TO EROB;
  GRANT GSMADMIN_ROLE TO EROB;
  GRANT GSMUSER_ROLE TO EROB;
  GRANT GSM_POOLADMIN_ROLE TO EROB;
  GRANT HS_ADMIN_EXECUTE_ROLE TO EROB;
  GRANT HS_ADMIN_ROLE TO EROB;
  GRANT HS_ADMIN_SELECT_ROLE TO EROB;
  GRANT IMP_FULL_DATABASE TO EROB;
  GRANT JAVADEBUGPRIV TO EROB;
  GRANT JAVAIDPRIV TO EROB;
  GRANT JAVASYSPRIV TO EROB;
  GRANT JAVAUSERPRIV TO EROB;
  GRANT JAVA_ADMIN TO EROB;
  GRANT JAVA_DEPLOY TO EROB;
  GRANT JMXSERVER TO EROB;
  GRANT LBAC_DBA TO EROB;
  GRANT LOGSTDBY_ADMINISTRATOR TO EROB;
  GRANT OEM_ADVISOR TO EROB;
  GRANT OEM_MONITOR TO EROB;
  GRANT OLAP_DBA TO EROB;
  GRANT OLAP_USER TO EROB;
  GRANT OLAP_XS_ADMIN TO EROB;
  GRANT OPTIMIZER_PROCESSING_RATE TO EROB;
  GRANT ORDADMIN TO EROB;
  GRANT PDB_DBA TO EROB;
  GRANT PROVISIONER TO EROB;
  GRANT RDFCTX_ADMIN TO EROB;
  GRANT RECOVERY_CATALOG_OWNER TO EROB;
  GRANT RECOVERY_CATALOG_OWNER_VPD TO EROB;
  GRANT RECOVERY_CATALOG_USER TO EROB;
  GRANT RESOURCE TO EROB;
  GRANT SCHEDULER_ADMIN TO EROB;
  GRANT SELECT_CATALOG_ROLE TO EROB;
  GRANT SODA_APP TO EROB;
  GRANT SPATIAL_CSW_ADMIN TO EROB;
  GRANT SYSUMF_ROLE TO EROB;
  GRANT WM_ADMIN_ROLE TO EROB;
  GRANT XDBADMIN TO EROB;
  GRANT XDB_SET_INVOKER TO EROB;
  GRANT XDB_WEBSERVICES TO EROB;
  GRANT XDB_WEBSERVICES_OVER_HTTP TO EROB;
  GRANT XDB_WEBSERVICES_WITH_PUBLIC TO EROB;
  GRANT XS_CACHE_ADMIN TO EROB;
  GRANT XS_CONNECT TO EROB;
  GRANT XS_NAMESPACE_ADMIN TO EROB;
  GRANT XS_SESSION_ADMIN TO EROB;
  ALTER USER EROB DEFAULT ROLE ALL;
  -- 1 System Privilege for EROB 
  GRANT UNLIMITED TABLESPACE TO EROB;


CREATE USER SYS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSTEM
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  ACCOUNT UNLOCK;
  -- 73 Roles for SYS 
  GRANT ADM_PARALLEL_EXECUTE_TASK TO SYS WITH ADMIN OPTION;
  GRANT APPLICATION_TRACE_VIEWER TO SYS WITH ADMIN OPTION;
  GRANT AQ_ADMINISTRATOR_ROLE TO SYS WITH ADMIN OPTION;
  GRANT AQ_USER_ROLE TO SYS WITH ADMIN OPTION;
  GRANT AUDIT_ADMIN TO SYS WITH ADMIN OPTION;
  GRANT AUDIT_VIEWER TO SYS WITH ADMIN OPTION;
  GRANT AUTHENTICATEDUSER TO SYS WITH ADMIN OPTION;
  GRANT CAPTURE_ADMIN TO SYS WITH ADMIN OPTION;
  GRANT CDB_DBA TO SYS WITH ADMIN OPTION;
  GRANT CONNECT TO SYS WITH ADMIN OPTION;
  GRANT CSW_USR_ROLE TO SYS WITH ADMIN OPTION;
  GRANT CTXAPP TO SYS WITH ADMIN OPTION;
  GRANT DATAPATCH_ROLE TO SYS WITH ADMIN OPTION;
  GRANT DATAPUMP_EXP_FULL_DATABASE TO SYS WITH ADMIN OPTION;
  GRANT DATAPUMP_IMP_FULL_DATABASE TO SYS WITH ADMIN OPTION;
  GRANT DBA TO SYS WITH ADMIN OPTION;
  GRANT DBFS_ROLE TO SYS WITH ADMIN OPTION;
  GRANT DBJAVASCRIPT TO SYS WITH ADMIN OPTION;
  GRANT DBMS_MDX_INTERNAL TO SYS WITH ADMIN OPTION;
  GRANT DV_REALM_OWNER TO SYS WITH ADMIN OPTION;
  GRANT DV_REALM_RESOURCE TO SYS WITH ADMIN OPTION;
  GRANT EJBCLIENT TO SYS WITH ADMIN OPTION;
  GRANT EM_EXPRESS_ALL TO SYS WITH ADMIN OPTION;
  GRANT EM_EXPRESS_BASIC TO SYS WITH ADMIN OPTION;
  GRANT EXECUTE_CATALOG_ROLE TO SYS WITH ADMIN OPTION;
  GRANT EXP_FULL_DATABASE TO SYS WITH ADMIN OPTION;
  GRANT GATHER_SYSTEM_STATISTICS TO SYS WITH ADMIN OPTION;
  GRANT GDS_CATALOG_SELECT TO SYS WITH ADMIN OPTION;
  GRANT GGSYS_ROLE TO SYS WITH ADMIN OPTION;
  GRANT GSMADMIN_ROLE TO SYS WITH ADMIN OPTION;
  GRANT GSMUSER_ROLE TO SYS WITH ADMIN OPTION;
  GRANT GSM_POOLADMIN_ROLE TO SYS WITH ADMIN OPTION;
  GRANT HS_ADMIN_EXECUTE_ROLE TO SYS WITH ADMIN OPTION;
  GRANT HS_ADMIN_ROLE TO SYS WITH ADMIN OPTION;
  GRANT HS_ADMIN_SELECT_ROLE TO SYS WITH ADMIN OPTION;
  GRANT IMP_FULL_DATABASE TO SYS WITH ADMIN OPTION;
  GRANT JAVADEBUGPRIV TO SYS WITH ADMIN OPTION;
  GRANT JAVAIDPRIV TO SYS WITH ADMIN OPTION;
  GRANT JAVASYSPRIV TO SYS WITH ADMIN OPTION;
  GRANT JAVAUSERPRIV TO SYS WITH ADMIN OPTION;
  GRANT JAVA_ADMIN TO SYS WITH ADMIN OPTION;
  GRANT JAVA_DEPLOY TO SYS WITH ADMIN OPTION;
  GRANT JMXSERVER TO SYS WITH ADMIN OPTION;
  GRANT LBAC_DBA TO SYS WITH ADMIN OPTION;
  GRANT LOGSTDBY_ADMINISTRATOR TO SYS WITH ADMIN OPTION;
  GRANT OEM_ADVISOR TO SYS WITH ADMIN OPTION;
  GRANT OEM_MONITOR TO SYS WITH ADMIN OPTION;
  GRANT OLAP_DBA TO SYS WITH ADMIN OPTION;
  GRANT OLAP_USER TO SYS WITH ADMIN OPTION;
  GRANT OLAP_XS_ADMIN TO SYS WITH ADMIN OPTION;
  GRANT OPTIMIZER_PROCESSING_RATE TO SYS WITH ADMIN OPTION;
  GRANT ORDADMIN TO SYS WITH ADMIN OPTION;
  GRANT PDB_DBA TO SYS WITH ADMIN OPTION;
  GRANT PROVISIONER TO SYS WITH ADMIN OPTION;
  GRANT RDFCTX_ADMIN TO SYS WITH ADMIN OPTION;
  GRANT RECOVERY_CATALOG_OWNER TO SYS WITH ADMIN OPTION;
  GRANT RECOVERY_CATALOG_OWNER_VPD TO SYS WITH ADMIN OPTION;
  GRANT RECOVERY_CATALOG_USER TO SYS WITH ADMIN OPTION;
  GRANT RESOURCE TO SYS WITH ADMIN OPTION;
  GRANT SCHEDULER_ADMIN TO SYS WITH ADMIN OPTION;
  GRANT SELECT_CATALOG_ROLE TO SYS WITH ADMIN OPTION;
  GRANT SODA_APP TO SYS WITH ADMIN OPTION;
  GRANT SPATIAL_CSW_ADMIN TO SYS WITH ADMIN OPTION;
  GRANT SYSUMF_ROLE TO SYS WITH ADMIN OPTION;
  GRANT XDBADMIN TO SYS WITH ADMIN OPTION;
  GRANT XDB_SET_INVOKER TO SYS WITH ADMIN OPTION;
  GRANT XDB_WEBSERVICES TO SYS WITH ADMIN OPTION;
  GRANT XDB_WEBSERVICES_OVER_HTTP TO SYS WITH ADMIN OPTION;
  GRANT XDB_WEBSERVICES_WITH_PUBLIC TO SYS WITH ADMIN OPTION;
  GRANT XS_CACHE_ADMIN TO SYS WITH ADMIN OPTION;
  GRANT XS_CONNECT TO SYS WITH ADMIN OPTION;
  GRANT XS_NAMESPACE_ADMIN TO SYS WITH ADMIN OPTION;
  GRANT XS_SESSION_ADMIN TO SYS WITH ADMIN OPTION;
  ALTER USER SYS DEFAULT ROLE ALL;
  -- 237 System Privileges for SYS 
  GRANT ADMINISTER ANY SQL TUNING SET TO SYS;
  GRANT ADMINISTER DATABASE TRIGGER TO SYS;
  BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'SYS', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => FALSE);
END;
/
  GRANT ADMINISTER SQL MANAGEMENT OBJECT TO SYS;
  GRANT ADMINISTER SQL TUNING SET TO SYS;
  GRANT ADVISOR TO SYS;
  GRANT ALTER ANY ANALYTIC VIEW TO SYS;
  GRANT ALTER ANY ASSEMBLY TO SYS;
  GRANT ALTER ANY ATTRIBUTE DIMENSION TO SYS;
  GRANT ALTER ANY CLUSTER TO SYS;
  GRANT ALTER ANY CUBE TO SYS;
  GRANT ALTER ANY CUBE BUILD PROCESS TO SYS;
  GRANT ALTER ANY CUBE DIMENSION TO SYS;
  GRANT ALTER ANY DIMENSION TO SYS;
  GRANT ALTER ANY EDITION TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT ALTER ANY HIERARCHY TO SYS;
  GRANT ALTER ANY INDEX TO SYS;
  GRANT ALTER ANY INDEXTYPE TO SYS;
  GRANT ALTER ANY LIBRARY TO SYS;
  GRANT ALTER ANY MATERIALIZED VIEW TO SYS;
  GRANT ALTER ANY MEASURE FOLDER TO SYS;
  GRANT ALTER ANY MINING MODEL TO SYS;
  GRANT ALTER ANY OPERATOR TO SYS;
  GRANT ALTER ANY OUTLINE TO SYS;
  GRANT ALTER ANY PROCEDURE TO SYS;
  GRANT ALTER ANY ROLE TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE_SET,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT ALTER ANY SEQUENCE TO SYS;
  GRANT ALTER ANY SQL PROFILE TO SYS;
  GRANT ALTER ANY SQL TRANSLATION PROFILE TO SYS;
  GRANT ALTER ANY TABLE TO SYS;
  GRANT ALTER ANY TRIGGER TO SYS;
  GRANT ALTER ANY TYPE TO SYS;
  GRANT ALTER DATABASE TO SYS;
  GRANT ALTER LOCKDOWN PROFILE TO SYS;
  GRANT ALTER PROFILE TO SYS;
  GRANT ALTER RESOURCE COST TO SYS;
  GRANT ALTER ROLLBACK SEGMENT TO SYS;
  GRANT ALTER SESSION TO SYS;
  GRANT ALTER SYSTEM TO SYS;
  GRANT ALTER TABLESPACE TO SYS;
  GRANT ALTER USER TO SYS;
  GRANT ANALYZE ANY TO SYS;
  GRANT AUDIT ANY TO SYS;
  GRANT AUDIT SYSTEM TO SYS;
  GRANT BACKUP ANY TABLE TO SYS;
  GRANT BECOME USER TO SYS;
  GRANT CHANGE NOTIFICATION TO SYS;
  GRANT COMMENT ANY MINING MODEL TO SYS;
  GRANT COMMENT ANY TABLE TO SYS;
  GRANT CREATE ANALYTIC VIEW TO SYS;
  GRANT CREATE ANY ANALYTIC VIEW TO SYS;
  GRANT CREATE ANY ASSEMBLY TO SYS;
  GRANT CREATE ANY ATTRIBUTE DIMENSION TO SYS;
  GRANT CREATE ANY CLUSTER TO SYS;
  GRANT CREATE ANY CONTEXT TO SYS;
  GRANT CREATE ANY CREDENTIAL TO SYS;
  GRANT CREATE ANY CUBE TO SYS;
  GRANT CREATE ANY CUBE BUILD PROCESS TO SYS;
  GRANT CREATE ANY CUBE DIMENSION TO SYS;
  GRANT CREATE ANY DIMENSION TO SYS;
  GRANT CREATE ANY DIRECTORY TO SYS;
  GRANT CREATE ANY EDITION TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT CREATE ANY HIERARCHY TO SYS;
  GRANT CREATE ANY INDEX TO SYS;
  GRANT CREATE ANY INDEXTYPE TO SYS;
  GRANT CREATE ANY JOB TO SYS;
  GRANT CREATE ANY LIBRARY TO SYS;
  GRANT CREATE ANY MATERIALIZED VIEW TO SYS;
  GRANT CREATE ANY MEASURE FOLDER TO SYS;
  GRANT CREATE ANY MINING MODEL TO SYS;
  GRANT CREATE ANY OPERATOR TO SYS;
  GRANT CREATE ANY OUTLINE TO SYS;
  GRANT CREATE ANY PROCEDURE TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE_SET,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT CREATE ANY SEQUENCE TO SYS;
  GRANT CREATE ANY SQL PROFILE TO SYS;
  GRANT CREATE ANY SQL TRANSLATION PROFILE TO SYS;
  GRANT CREATE ANY SYNONYM TO SYS;
  GRANT CREATE ANY TABLE TO SYS;
  GRANT CREATE ANY TRIGGER TO SYS;
  GRANT CREATE ANY TYPE TO SYS;
  GRANT CREATE ANY VIEW TO SYS;
  GRANT CREATE ASSEMBLY TO SYS;
  GRANT CREATE ATTRIBUTE DIMENSION TO SYS;
  GRANT CREATE CLUSTER TO SYS;
  GRANT CREATE CREDENTIAL TO SYS;
  GRANT CREATE CUBE TO SYS;
  GRANT CREATE CUBE BUILD PROCESS TO SYS;
  GRANT CREATE CUBE DIMENSION TO SYS;
  GRANT CREATE DATABASE LINK TO SYS;
  GRANT CREATE DIMENSION TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_EVALUATION_CONTEXT_OBJ,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT CREATE EXTERNAL JOB TO SYS;
  GRANT CREATE HIERARCHY TO SYS;
  GRANT CREATE INDEXTYPE TO SYS;
  GRANT CREATE JOB TO SYS;
  GRANT CREATE LIBRARY TO SYS;
  GRANT CREATE LOCKDOWN PROFILE TO SYS;
  GRANT CREATE MATERIALIZED VIEW TO SYS;
  GRANT CREATE MEASURE FOLDER TO SYS;
  GRANT CREATE MINING MODEL TO SYS;
  GRANT CREATE OPERATOR TO SYS;
  GRANT CREATE PLUGGABLE DATABASE TO SYS;
  GRANT CREATE PROCEDURE TO SYS;
  GRANT CREATE PROFILE TO SYS;
  GRANT CREATE PUBLIC DATABASE LINK TO SYS;
  GRANT CREATE PUBLIC SYNONYM TO SYS;
  GRANT CREATE ROLE TO SYS;
  GRANT CREATE ROLLBACK SEGMENT TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_OBJ,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_SET_OBJ,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT CREATE SEQUENCE TO SYS;
  GRANT CREATE SESSION TO SYS;
  GRANT CREATE SQL TRANSLATION PROFILE TO SYS;
  GRANT CREATE SYNONYM TO SYS;
  GRANT CREATE TABLE TO SYS;
  GRANT CREATE TABLESPACE TO SYS;
  GRANT CREATE TRIGGER TO SYS;
  GRANT CREATE TYPE TO SYS;
  GRANT CREATE USER TO SYS;
  GRANT CREATE VIEW TO SYS;
  GRANT DEBUG ANY PROCEDURE TO SYS;
    GRANT DEBUG CONNECT SESSION TO SYS;
  GRANT DELETE ANY CUBE DIMENSION TO SYS;
  GRANT DELETE ANY MEASURE FOLDER TO SYS;
  GRANT DELETE ANY TABLE TO SYS WITH ADMIN OPTION;
  BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'DEQUEUE_ANY',
  GRANTEE      => 'SYS',
  ADMIN_OPTION => TRUE);
END;
/
  GRANT DROP ANY ANALYTIC VIEW TO SYS;
  GRANT DROP ANY ASSEMBLY TO SYS;
  GRANT DROP ANY ATTRIBUTE DIMENSION TO SYS;
  GRANT DROP ANY CLUSTER TO SYS;
  GRANT DROP ANY CONTEXT TO SYS;
  GRANT DROP ANY CUBE TO SYS;
  GRANT DROP ANY CUBE BUILD PROCESS TO SYS;
  GRANT DROP ANY CUBE DIMENSION TO SYS;
  GRANT DROP ANY DIMENSION TO SYS;
  GRANT DROP ANY DIRECTORY TO SYS;
  GRANT DROP ANY EDITION TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT DROP ANY HIERARCHY TO SYS;
  GRANT DROP ANY INDEX TO SYS;
  GRANT DROP ANY INDEXTYPE TO SYS;
  GRANT DROP ANY LIBRARY TO SYS;
  GRANT DROP ANY MATERIALIZED VIEW TO SYS;
  GRANT DROP ANY MEASURE FOLDER TO SYS;
  GRANT DROP ANY MINING MODEL TO SYS;
  GRANT DROP ANY OPERATOR TO SYS;
  GRANT DROP ANY OUTLINE TO SYS;
  GRANT DROP ANY PROCEDURE TO SYS;
  GRANT DROP ANY ROLE TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE_SET,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT DROP ANY SEQUENCE TO SYS;
  GRANT DROP ANY SQL PROFILE TO SYS;
  GRANT DROP ANY SQL TRANSLATION PROFILE TO SYS;
  GRANT DROP ANY SYNONYM TO SYS;
  GRANT DROP ANY TABLE TO SYS;
  GRANT DROP ANY TRIGGER TO SYS;
  GRANT DROP ANY TYPE TO SYS;
  GRANT DROP ANY VIEW TO SYS;
  GRANT DROP LOCKDOWN PROFILE TO SYS;
  GRANT DROP PROFILE TO SYS;
  GRANT DROP PUBLIC DATABASE LINK TO SYS;
  GRANT DROP PUBLIC SYNONYM TO SYS;
  GRANT DROP ROLLBACK SEGMENT TO SYS;
  GRANT DROP TABLESPACE TO SYS;
  GRANT DROP USER TO SYS;
  GRANT EM EXPRESS CONNECT TO SYS;
  BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'ENQUEUE_ANY',
  GRANTEE      => 'SYS',
  ADMIN_OPTION => TRUE);
END;
/
  GRANT EXECUTE ANY ASSEMBLY TO SYS;
  GRANT EXECUTE ANY CLASS TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT EXECUTE ANY INDEXTYPE TO SYS;
  GRANT EXECUTE ANY LIBRARY TO SYS;
  GRANT EXECUTE ANY OPERATOR TO SYS;
  GRANT EXECUTE ANY PROCEDURE TO SYS;
  GRANT EXECUTE ANY PROGRAM TO SYS;
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE_SET,
  GRANTEE      => 'SYS',
  GRANT_OPTION => TRUE);
END;
/
  GRANT EXECUTE ANY TYPE TO SYS;
  GRANT EXECUTE ASSEMBLY TO SYS;
  GRANT EXEMPT DDL REDACTION POLICY TO SYS;
  GRANT EXEMPT DML REDACTION POLICY TO SYS;
  GRANT EXPORT FULL DATABASE TO SYS;
  GRANT FLASHBACK ANY TABLE TO SYS;
  GRANT FLASHBACK ARCHIVE ADMINISTER TO SYS;
  GRANT FORCE ANY TRANSACTION TO SYS;
  GRANT FORCE TRANSACTION TO SYS;
  GRANT GLOBAL QUERY REWRITE TO SYS;
  GRANT GRANT ANY OBJECT PRIVILEGE TO SYS;
  GRANT GRANT ANY PRIVILEGE TO SYS;
  GRANT GRANT ANY ROLE TO SYS;
  GRANT IMPORT FULL DATABASE TO SYS;
  GRANT INHERIT ANY PRIVILEGES TO SYS;
  GRANT INSERT ANY CUBE DIMENSION TO SYS;
  GRANT INSERT ANY MEASURE FOLDER TO SYS;
  GRANT INSERT ANY TABLE TO SYS WITH ADMIN OPTION;
  GRANT LOCK ANY TABLE TO SYS;
  GRANT LOGMINING TO SYS;
  GRANT MANAGE ANY FILE GROUP TO SYS;
  BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'SYS',
  ADMIN_OPTION => TRUE);
END;
/
  GRANT MANAGE FILE GROUP TO SYS;
  GRANT MANAGE SCHEDULER TO SYS;
  GRANT MANAGE TABLESPACE TO SYS;
  GRANT MERGE ANY VIEW TO SYS;
  GRANT ON COMMIT REFRESH TO SYS;
  GRANT QUERY REWRITE TO SYS;
  GRANT READ ANY FILE GROUP TO SYS;
  GRANT READ ANY TABLE TO SYS WITH ADMIN OPTION;
  GRANT REDEFINE ANY TABLE TO SYS;
  GRANT RESTRICTED SESSION TO SYS;
  GRANT RESUMABLE TO SYS;
  GRANT SELECT ANY CUBE TO SYS;
  GRANT SELECT ANY CUBE BUILD PROCESS TO SYS;
  GRANT SELECT ANY CUBE DIMENSION TO SYS;
  GRANT SELECT ANY MEASURE FOLDER TO SYS;
  GRANT SELECT ANY MINING MODEL TO SYS;
  GRANT SELECT ANY SEQUENCE TO SYS;
  GRANT SELECT ANY TABLE TO SYS WITH ADMIN OPTION;
  GRANT SELECT ANY TRANSACTION TO SYS;
  GRANT SET CONTAINER TO SYS;
  GRANT UNDER ANY TABLE TO SYS;
  GRANT UNDER ANY TYPE TO SYS;
  GRANT UNDER ANY VIEW TO SYS;
  GRANT UNLIMITED TABLESPACE TO SYS;
  GRANT UPDATE ANY CUBE TO SYS;
  GRANT UPDATE ANY CUBE BUILD PROCESS TO SYS;
  GRANT UPDATE ANY CUBE DIMENSION TO SYS;
  GRANT UPDATE ANY TABLE TO SYS WITH ADMIN OPTION;
  GRANT USE ANY JOB RESOURCE TO SYS;
  GRANT USE ANY SQL TRANSLATION PROFILE TO SYS;
  -- 8 Object Privileges for SYS 
    GRANT EXECUTE ON CTXSYS.SYS_PLSQL_A130829_606_1 TO SYS WITH GRANT OPTION;
    GRANT EXECUTE ON DVSYS.CONFIGURE_DV_INTERNAL TO SYS;
    GRANT SELECT ON DVSYS.DBA_DV_STATUS TO SYS;
    GRANT EXECUTE ON LBACSYS.LBAC_SERVICES TO SYS;
    GRANT EXECUTE ON LBACSYS.LBAC_STANDARD TO SYS;
    GRANT SELECT ON OUTLN.OL$ TO SYS WITH GRANT OPTION;
    GRANT SELECT ON OUTLN.OL$HINTS TO SYS WITH GRANT OPTION;
    GRANT SELECT ON OUTLN.OL$NODES TO SYS WITH GRANT OPTION;
  -- 31 Java Privileges for SYS 
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'createClassLoader'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_POLICY_PERMISSION(
     grantee           => 'SYS'
    ,permission_schema => 'SYS'
    ,permission_type   => 'oracle.aurora.rdbms.security.PolicyTablePermission'
    ,permission_name   => '0:oracle.aurora.rdbms.security.PolicyTablePermission#*'
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.net.NetPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.security.SecurityPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:javax.net.ssl.SSLPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.util.PropertyPermission'
    ,permission_name   => '*'
    ,permission_action => 'write'
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.lang.reflect.ReflectPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.security.AllPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'loadLibrary.xaNative'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'loadLibrary.corejava'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'loadLibrary.jox10oraawt'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'loadLibrary.oraioser'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'loadLibrary.corejava_d'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.lang.RuntimePermission'
    ,permission_name   => 'loadLibrary.orajaas'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:oracle.aurora.security.JServerPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:oracle.aurora.security.JServerPermission'
    ,permission_name   => 'LoadClassInPackage.java.*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:oracle.aurora.security.JServerPermission'
    ,permission_name   => 'LoadClassInPackage.oracle.aurora.*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:oracle.aurora.security.JServerPermission'
    ,permission_name   => 'LoadClassInPackage.oracle.jdbc.*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.sql.SQLPermission'
    ,permission_name   => 'deregisterDriver'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:java.util.logging.LoggingPermission'
    ,permission_name   => 'control'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:javax.security.auth.AuthPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:javax.management.MBeanServerPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:javax.management.MBeanTrustPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:javax.management.ManagementPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:javax.management.MBeanPermission'
    ,permission_name   => '*'
    ,permission_action => ''
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:javax.security.auth.kerberos.ServicePermission'
    ,permission_name   => '*'
    ,permission_action => 'accept,initiate'
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYS'
    ,permission_type   => 'SYS:oracle.aurora.rdbms.HandlePermission'
    ,permission_name   => '*'
    ,permission_action => '*'
    ,key               => KEYNUM
    );
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_POLICY_PERMISSION(
     grantee           => 'SYS'
    ,permission_schema => 'SYS'
    ,permission_type   => 'oracle.aurora.rdbms.security.PolicyTablePermission'
    ,permission_name   => '0:java.lang.RuntimePermission#loadLibrary.ordim12'
    ,key               => KEYNUM
    );
  SYS.DBMS_JAVA.DISABLE_PERMISSION
    (key => KEYNUM);
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_POLICY_PERMISSION(
     grantee           => 'SYS'
    ,permission_schema => 'SYS'
    ,permission_type   => 'oracle.aurora.rdbms.security.PolicyTablePermission'
    ,permission_name   => '0:java.lang.RuntimePermission#loadLibrary.oraordim12'
    ,key               => KEYNUM
    );
  SYS.DBMS_JAVA.DISABLE_PERMISSION
    (key => KEYNUM);
END;
/
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_POLICY_PERMISSION(
     grantee           => 'SYS'
    ,permission_schema => 'SYS'
    ,permission_type   => 'oracle.aurora.rdbms.security.PolicyTablePermission'
    ,permission_name   => '0:java.lang.RuntimePermission#loadLibrary.clib_jiio'
    ,key               => KEYNUM
    );
  SYS.DBMS_JAVA.DISABLE_PERMISSION
    (key => KEYNUM);
END;
/


CREATE USER SYSTEM
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE SYSTEM
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  ACCOUNT LOCK;
  -- 2 Roles for SYSTEM 
  GRANT AQ_ADMINISTRATOR_ROLE TO SYSTEM WITH ADMIN OPTION;
  GRANT DBA TO SYSTEM;
  ALTER USER SYSTEM DEFAULT ROLE ALL;
  -- 8 System Privileges for SYSTEM 
  GRANT CREATE MATERIALIZED VIEW TO SYSTEM;
  GRANT CREATE TABLE TO SYSTEM;
  BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'DEQUEUE_ANY',
  GRANTEE      => 'SYSTEM',
  ADMIN_OPTION => TRUE);
END;
/
  BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'ENQUEUE_ANY',
  GRANTEE      => 'SYSTEM',
  ADMIN_OPTION => TRUE);
END;
/
  GRANT GLOBAL QUERY REWRITE TO SYSTEM;
  BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'SYSTEM',
  ADMIN_OPTION => TRUE);
END;
/
  GRANT SELECT ANY TABLE TO SYSTEM;
  GRANT UNLIMITED TABLESPACE TO SYSTEM;
  -- 27 Object Privileges for SYSTEM 
    GRANT EXECUTE ON SYS.CHECK_UPGRADE TO SYSTEM;
    GRANT EXECUTE ON SYS.DBMS_ALERT TO SYSTEM;
    GRANT EXECUTE ON SYS.DBMS_AQ TO SYSTEM WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.DBMS_AQADM TO SYSTEM WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.DBMS_AQELM TO SYSTEM WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.DBMS_AQ_IMPORT_INTERNAL TO SYSTEM WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.DBMS_LOGMNR_INTERNAL TO SYSTEM;
    GRANT EXECUTE ON SYS.DBMS_RULE_EXIMP TO SYSTEM WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.DBMS_SYSTEM TO SYSTEM;
    GRANT EXECUTE ON SYS.DBMS_SYS_ERROR TO SYSTEM;
    GRANT EXECUTE ON SYS.DBMS_TRANSFORM_EXIMP TO SYSTEM WITH GRANT OPTION;
    GRANT EXECUTE ON SYS.LOGMNR_DICT_CACHE TO SYSTEM;
    GRANT EXECUTE ON SYS.LOGMNR_GET_GT_PROTOCOL TO SYSTEM;
    GRANT SELECT ON SYS.LOGMNR_GTCS_SUPPORT TO SYSTEM;
    GRANT EXECUTE ON SYS.LOGMNR_GTLO3 TO SYSTEM;
    GRANT USE ON EDITION ORA$BASE TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.X$PT6A0WVGOTVN9KD9IOC5OF8P6HD7 TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.XDB$ACL TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.XDB$CHECKOUTS TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.XDB$CONFIG TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.XDB$D_LINK TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.XDB$H_INDEX TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.XDB$H_LINK TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.XDB$NLOCKS TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.XDB$RESCONFIG TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE, INSERT, SELECT, UPDATE ON XDB.XDB$RESOURCE TO SYSTEM WITH GRANT OPTION;
    GRANT DELETE ON XDB.XDB$TSETMAP TO SYSTEM;
  -- 1 Java Privilege for SYSTEM 
DECLARE
 KEYNUM NUMBER;
BEGIN
  SYS.DBMS_JAVA.GRANT_PERMISSION(
     grantee           => 'SYSTEM'
    ,permission_type   => 'SYS:java.io.FilePermission'
    ,permission_name   => '<<ALL FILES>>'
    ,permission_action => 'read'
    ,key               => KEYNUM
    );
END;
/
  -- 1 Resoure Group Privilege for SYSTEM 
BEGIN
  SYS.DBMS_RESOURCE_MANAGER.clear_pending_area();
  SYS.DBMS_RESOURCE_MANAGER.create_pending_area();
  SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SWITCH_CONSUMER_GROUP
    ('SYSTEM','SYS_GROUP',FALSE);
  SYS.DBMS_RESOURCE_MANAGER.submit_pending_area();
END;
/
BEGIN
  SYS.DBMS_RESOURCE_MANAGER.SET_INITIAL_CONSUMER_GROUP
    ('SYSTEM','SYS_GROUP');
END;
/


CREATE OR REPLACE TRIGGER SYS.aw_drop_trg AFTER DROP ON DATABASE
BEGIN
  aw_drop_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner);
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.aw_ren_trg AFTER RENAME ON DATABASE
BEGIN
  aw_ren_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner);
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.aw_trunc_trg AFTER TRUNCATE ON DATABASE
BEGIN
  aw_trunc_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner);
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.CDC_ALTER_CTABLE_BEFORE
  BEFORE
    ALTER ON DATABASE
DISABLE
BEGIN
      /* NOP UNLESS A TABLE OBJECT */
      IF dictionary_obj_type = 'TABLE'
      THEN
        sys.dbms_cdc_ipublish.change_table_trigger(dictionary_obj_owner,dictionary_obj_name,sysevent);
      END IF;
      END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.CDC_CREATE_CTABLE_AFTER
  AFTER
    CREATE ON DATABASE
DISABLE
BEGIN
      /* NOP UNLESS A TABLE OBJECT */
      IF dictionary_obj_type = 'TABLE'
      THEN
        sys.dbms_cdc_ipublish.change_table_trigger(dictionary_obj_owner,dictionary_obj_name,sysevent);
      END IF;
      END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.CDC_CREATE_CTABLE_BEFORE
  BEFORE
    CREATE ON DATABASE
DISABLE
BEGIN
      /* NOP UNLESS A TABLE OBJECT */
      IF dictionary_obj_type = 'TABLE'
      THEN
        sys.dbms_cdc_ipublish.change_table_trigger(dictionary_obj_owner,dictionary_obj_name,'LOCK');
      END IF;
      END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.CDC_DROP_CTABLE_BEFORE
  BEFORE
    DROP ON DATABASE
DISABLE
BEGIN
      /* NOP UNLESS A TABLE OBJECT */
      IF dictionary_obj_type = 'TABLE'
      THEN
        sys.dbms_cdc_ipublish.change_table_trigger(dictionary_obj_owner,dictionary_obj_name,sysevent);
      END IF;
      END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.LOGMNRGGC_TRIGGER
BEFORE ddl ON DATABASE
DISABLE
CALL logmnr_ddl_trigger_proc
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.OJDS$ROLE_TRIGGER$ after drop on database
WHEN (
ora_dict_obj_type='ROLE'
      )
begin
    ojds_context.role_dropped(ora_dict_obj_name);
  exception -- if not present then ignore
  when others then
  if sqlcode not in (-00604, -04063, -06508) then raise; end if;
  end;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.SYSLSBY_EDS_DDL_TRIG
  AFTER CREATE OR ALTER ON DATABASE
DISABLE
DECLARE
   DGL_STATUS_EDS_EVOLVING     EXCEPTION;
   PRAGMA               EXCEPTION_INIT(DGL_STATUS_EDS_EVOLVING, -16310);
   sql_text             ora_name_list_t;
   t_stmt               CLOB;
   stmt                 CLOB;
   n                    NUMBER;
   dummy                NUMBER;
   pos		        NUMBER;
   evolve               BOOLEAN := FALSE;
   table_owner          VARCHAR2(140);
   table_ownerQ         VARCHAR2(140);
   table_name           VARCHAR2(140);
   table_nameQ          VARCHAR2(140);
   dbrole               VARCHAR2(80);
   state                VARCHAR2(255);
   job_stmt             CLOB;
   l_xid_str            VARCHAR2(22);
BEGIN
   -- only applicable on primary
   SELECT database_role INTO dbrole FROM v$database;
   IF dbrole != 'PRIMARY' THEN
      RETURN;
   END IF;

   -- put SQL into single buffer
   dummy := ora_sql_txt(sql_text);
   t_stmt := NULL;
   FOR i IN 1..dummy LOOP
      t_stmt := t_stmt || sql_text(i);
   END LOOP;

   -- handle CREATE UNIQUE INDEX which requires digging out table and owner
   IF ora_sysevent = 'CREATE' THEN
      IF ora_dict_obj_type = 'INDEX' THEN
	 SELECT INSTR(UPPER(t_stmt), ' UNIQUE ') INTO pos FROM dual;
	 IF pos = 0 THEN
	    RETURN;
	 END IF;

         -- only interested in user cursors
         dbms_internal_logstdby.eds_user_cursor(evolve,
                                                table_owner,
                                                table_name);

      END IF;

   -- otherwise anything other than ALTER TABLE is uninteresting
   ELSE
      IF ora_sysevent != 'ALTER' OR ora_dict_obj_type != 'TABLE' THEN
         RETURN;
      END IF;

      -- look for RENAME token to eliminate DROP TABLE lacking a PURGE which
      -- comes in as an ALTER TABLE RENAME TO
      SELECT INSTR(UPPER(t_stmt), ' RENAME TO ') INTO pos FROM dual;
      IF pos != 0 THEN
         RETURN;
      END IF;

      evolve := TRUE;
      table_owner := ora_dict_obj_owner;
      table_name :=  ora_dict_obj_name;
   END IF;

   -- if its an EDS table and evolve not already started then start one
   IF evolve THEN
      stmt := 'select state from system.logstdby$eds_tables where owner=:1' ||
              ' and table_name=:2';
      BEGIN
	 EXECUTE IMMEDIATE stmt INTO state USING table_owner, table_name;
      EXCEPTION
         WHEN others THEN state := NULL;
      END;
      IF state IS NOT NULL THEN
	 IF state = 'EVOLVING' THEN
	    RAISE DGL_STATUS_EDS_EVOLVING;
	 END IF;
	 table_ownerQ := DBMS_ASSERT.ENQUOTE_NAME(table_owner,FALSE);
	 table_nameQ := DBMS_ASSERT.ENQUOTE_NAME(table_name,FALSE);

          -- start the evolve
	 DBMS_LOGSTDBY.EDS_EVOLVE_MANUAL(
                options => 'START',
 	        table_owner => table_ownerQ,
		table_name => table_nameQ
                );

         -- schedule the evolve finish
         SELECT syslsby_eds_ddl_seq.NEXTVAL INTO n FROM DUAL;
         l_xid_str := dbms_transaction.local_transaction_id();
         job_stmt := 'BEGIN DBMS_INTERNAL_LOGSTDBY.EDS_EVOLVE(' ||
                DBMS_ASSERT.ENQUOTE_LITERAL(replace(table_ownerQ,'''',''''''))
                 || ',' ||
                DBMS_ASSERT.ENQUOTE_LITERAL(replace(table_nameQ,'''',''''''))
                 || ',' ||
                DBMS_ASSERT.ENQUOTE_LITERAL(l_xid_str) ||
                '); END;';
         dbms_system.ksdwrt(dbms_system.alert_file,
                'LOGSTDBY: performing an EDS evolve in response to DDL');
         DBMS_SCHEDULER.CREATE_JOB(
              job_name => 'SYSLSBY_EDS_DDL_JOB_' || n,
              job_type => 'PLSQL_BLOCK',
              job_action => job_stmt,
              enabled => TRUE
              );
      END IF;
   END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER SYS.XDB_PI_TRIG
BEFORE DROP OR TRUNCATE on DATABASE
BEGIN
  BEGIN
    IF (sys.is_vpd_enabled(sys.dictionary_obj_owner, sys.dictionary_obj_name, xdb.DBMS_XDBZ.IS_ENABLED_CONTENTS)) THEN
      xdb.XDB_PITRIG_PKG.pitrig_truncate(sys.dictionary_obj_owner, sys.dictionary_obj_name);
    ELSIF (sys.is_vpd_enabled(sys.dictionary_obj_owner, sys.dictionary_obj_name, xdb.DBMS_XDBZ.IS_ENABLED_RESMETADATA)) THEN
      xdb.XDB_PITRIG_PKG.pitrig_dropmetadata(sys.dictionary_obj_owner, sys.dictionary_obj_name);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
     null;
  END;
END;
/
SHOW ERRORS;